{
    "docs": [
        {
            "location": "/", 
            "text": "PEMBELAJARAN MAGANG PT LINTANG KAWURYAN MALANG\n\n\n\n\nDokumentasi Pembelajaran Magang di PT Lintang Kawuryan Malang\n\n\nSelamat datang di dokumentasi pembelajaran magang di PT Lintang Kawuryan Malang.\nDokumentasi ini dibuat untuk rangkuman pembelajaran supaya mempermudah proses pembelajaran selama magang berlangsung.\n\n\n\n\nModul Pembelajaran\n\n\nModul Pembelajaran dibagi dengan beberapa tema :\n\n\n1) Tes Magang\n\n\n\n\nTes Magang\n\n\n\n\n2) SQL\n\n\n\n\nSQL\n\n\nSQL Select\n\n\nSQL Select Distinct\n\n\nSQL Where\n\n\nSQL And, Or, Not\n\n\nSQL Order By\n\n\nSQL Alias\n\n\nSQL Join\n\n\nSQL Inner Join\n\n\nSQL Left Join\n\n\nSQL Right Join\n\n\nSQL Fungsi\n\n\nSQL Fungsi Tanggal\n\n\nSQL Operator\n\n\n\n\n3) PHP\n\n\n\n\nPHP\n\n\n\n\nProsedur dan Fungsi\n\n\n\n\nProsedur Fungsi\n\n\n\n\nIncrement\n\n\n\n\nIncrement\n\n\n\n\nPSR\n\n\n\n\nPSR\n\n\n\n\nLooping\n\n\n\n\nLooping\n\n\nFor\n\n\nWhile\n\n\nDo While\n\n\nForeach\n\n\n\n\nKeyword PHP\n\n\n\n\nKeyword PHP\n\n\n\n\nOOP\n\n\n\n\nOOP\n\n\n\n\n4) Dokumen Generator\n\n\n\n\nDokumen Generator\n\n\n\n\nMkDocs\n\n\n\n\nMkDocs\n\n\n\n\n5) Web Server\n\n\n\n\nWeb Server\n\n\n\n\nPanduan Installasi \n\n\n\n\nPanduan Installasi\n\n\n\n\nWebsite\n\n\n\n\nWebsite\n\n\n\n\nXampp\n\n\n\n\nXAMPP\n\n\n\n\n6) Virtual Box\n\n\n\n\nVirtual Box\n\n\n\n\n7) Linux Ubuntu\n\n\n\n\nLinux Ubuntu\n\n\n\n\nCommandLine\n\n\n\n\nCommandLine\n\n\n\n\n8) GitHub\n\n\n\n\nGitHub\n\n\n\n\n9) Laravel\n\n\n\n\nLaravel", 
            "title": "Home"
        }, 
        {
            "location": "/#pembelajaran-magang-pt-lintang-kawuryan-malang", 
            "text": "", 
            "title": "PEMBELAJARAN MAGANG PT LINTANG KAWURYAN MALANG"
        }, 
        {
            "location": "/#dokumentasi-pembelajaran-magang-di-pt-lintang-kawuryan-malang", 
            "text": "Selamat datang di dokumentasi pembelajaran magang di PT Lintang Kawuryan Malang.\nDokumentasi ini dibuat untuk rangkuman pembelajaran supaya mempermudah proses pembelajaran selama magang berlangsung.", 
            "title": "Dokumentasi Pembelajaran Magang di PT Lintang Kawuryan Malang"
        }, 
        {
            "location": "/#modul-pembelajaran", 
            "text": "Modul Pembelajaran dibagi dengan beberapa tema :  1) Tes Magang   Tes Magang   2) SQL   SQL  SQL Select  SQL Select Distinct  SQL Where  SQL And, Or, Not  SQL Order By  SQL Alias  SQL Join  SQL Inner Join  SQL Left Join  SQL Right Join  SQL Fungsi  SQL Fungsi Tanggal  SQL Operator   3) PHP   PHP   Prosedur dan Fungsi   Prosedur Fungsi   Increment   Increment   PSR   PSR   Looping   Looping  For  While  Do While  Foreach   Keyword PHP   Keyword PHP   OOP   OOP   4) Dokumen Generator   Dokumen Generator   MkDocs   MkDocs   5) Web Server   Web Server   Panduan Installasi    Panduan Installasi   Website   Website   Xampp   XAMPP   6) Virtual Box   Virtual Box   7) Linux Ubuntu   Linux Ubuntu   CommandLine   CommandLine   8) GitHub   GitHub   9) Laravel   Laravel", 
            "title": "Modul Pembelajaran"
        }, 
        {
            "location": "/menu/tes_magang/tesMagang/", 
            "text": "Tes Magang PT. Lintang Kawuryan Malang\n\n\n\n\nTes Magang\n\n\n\n\n\n\nSoal\n\n\na. Buatlah Relasi Database                                                  \n\n\n \n\n\nb. Tampilkan nama provinsi, nama kabupaten, jumlah penduduk menurut nama kabupaten\n\n \n\n\nc. Tampilkan nama provinsi, jumlah penduduk menurut id provinsi                             \n\n\n \n\n\n\n\n\n\nPenyelesaian\n\n\na. Relasi Database                                  \n\n\n \n\n\nb. Menampilkan nama provinsi, nama kabupaten, jumlah penduduk menurut nama kabupaten\n\n\n    SELECT provinsi.nama_provinsi, Kabupaten.nama_kabupaten, kabupaten.jumlah_penduduk \n    FROM provinsi INNER JOIN kabupaten \n    ON provinsi.id_provinsi=kabupaten.id_provinsi\n\n\n\n\n\n\n\nOutput                                     \n\n\n\n\n\n\nc. Menampilkan nama provinsi, jumlah penduduk menurut id provinsi\n\n\n    SELECT provinsi.nama_provinsi, SUM(kabupaten.jumlah_penduduk) AS \nTotal\n \n    FROM provinsi INNER JOIN kabupaten \n    ON provinsi.id_provinsi = kabupaten.id_provinsi GROUP BY provinsi.id_provinsi\n\n\n\n\n\n\n\nOutput", 
            "title": "Home"
        }, 
        {
            "location": "/menu/tes_magang/tesMagang/#tes-magang-pt-lintang-kawuryan-malang", 
            "text": "", 
            "title": "Tes Magang PT. Lintang Kawuryan Malang"
        }, 
        {
            "location": "/menu/tes_magang/tesMagang/#tes-magang", 
            "text": "Soal  a. Buatlah Relasi Database                                                       b. Tampilkan nama provinsi, nama kabupaten, jumlah penduduk menurut nama kabupaten    c. Tampilkan nama provinsi, jumlah penduduk menurut id provinsi                                    Penyelesaian  a. Relasi Database                                       b. Menampilkan nama provinsi, nama kabupaten, jumlah penduduk menurut nama kabupaten      SELECT provinsi.nama_provinsi, Kabupaten.nama_kabupaten, kabupaten.jumlah_penduduk \n    FROM provinsi INNER JOIN kabupaten \n    ON provinsi.id_provinsi=kabupaten.id_provinsi   Output                                         c. Menampilkan nama provinsi, jumlah penduduk menurut id provinsi      SELECT provinsi.nama_provinsi, SUM(kabupaten.jumlah_penduduk) AS  Total  \n    FROM provinsi INNER JOIN kabupaten \n    ON provinsi.id_provinsi = kabupaten.id_provinsi GROUP BY provinsi.id_provinsi   Output", 
            "title": "Tes Magang"
        }, 
        {
            "location": "/menu/sql/indexsql/", 
            "text": "SQL\n\n\n\n\nA. Penjelasan\n\n\nSQL (Structured Query Language) merupakan sebuah bahasa yang digunakan untuk mengakses data dalam basis data (database) relasional. SQL banyak \nditerapkan pada pemrograman berbasis client-server seperti PHP, ASP, Java J2EE, dan sebagainya. \nContoh software SQL yang terkenal adalah MySQL, MsSQL (Microsoft), Oracle \nSQL, Postgre SQL (open source). Masing-masing software mempunyai keunggulan sendiri-\nsendiri, sejauh yang saya tahu Oracle SQL handal dalam hal keamanan dan ukuran database \nyang bisa mencapai tera byte, sedang MsSQL lebih banyak bermain di Memory untuk \nprocessing. Dari ketiga software ini, Oracle SQl bisa dikatakan sebagai pemegang pertama. \nPerintah dasar SQL pada dasarnya hampir sama baik MySQL, Postgre SQL, MsSQL atau \nOracle SQL.\n\n\na. Apa itu SQL ?\n\n\n\n\nSQL adalah singkatan dari Structured Query Language\n\n\nSQL memungkinkan Anda mengakses dan memanipulasi database\n\n\nSQL adalah standar ANSI (American National Standards Institute)\n\n\n\n\nb. Apa kegunaan SQL ?\n\n\n\n\nSQL dapat mengeksekusi query terhadap database\n\n\nSQL bisa mengambil data dari database\n\n\nSQL bisa memasukkan record dalam database\n\n\nSQL bisa mengupdate record dalam database\n\n\nSQL dapat menghapus record dari database\n\n\nSQL bisa membuat database baru\n\n\nSQL dapat membuat tabel baru dalam database\n\n\nSQL dapat membuat prosedur tersimpan dalam database\n\n\nSQL dapat membuat tampilan dalam database\n\n\nSQL dapat mengatur hak akses pada tabel, prosedur, dan tampilan\n\n\n\n\nc. SQL adalah sebuah standar \n\n\nMeskipun SQL adalah standar ANSI (American National Standards Institute), ada beberapa versi bahasa SQL yang berbeda.\nNamun, agar sesuai dengan standar ANSI, semuanya mendukung setidaknya perintah utama (seperti SELECT, UPDATE, DELETE, INSERT, WHERE) dengan cara yang sama.\n\n\nNote : Most of the SQL database programs also have their own proprietary extensions in addition to the SQL standard!\n\n\nd. SQL di situs web\n\n\nUntuk membangun situs web yang menampilkan data dari database, Anda memerlukan :\n\n\n\n\nProgram database RDBMS (yaitu MS Access, SQL Server, MySQL)\n\n\nUntuk menggunakan bahasa script sisi server, seperti PHP atau ASP\n\n\nUntuk menggunakan SQL dengan mendapatkan data yang anda inginkan\n\n\nUntuk menggunakan HTML / CSS ke style halaman\n\n\n\n\ne. RDBMS\n\n\nRDBMS adalah singkatan dari Relational Database Management System.\n\n\nRDBMS adalah basis untuk SQL, dan untuk semua sistem database modern seperti MS SQL Server, IBM DB2, Oracle, MySQL, dan Microsoft Access.\n\n\nData dalam RDBMS disimpan dalam objek database yang disebut tabel. Tabel adalah kumpulan entri data terkait dan terdiri dari kolom dan baris.\n\n\n\n\nB. Bentuk Syntax Umum\n\n\n    SELECT * FROM (tabel1, tabel2, ..);\n\n\n\n\n\n\n\nC. Implementasi\n\n\nContoh Case\n\n\n\n\n\n\nDesaigner Database :\n\n\nDatabase = db_magang_2\n\n\n\n\n\n \n\n\n\n\n\n\nSoal dan Penyelesaian :\n\n\n\n\n\n\nMenampilkan seluruh data di tabel siswa\n\n\n    SELECT * FROM siswa;\n\n\n\n\n\n\n\nOutput", 
            "title": "Home"
        }, 
        {
            "location": "/menu/sql/indexsql/#sql", 
            "text": "", 
            "title": "SQL"
        }, 
        {
            "location": "/menu/sql/indexsql/#a-penjelasan", 
            "text": "SQL (Structured Query Language) merupakan sebuah bahasa yang digunakan untuk mengakses data dalam basis data (database) relasional. SQL banyak \nditerapkan pada pemrograman berbasis client-server seperti PHP, ASP, Java J2EE, dan sebagainya. \nContoh software SQL yang terkenal adalah MySQL, MsSQL (Microsoft), Oracle \nSQL, Postgre SQL (open source). Masing-masing software mempunyai keunggulan sendiri-\nsendiri, sejauh yang saya tahu Oracle SQL handal dalam hal keamanan dan ukuran database \nyang bisa mencapai tera byte, sedang MsSQL lebih banyak bermain di Memory untuk \nprocessing. Dari ketiga software ini, Oracle SQl bisa dikatakan sebagai pemegang pertama. \nPerintah dasar SQL pada dasarnya hampir sama baik MySQL, Postgre SQL, MsSQL atau \nOracle SQL.  a. Apa itu SQL ?   SQL adalah singkatan dari Structured Query Language  SQL memungkinkan Anda mengakses dan memanipulasi database  SQL adalah standar ANSI (American National Standards Institute)   b. Apa kegunaan SQL ?   SQL dapat mengeksekusi query terhadap database  SQL bisa mengambil data dari database  SQL bisa memasukkan record dalam database  SQL bisa mengupdate record dalam database  SQL dapat menghapus record dari database  SQL bisa membuat database baru  SQL dapat membuat tabel baru dalam database  SQL dapat membuat prosedur tersimpan dalam database  SQL dapat membuat tampilan dalam database  SQL dapat mengatur hak akses pada tabel, prosedur, dan tampilan   c. SQL adalah sebuah standar   Meskipun SQL adalah standar ANSI (American National Standards Institute), ada beberapa versi bahasa SQL yang berbeda.\nNamun, agar sesuai dengan standar ANSI, semuanya mendukung setidaknya perintah utama (seperti SELECT, UPDATE, DELETE, INSERT, WHERE) dengan cara yang sama.  Note : Most of the SQL database programs also have their own proprietary extensions in addition to the SQL standard!  d. SQL di situs web  Untuk membangun situs web yang menampilkan data dari database, Anda memerlukan :   Program database RDBMS (yaitu MS Access, SQL Server, MySQL)  Untuk menggunakan bahasa script sisi server, seperti PHP atau ASP  Untuk menggunakan SQL dengan mendapatkan data yang anda inginkan  Untuk menggunakan HTML / CSS ke style halaman   e. RDBMS  RDBMS adalah singkatan dari Relational Database Management System.  RDBMS adalah basis untuk SQL, dan untuk semua sistem database modern seperti MS SQL Server, IBM DB2, Oracle, MySQL, dan Microsoft Access.  Data dalam RDBMS disimpan dalam objek database yang disebut tabel. Tabel adalah kumpulan entri data terkait dan terdiri dari kolom dan baris.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/sql/indexsql/#b-bentuk-syntax-umum", 
            "text": "SELECT * FROM (tabel1, tabel2, ..);", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/sql/indexsql/#c-implementasi", 
            "text": "", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/sql/indexsql/#contoh-case", 
            "text": "Desaigner Database :  Database = db_magang_2       Soal dan Penyelesaian :    Menampilkan seluruh data di tabel siswa      SELECT * FROM siswa;   Output", 
            "title": "Contoh Case"
        }, 
        {
            "location": "/menu/sql/sql_select/", 
            "text": "SQL Select\n\n\n\n\nA. Penjelasan\n\n\nPernyataan SELECT digunakan untuk memilih data dari database.\nData yang dikembalikan disimpan dalam tabel hasil, yang disebut result-set.\n\n\n \n\n\n\n\n\n\nProjection : Memilih kolom-kolom dalam suatu tabel yang dihasilkan dari suatu query. Memilih beberapa atau banyak kolom yang dibutuhkan.\n\n\n\n\n\n\nSelection : Memilih baris-baris dalam suatu tabel yang dihasilkan dari suatu query. Banyak kriteria yang dapat digunakan untuk membatasi baris-baris yang akan diambil.\n\n\n\n\n\n\nJoining : Mengambil data bersama yang disimpan dalam tabel-tabel\n\n\n\n\n\n\n\n\nB. Bentuk Syntax Umum\n\n\nMenampilkan semua data\n\n\n    SELECT * FROM nama_tabel;\n\n\n\n\n\nProjection\n\n\n    SELECT kolom1, kolom2, ...\n    FROM nama_tabel;\n\n\n\n\n\nSelection\n\n\n    SELECT * FROM table1 WHERE kolom1 = \nResult\n\n\n    SELECT kolom1, kolom2 FROM tabel1 WHERE kolom1 = \nResult\n\n\n\n\n\n\n\n\nC. Implementasi\n\n\nContoh Case\n\n\n\n\n\n\nDesaigner Database :\n\n\nDatabase = db_magang_2\n\n\n\n\n\n \n\n\n\n\n\n\nSoal dan Penyelesaian :\n\n\n\n\n\n\nMenampilkan seluruh data di tabel siswa\n\n\n    SELECT * FROM siswa;\n\n\n\n\n\n\n\nOutput \n\n \n\n\n\n\nProjection\n\n\nMenampilkan data dengan kolom (nisn siswa, nama siswa)\n\n\n    SELECT nisn, nama\n    FROM siswa;\n\n\n\n\n\n\n\nOutput                                                  \n\n\n \n\n\n\n\nSelection\n\n\n1. Menampilkan seluruh data di tabel siswa, yang bernama ADIT\n\n\n    SELECT * \n    FROM siswa WHERE nama = \nADIT\n;\n\n\n\n\n\n\n\nOutput                                                  \n\n\n \n\n\n\n\n2. Menampilkan data dengan kolom (nisn siswa, nama siswa), yang bernama ADIT\n \n\n\n    SELECT nisn, nama \n    FROM siswa WHERE nama = \u201cADIT\u201d\n\n\n\n\n\n\n\nOutput", 
            "title": "SQL Select"
        }, 
        {
            "location": "/menu/sql/sql_select/#sql-select", 
            "text": "", 
            "title": "SQL Select"
        }, 
        {
            "location": "/menu/sql/sql_select/#a-penjelasan", 
            "text": "Pernyataan SELECT digunakan untuk memilih data dari database.\nData yang dikembalikan disimpan dalam tabel hasil, yang disebut result-set.       Projection : Memilih kolom-kolom dalam suatu tabel yang dihasilkan dari suatu query. Memilih beberapa atau banyak kolom yang dibutuhkan.    Selection : Memilih baris-baris dalam suatu tabel yang dihasilkan dari suatu query. Banyak kriteria yang dapat digunakan untuk membatasi baris-baris yang akan diambil.    Joining : Mengambil data bersama yang disimpan dalam tabel-tabel", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/sql/sql_select/#b-bentuk-syntax-umum", 
            "text": "Menampilkan semua data      SELECT * FROM nama_tabel;  Projection      SELECT kolom1, kolom2, ...\n    FROM nama_tabel;  Selection      SELECT * FROM table1 WHERE kolom1 =  Result \n\n    SELECT kolom1, kolom2 FROM tabel1 WHERE kolom1 =  Result", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/sql/sql_select/#c-implementasi", 
            "text": "", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/sql/sql_select/#contoh-case", 
            "text": "Desaigner Database :  Database = db_magang_2       Soal dan Penyelesaian :    Menampilkan seluruh data di tabel siswa      SELECT * FROM siswa;   Output      Projection  Menampilkan data dengan kolom (nisn siswa, nama siswa)      SELECT nisn, nama\n    FROM siswa;   Output                                                        Selection  1. Menampilkan seluruh data di tabel siswa, yang bernama ADIT      SELECT * \n    FROM siswa WHERE nama =  ADIT ;   Output                                                        2. Menampilkan data dengan kolom (nisn siswa, nama siswa), yang bernama ADIT        SELECT nisn, nama \n    FROM siswa WHERE nama = \u201cADIT\u201d   Output", 
            "title": "Contoh Case"
        }, 
        {
            "location": "/menu/sql/sql_selectDistinct/", 
            "text": "SQL Select Distinct\n\n\n\n\nA. Penjelasan\n\n\nPernyataan SELECT DISTINCT digunakan untuk mengembalikan hanya nilai yang berbeda.\nDi dalam sebuah tabel, kolom sering berisi banyak nilai duplikat; Dan terkadang Anda hanya ingin membuat daftar perbedaan nilai yang berbeda.\nPernyataan SELECT DISTINCT digunakan untuk mengembalikan hanya nilai yang berbeda.\n\n\n\n\nB. Bentuk Syntax Umum\n\n\n    SELECT DISTINCT kolom1, kolom2, ...\n    FROM nama_tabel;\n\n\n\n\n\n\n\nC. Implementasi\n\n\nContoh Case\n\n\n\n\n\n\nDesaigner Database : \n\n\nDatabase = db_magang_2\n\n\n\n\n\n \n\n\n\n\n\n\nSoal dan Penyelesaian :\n\n\n\n\n\n\n1. Menampilkan data dengan kolom (nama kabupaten)\n\n\n NOTE : menurut id kabupaten dengan tidak berduplikat\n\n\n    SELECT DISTINCT kabupaten.nama as \nnama_kabupaten\n\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten;\n\n\n\n\n\n\n\nOutput                                                                                         \n\n\n \n\n\n\n\n2. Menghitung total jumlah dengan kolom (nama siswa)\n \n\n\nNOTE : dengan tidak berduplikat\n\n\n    SELECT COUNT(DISTINCT nama) FROM siswa;\n\n\n\n\n\n\n\nOutput                                                                              \n\n\n \n\n\n\n\n3. Menghitung total jumlah dengan kolom (nama siswa)\n\n\nNOTE : dengan tidak berduplikat memakai Alias\n\n\n    SELECT COUNT(DISTINCT nama) AS Distinctsiswa FROM siswa;\n\n\n\n\n\n\n\nOutput", 
            "title": "SQL Select Distinct"
        }, 
        {
            "location": "/menu/sql/sql_selectDistinct/#sql-select-distinct", 
            "text": "", 
            "title": "SQL Select Distinct"
        }, 
        {
            "location": "/menu/sql/sql_selectDistinct/#a-penjelasan", 
            "text": "Pernyataan SELECT DISTINCT digunakan untuk mengembalikan hanya nilai yang berbeda.\nDi dalam sebuah tabel, kolom sering berisi banyak nilai duplikat; Dan terkadang Anda hanya ingin membuat daftar perbedaan nilai yang berbeda.\nPernyataan SELECT DISTINCT digunakan untuk mengembalikan hanya nilai yang berbeda.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/sql/sql_selectDistinct/#b-bentuk-syntax-umum", 
            "text": "SELECT DISTINCT kolom1, kolom2, ...\n    FROM nama_tabel;", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/sql/sql_selectDistinct/#c-implementasi", 
            "text": "", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/sql/sql_selectDistinct/#contoh-case", 
            "text": "Desaigner Database :   Database = db_magang_2       Soal dan Penyelesaian :    1. Menampilkan data dengan kolom (nama kabupaten)   NOTE : menurut id kabupaten dengan tidak berduplikat      SELECT DISTINCT kabupaten.nama as  nama_kabupaten \n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten;   Output                                                                                               2. Menghitung total jumlah dengan kolom (nama siswa)    NOTE : dengan tidak berduplikat      SELECT COUNT(DISTINCT nama) FROM siswa;   Output                                                                                    3. Menghitung total jumlah dengan kolom (nama siswa)  NOTE : dengan tidak berduplikat memakai Alias      SELECT COUNT(DISTINCT nama) AS Distinctsiswa FROM siswa;   Output", 
            "title": "Contoh Case"
        }, 
        {
            "location": "/menu/sql/sql_where/", 
            "text": "SQL Where\n\n\n\n\nA. Penjelasan\n\n\nKlausa WHERE digunakan untuk menyaring catatan.\nKlausa WHERE digunakan untuk mengekstrak hanya catatan yang memenuhi persyaratan tertentu.\n\n\n\n\nB. Bentuk Syntax Umum\n\n\n    SELECT kolom1, kolom2, ...\n    FROM nama_tabel\n    WHERE kondisi;\n\n\n\n\n\n\n\nC. Implementasi\n\n\nContoh Case\n\n\n\n\n\n\nDesaigner Database :\n\n\nDatabase = db_magang_2\n\n\n\n\n\n \n\n\n\n\n\n\nSoal dan Penyelesaian :\n\n\n\n\n\n\nKlausa WHERE\n\n\nMenampilkan data dengan kolom (nama siswa = ADIT)\n\n\n    SELECT * FROM siswa\n    WHERE nama=\nADIT\n;\n\n\n\n\n\n\n\nOutput\n\n \n\n\n\n\nTeks dan numerik\n\n\nMenampilkan data dengan kolom (id siswa = id ke 1)\n\n\n    SELECT * FROM siswa\n    WHERE id=\n1\n;\n\n\n\n\n\n\n\nOutput", 
            "title": "SQL Where"
        }, 
        {
            "location": "/menu/sql/sql_where/#sql-where", 
            "text": "", 
            "title": "SQL Where"
        }, 
        {
            "location": "/menu/sql/sql_where/#a-penjelasan", 
            "text": "Klausa WHERE digunakan untuk menyaring catatan.\nKlausa WHERE digunakan untuk mengekstrak hanya catatan yang memenuhi persyaratan tertentu.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/sql/sql_where/#b-bentuk-syntax-umum", 
            "text": "SELECT kolom1, kolom2, ...\n    FROM nama_tabel\n    WHERE kondisi;", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/sql/sql_where/#c-implementasi", 
            "text": "", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/sql/sql_where/#contoh-case", 
            "text": "Desaigner Database :  Database = db_magang_2       Soal dan Penyelesaian :    Klausa WHERE  Menampilkan data dengan kolom (nama siswa = ADIT)      SELECT * FROM siswa\n    WHERE nama= ADIT ;   Output     Teks dan numerik  Menampilkan data dengan kolom (id siswa = id ke 1)      SELECT * FROM siswa\n    WHERE id= 1 ;   Output", 
            "title": "Contoh Case"
        }, 
        {
            "location": "/menu/sql/sql_andOrNot/", 
            "text": "SQL And, Or, Not\n\n\n\n\nA. Penjelasan\n\n\nKlausa WHERE dapat digabungkan dengan operator AND, OR, dan NOT.\n\n\nOperator AND dan OR digunakan untuk menyaring catatan berdasarkan lebih dari satu kondisi:\n\n\n\n\nOperator AND menampilkan catatan jika semua kondisi dipisahkan oleh DAN BENAR.\n\n\nOperator OR menampilkan catatan jika ada kondisi yang dipisahkan oleh ATAU BENAR.\n\n\n\n\nOperator NOT menampilkan catatan jika kondisinya TIDAK BENAR.\n\n\n\n\nB. Bentuk Syntax Umum\n\n\nAnd Syntax\n\n\n    SELECT kolom1, kolom2, ...\n    FROM nama_tabel\n    WHERE kondisi1 AND kondisi2 AND kondisi3 ...;\n\n\n\n\n\nOr Syntax\n\n\n    SELECT kolom1, kolom2, ...\n    FROM nama_tabel\n    WHERE kondisi1 OR kondisi2 OR kondisi3 ...;\n\n\n\n\n\nNot Syntax\n\n\n    SELECT column1, column2, ...\n    FROM table_name\n    WHERE NOT condition;\n\n\n\n\n\n\n\nC. Implementasi\n\n\nContoh Case\n\n\n\n\n\n\nDesaigner Database :\n\n\nDatabase = db_magang_2\n\n\n\n\n\n \n\n\n\n\n\n\nSoal dan Penyelesaian :\n\n\n\n\n\n\nAnd Syntax\n\n\nMenampilkan data dengan kolom (nama siswa = ADIT yang tempat lahirnya di MALANG)\n\n\n    SELECT * FROM siswa\n    WHERE nama=\nADIT\n AND tempat_lahir=\nMALANG\n;\n\n\n\n\n\n\n\nOutput \n\n \n\n\n\n\nOr Syntax\n\n\nMenampilkan data dengan kolom (nama siswa = ADIT atau yang tempat lahirnya di SURABAYA)\n\n\n    SELECT * FROM siswa\n    WHERE nama=\nADIT\n OR tempat_lahir=\nSURABAYA\n;\n\n\n\n\n\n\n\nOutput \n\n \n\n\n\n\nNot Syntax\n\n\nMenampilkan data dengan selain kolom (nama siswa = ADIT)\n\n\n    SELECT * FROM siswa\n    WHERE NOT nama=\nADIT\n;\n\n\n\n\n\n\n\nOutput \n\n\n\n\n\nKombinasi AND, OR and NOT\n\n\n1. Menampilkan data dengan kolom (nama siswa = ADIT yang tempat lahirnya di MALANG atau di SURABAYA)\n\n\n    SELECT * FROM siswa\n    WHERE nama=\nADIT\n AND (tempat_lahir=\nMALANG\n OR tempat_lahir=\nSURABAYA\n);\n\n\n\n\n\n\n\nOutput \n\n\n\n\n\n2. Menampilkan data dengan selain kolom (nama siswa = ADIT atau yang tidak tempat lahirnya di SURABAYA)\n\n\n    SELECT * FROM siswa\n    WHERE NOT nama=\nADIT\n AND NOT tempat_lahir=\nSURABAYA\n;\n\n\n\n\n\n\n\nOutput", 
            "title": "SQL And, Or, Not"
        }, 
        {
            "location": "/menu/sql/sql_andOrNot/#sql-and-or-not", 
            "text": "", 
            "title": "SQL And, Or, Not"
        }, 
        {
            "location": "/menu/sql/sql_andOrNot/#a-penjelasan", 
            "text": "Klausa WHERE dapat digabungkan dengan operator AND, OR, dan NOT.  Operator AND dan OR digunakan untuk menyaring catatan berdasarkan lebih dari satu kondisi:   Operator AND menampilkan catatan jika semua kondisi dipisahkan oleh DAN BENAR.  Operator OR menampilkan catatan jika ada kondisi yang dipisahkan oleh ATAU BENAR.   Operator NOT menampilkan catatan jika kondisinya TIDAK BENAR.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/sql/sql_andOrNot/#b-bentuk-syntax-umum", 
            "text": "And Syntax      SELECT kolom1, kolom2, ...\n    FROM nama_tabel\n    WHERE kondisi1 AND kondisi2 AND kondisi3 ...;  Or Syntax      SELECT kolom1, kolom2, ...\n    FROM nama_tabel\n    WHERE kondisi1 OR kondisi2 OR kondisi3 ...;  Not Syntax      SELECT column1, column2, ...\n    FROM table_name\n    WHERE NOT condition;", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/sql/sql_andOrNot/#c-implementasi", 
            "text": "", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/sql/sql_andOrNot/#contoh-case", 
            "text": "Desaigner Database :  Database = db_magang_2       Soal dan Penyelesaian :    And Syntax  Menampilkan data dengan kolom (nama siswa = ADIT yang tempat lahirnya di MALANG)      SELECT * FROM siswa\n    WHERE nama= ADIT  AND tempat_lahir= MALANG ;   Output      Or Syntax  Menampilkan data dengan kolom (nama siswa = ADIT atau yang tempat lahirnya di SURABAYA)      SELECT * FROM siswa\n    WHERE nama= ADIT  OR tempat_lahir= SURABAYA ;   Output      Not Syntax  Menampilkan data dengan selain kolom (nama siswa = ADIT)      SELECT * FROM siswa\n    WHERE NOT nama= ADIT ;   Output    Kombinasi AND, OR and NOT  1. Menampilkan data dengan kolom (nama siswa = ADIT yang tempat lahirnya di MALANG atau di SURABAYA)      SELECT * FROM siswa\n    WHERE nama= ADIT  AND (tempat_lahir= MALANG  OR tempat_lahir= SURABAYA );   Output    2. Menampilkan data dengan selain kolom (nama siswa = ADIT atau yang tidak tempat lahirnya di SURABAYA)      SELECT * FROM siswa\n    WHERE NOT nama= ADIT  AND NOT tempat_lahir= SURABAYA ;   Output", 
            "title": "Contoh Case"
        }, 
        {
            "location": "/menu/sql/sql_orderBy/", 
            "text": "SQL Order By\n\n\n\n\nA. Penjelasan\n\n\nSQL Order By adalah  untuk mengurutkan data dalam urutan menaik secara default  dengan menggunakan ASC (Ascending) dan untuk mengurutkan data dalam urutan menurun, gunakan kata kunci DESC (Descending)\n\n\n\n\nB. Bentuk Syntax Umum\n\n\n    SELECT kolom1, kolom2, ...\n    FROM nama_tabel\n    ORDER BY kolom1, kolom2, ... ASC|DESC;\n\n\n\n\n\n\n\nC. Implementasi\n\n\nContoh Case\n\n\n\n\n\n\nDesaigner Database :\n\n\nDatabase = db_magang_2\n\n\n\n\n\n \n\n\n\n\n\n\nSoal dan Penyelesaian :\n\n\n\n\n\n\n1. Menampilkan data dengan kolom (nama kabupaten)\n\n\nNOTE : diurutkan berdasarkan nama kabupaten\n\n\n    SELECT kabupaten.nama as \nnama_kabupaten\n\n    FROM kabupaten \n    ORDER BY nama_kabupaten;\n\n\n\n\n\n\n\nOutput                       \n\n\n\n\n\n\n2. Menampilkan data dengan kolomm (nama kabupaten)\n \n\n\n NOTE : menurut id kecamatan yang diurutkan berdasarkan nama kabupaten\n\n\n    SELECT kabupaten.nama as \nnama_kabupaten\n\n    FROM kabupaten, kecamatan\n    WHERE kabupaten.id=kecamatan.id_kabupaten\n    ORDER BY nama_kabupaten;\n\n\n\n\n\n\n\nOutput                       \n\n\n\n\n\n\n3. Menampilkan data dengan kolom (nama kabupaten)\n \n\n\nNOTE : diurutkan berdasarkan id kabupaten\n\n\n    SELECT kabupaten.nama as \nnama_kabupaten\n\n    FROM kabupaten \n    ORDER BY kabupaten.id;\n\n\n\n\n\n\n\nOutput                       \n\n\n\n\n\n\n4. Menampilkan data dengan kolom (nama kabupaten)\n\n\nNOTE : menurut id kecamatan diurutkan berdasarkan id kabupaten\n\n\n    SELECT kabupaten.nama as \nnama_kabupaten\n\n    FROM kabupaten, kecamatan\n    WHERE kabupaten.id=kecamatan.id_kabupaten\n    ORDER BY kabupaten.id;\n\n\n\n\n\n\n\nOutput                       \n\n\n\n\n\n\n5. Menampilkan data dengan kolom (nama kabupaten, nama kecamatan)\n\n\nNOTE : menurut id kecamatan berdasarkan nama kabupaten dan nama kecamatan\n\n\n    SELECT kabupaten.nama , kecamatan.nama\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten\n    ORDER BY 1 , 2;\n\n    atau\n\n    SELECT kabupaten.nama , kecamatan.nama\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten\n    ORDER BY kabupaten.nama, kecamatan.nama;\n\n\n\n\n\n\n\nOutput                       \n\n\n\n\n\n\n6. Menampilkan data dengan kolom (nama kabupaten, nama kecamatan)\n \n\n\nNOTE : menurut id kecamatan, data diurutkan berdasarkan nama kabupaten (urut dari Z-A) dan nama kecamatan (urut dari A-Z)\n \n\n\n    SELECT kabupaten.nama , kecamatan.nama\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten\n    ORDER BY 1 DESC , 2 ASC;\n\n    atau\n\n    SELECT kabupaten.nama , kecamatan.nama\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten\n    ORDER BY 1 DESC , 2;\n\n    atau\n\n    SELECT kabupaten.nama , kecamatan.nama\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten\n    ORDER BY kabupaten.nama DESC , kecamatan.nama ASC;\n\n    atau\n\n    SELECT kabupaten.nama , kecamatan.nama\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten\n    ORDER BY kabupaten.nama DESC , kecamatan.nama ;\n\n\n\n\n\n\n\nOutput                       \n\n\n\n\n\n\n7. Menampilkan data dengan kolom (nama kabupaten, nama kecamatan)\n \n\n\nNOTE : data diurutkan berdasarkan nama kabupaten (urut dari A-Z) dan nama kecamatan (urut dari Z-A)\n\n\n    SELECT kabupaten.nama , kecamatan.nama\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten\n    ORDER BY 1 ASC, 2 DESC;\n\n    atau\n\n    SELECT kabupaten.nama , kecamatan.nama\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten\n    ORDER BY 1, 2 DESC;\n\n    atau\n\n    SELECT kabupaten.nama , kecamatan.nama\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten\n    ORDER BY kabupaten.nama ASC, kecamatan.nama DESC;\n\n    atau\n\n    SELECT kabupaten.nama , kecamatan.nama\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten\n    ORDER BY kabupaten.nama, kecamatan.nama DESC;\n\n\n\n\n\n\n\nOutput                       \n\n\n\n\n\n\n8. Menampilkan data dengan kolom (nama siswa, nama Agama, nama Provinsi, nama Kota, tanggal_lahir)\n\n\nNOTE : data diurutkan berdasarkan nama siswa (urut dari A-Z)\n\n\n    SELECT siswa.nama, agama.nama, provinsi.nama, kabupaten.nama, siswa.tanggal_lahir \n    FROM siswa, agama, provinsi, kabupaten , kecamatan\n    WHERE siswa.id_agama = agama.id \n    and siswa.id_kecamatan = kecamatan.id \n    and kecamatan.id_kabupaten = kabupaten.id \n    and kabupaten.id_provinsi = provinsi.id order by siswa.nama ASC;\n\n\n\n\n\n\n\nOutput                       \n\n\n\n\n\n\n9. Menampilkan data dengan kolom (NISN, nama siswa, nama Mata Pelajaran, Nilai Angka)\n\n\nNOTE : data diurutkan berdasarkan nama siswa (urut dari A-Z) dan nama mata pelajaran (urut dari A-Z)\n\n\n    SELECT siswa.nisn, siswa.nama, mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n    FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n    WHERE siswa.id = nilai_mata_pelajaran.id_siswa \n    and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran \n    order by siswa.nama, mata_pelajaran.nama ASC;\n\n\n\n\n\n\n\nOutput                       \n\n\n \n\n\n\n\n10. Menampilkan data dengan kolom (NISN, nama siswa, Nama Sertifikat, Tingkat Sertifikat)\n\n\n    SELECT siswa.nisn, siswa.nama, sertifikat_siswa.nama_sertifikat AS Nama_Sertifikat, sertifikat_siswa.tingkat AS Tingkat_Sertifikat\n    FROM siswa , sertifikat_siswa\n    WHERE siswa.id = sertifikat_siswa.id_siswa;\n\n\n\n\n\n\n\nOutput                       \n\n\n \n\n\n\n\n11. Menampilkan data dengan kolom (nama siswa, nama Agama, nama Provinsi, nama Kota, tanggal_lahir, nama Mata Pelajaran, Nilai Angka)\n\n\nNOTE : data diurutkan berdasarkan nama siswa (urut dari Z-A)\n\n\n\n\n\n\nSource Code\n\n\nSELECT siswa.nama , agama.nama AS Agama , provinsi.nama AS Provinsi , kabupaten.nama  AS Kabupaten, siswa.tanggal_lahir , mata_pelajaran.nama AS Mata_Pelajaran, nilai_mata_pelajaran.nilai_angka\nFROM siswa , agama , provinsi , kabupaten , kecamatan , nilai_mata_pelajaran , mata_pelajaran\nWHERE siswa.id_agama = agama.id and siswa.id_kecamatan = kecamatan.id and kecamatan.id_kabupaten = kabupaten.id and kabupaten.id_provinsi = provinsi.id and (siswa.id = nilai_mata_pelajaran.id_siswa) and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran order by siswa.nama DESC;\n\n\n\n\n\n\n\n\n\nOutput", 
            "title": "SQL Order By"
        }, 
        {
            "location": "/menu/sql/sql_orderBy/#sql-order-by", 
            "text": "", 
            "title": "SQL Order By"
        }, 
        {
            "location": "/menu/sql/sql_orderBy/#a-penjelasan", 
            "text": "SQL Order By adalah  untuk mengurutkan data dalam urutan menaik secara default  dengan menggunakan ASC (Ascending) dan untuk mengurutkan data dalam urutan menurun, gunakan kata kunci DESC (Descending)", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/sql/sql_orderBy/#b-bentuk-syntax-umum", 
            "text": "SELECT kolom1, kolom2, ...\n    FROM nama_tabel\n    ORDER BY kolom1, kolom2, ... ASC|DESC;", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/sql/sql_orderBy/#c-implementasi", 
            "text": "", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/sql/sql_orderBy/#contoh-case", 
            "text": "Desaigner Database :  Database = db_magang_2       Soal dan Penyelesaian :    1. Menampilkan data dengan kolom (nama kabupaten)  NOTE : diurutkan berdasarkan nama kabupaten      SELECT kabupaten.nama as  nama_kabupaten \n    FROM kabupaten \n    ORDER BY nama_kabupaten;   Output                           2. Menampilkan data dengan kolomm (nama kabupaten)     NOTE : menurut id kecamatan yang diurutkan berdasarkan nama kabupaten      SELECT kabupaten.nama as  nama_kabupaten \n    FROM kabupaten, kecamatan\n    WHERE kabupaten.id=kecamatan.id_kabupaten\n    ORDER BY nama_kabupaten;   Output                           3. Menampilkan data dengan kolom (nama kabupaten)    NOTE : diurutkan berdasarkan id kabupaten      SELECT kabupaten.nama as  nama_kabupaten \n    FROM kabupaten \n    ORDER BY kabupaten.id;   Output                           4. Menampilkan data dengan kolom (nama kabupaten)  NOTE : menurut id kecamatan diurutkan berdasarkan id kabupaten      SELECT kabupaten.nama as  nama_kabupaten \n    FROM kabupaten, kecamatan\n    WHERE kabupaten.id=kecamatan.id_kabupaten\n    ORDER BY kabupaten.id;   Output                           5. Menampilkan data dengan kolom (nama kabupaten, nama kecamatan)  NOTE : menurut id kecamatan berdasarkan nama kabupaten dan nama kecamatan      SELECT kabupaten.nama , kecamatan.nama\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten\n    ORDER BY 1 , 2;\n\n    atau\n\n    SELECT kabupaten.nama , kecamatan.nama\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten\n    ORDER BY kabupaten.nama, kecamatan.nama;   Output                           6. Menampilkan data dengan kolom (nama kabupaten, nama kecamatan)    NOTE : menurut id kecamatan, data diurutkan berdasarkan nama kabupaten (urut dari Z-A) dan nama kecamatan (urut dari A-Z)        SELECT kabupaten.nama , kecamatan.nama\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten\n    ORDER BY 1 DESC , 2 ASC;\n\n    atau\n\n    SELECT kabupaten.nama , kecamatan.nama\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten\n    ORDER BY 1 DESC , 2;\n\n    atau\n\n    SELECT kabupaten.nama , kecamatan.nama\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten\n    ORDER BY kabupaten.nama DESC , kecamatan.nama ASC;\n\n    atau\n\n    SELECT kabupaten.nama , kecamatan.nama\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten\n    ORDER BY kabupaten.nama DESC , kecamatan.nama ;   Output                           7. Menampilkan data dengan kolom (nama kabupaten, nama kecamatan)    NOTE : data diurutkan berdasarkan nama kabupaten (urut dari A-Z) dan nama kecamatan (urut dari Z-A)      SELECT kabupaten.nama , kecamatan.nama\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten\n    ORDER BY 1 ASC, 2 DESC;\n\n    atau\n\n    SELECT kabupaten.nama , kecamatan.nama\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten\n    ORDER BY 1, 2 DESC;\n\n    atau\n\n    SELECT kabupaten.nama , kecamatan.nama\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten\n    ORDER BY kabupaten.nama ASC, kecamatan.nama DESC;\n\n    atau\n\n    SELECT kabupaten.nama , kecamatan.nama\n    FROM kabupaten , kecamatan\n    WHERE kabupaten.id = kecamatan.id_kabupaten\n    ORDER BY kabupaten.nama, kecamatan.nama DESC;   Output                           8. Menampilkan data dengan kolom (nama siswa, nama Agama, nama Provinsi, nama Kota, tanggal_lahir)  NOTE : data diurutkan berdasarkan nama siswa (urut dari A-Z)      SELECT siswa.nama, agama.nama, provinsi.nama, kabupaten.nama, siswa.tanggal_lahir \n    FROM siswa, agama, provinsi, kabupaten , kecamatan\n    WHERE siswa.id_agama = agama.id \n    and siswa.id_kecamatan = kecamatan.id \n    and kecamatan.id_kabupaten = kabupaten.id \n    and kabupaten.id_provinsi = provinsi.id order by siswa.nama ASC;   Output                           9. Menampilkan data dengan kolom (NISN, nama siswa, nama Mata Pelajaran, Nilai Angka)  NOTE : data diurutkan berdasarkan nama siswa (urut dari A-Z) dan nama mata pelajaran (urut dari A-Z)      SELECT siswa.nisn, siswa.nama, mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n    FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n    WHERE siswa.id = nilai_mata_pelajaran.id_siswa \n    and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran \n    order by siswa.nama, mata_pelajaran.nama ASC;   Output                             10. Menampilkan data dengan kolom (NISN, nama siswa, Nama Sertifikat, Tingkat Sertifikat)      SELECT siswa.nisn, siswa.nama, sertifikat_siswa.nama_sertifikat AS Nama_Sertifikat, sertifikat_siswa.tingkat AS Tingkat_Sertifikat\n    FROM siswa , sertifikat_siswa\n    WHERE siswa.id = sertifikat_siswa.id_siswa;   Output                             11. Menampilkan data dengan kolom (nama siswa, nama Agama, nama Provinsi, nama Kota, tanggal_lahir, nama Mata Pelajaran, Nilai Angka)  NOTE : data diurutkan berdasarkan nama siswa (urut dari Z-A)    Source Code  SELECT siswa.nama , agama.nama AS Agama , provinsi.nama AS Provinsi , kabupaten.nama  AS Kabupaten, siswa.tanggal_lahir , mata_pelajaran.nama AS Mata_Pelajaran, nilai_mata_pelajaran.nilai_angka\nFROM siswa , agama , provinsi , kabupaten , kecamatan , nilai_mata_pelajaran , mata_pelajaran\nWHERE siswa.id_agama = agama.id and siswa.id_kecamatan = kecamatan.id and kecamatan.id_kabupaten = kabupaten.id and kabupaten.id_provinsi = provinsi.id and (siswa.id = nilai_mata_pelajaran.id_siswa) and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran order by siswa.nama DESC;    Output", 
            "title": "Contoh Case"
        }, 
        {
            "location": "/menu/sql/sql_aliases/", 
            "text": "SQL Alias\n\n\n\n\nA. Penjelasan\n\n\nAlias SQL digunakan untuk memberi tabel, atau kolom dalam sebuah tabel, nama sementara.\nAlias sering digunakan untuk membuat nama kolom lebih mudah dibaca.\nSebuah alias hanya ada selama queri.\n\n\nAlias bisa bermanfaat bila :\n\n\n\n\nAda lebih dari satu tabel yang terlibat dalam queri\n\n\nFungsi yang digunakan dalam queri\n\n\nNama kolom besar atau tidak terlalu mudah dibaca\n\n\nDua atau lebih kolom digabungkan bersama\n\n\n\n\n\n\nB. Bentuk Syntax Umum\n\n\nSyntax Alias Kolom\n\n\n    SELECT nama_kolom AS nama_alias_kolom\n    FROM nama_tabel;\n\n\n\n\n\nSyntax Alias Tabel \n\n\n    SELECT nama_kolom(s)\n    FROM nama_tabel AS nama_alias_tabel;\n\n\n\n\n\n\n\nC. Implementasi\n\n\nContoh Case\n\n\n\n\n\n\nDesaigner Database :\n\n\nDatabase = db_magang_2\n\n\n\n\n\n \n\n\n\n\n\n\nSoal dan Penyelesaian :\n\n\n\n\n\n\nAlias Kolom\n\n\n1. Menampilkan data dengan kolom (nama siswa, tempat lahir siswa)\n\n\nNOTE : nama dengan keteranagn Nama_Siswa dan tempat lahir dengan keterangan Tempat_lahir_siswa\n\n\n    SELECT nama AS Nama_Siswa, tempat_lahir AS Tempat_Lahir_Siswa\n    FROM siswa;\n\n\n\n\n\n\n\nOutput                       \n\n\n\n\n\n\n2. Menampilkan data dengan kolom (nama siswa, tempat lahir siswa)\n\n\nNOTE : kolom (nama siswa) dengan keteranagn Nama_Siswa dan kolom (tempat lahir siswa) dengan keterangan Tempat Lahir Siswa\n\n\n    SELECT nama AS Nama_Siswa, tempat_lahir AS \nTempat Lahir Siswa\n\n    FROM siswa;\n\n\n\n\n\n\n\nOutput                       \n\n\n\n\n\n\n3. Menampilkan data dengan kolom (nama siswa, alamat siswa, nisn siswa, tanggal lahir siswa, tempat lahir siswa)\n\n\nNOTE : kolom (alamat siswa, nisn siswa, tanggal lahir siswa, tempat lahir siswa) dengan keterangan Data\n\n\n    SELECT nama, CONCAT(alamat,\n, \n,nisn,\n, \n,tanggal_lahir,\n, \n,tempat_lahir) AS Data\n    FROM siswa;\n\n\n\n\n\n\n\nOutput                       \n\n\n\n\n\n\nAlias Tabel\n\n\nMenampilkan data dengan kolom (nama siswa, agama siswa)\n\n\nNOTE : tabel (siswa) dengan keterangan s dan tabel (agama) dengan keterangan a\n\n\n    SELECT s.nama, a.nama\n    FROM siswa AS s, agama AS a\n    WHERE s.nama=\nADIT\n AND a.id=s.id_agama;\n\n\n\n\n\n\n\nOutput", 
            "title": "SQL Alias"
        }, 
        {
            "location": "/menu/sql/sql_aliases/#sql-alias", 
            "text": "", 
            "title": "SQL Alias"
        }, 
        {
            "location": "/menu/sql/sql_aliases/#a-penjelasan", 
            "text": "Alias SQL digunakan untuk memberi tabel, atau kolom dalam sebuah tabel, nama sementara.\nAlias sering digunakan untuk membuat nama kolom lebih mudah dibaca.\nSebuah alias hanya ada selama queri.  Alias bisa bermanfaat bila :   Ada lebih dari satu tabel yang terlibat dalam queri  Fungsi yang digunakan dalam queri  Nama kolom besar atau tidak terlalu mudah dibaca  Dua atau lebih kolom digabungkan bersama", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/sql/sql_aliases/#b-bentuk-syntax-umum", 
            "text": "Syntax Alias Kolom      SELECT nama_kolom AS nama_alias_kolom\n    FROM nama_tabel;  Syntax Alias Tabel       SELECT nama_kolom(s)\n    FROM nama_tabel AS nama_alias_tabel;", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/sql/sql_aliases/#c-implementasi", 
            "text": "", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/sql/sql_aliases/#contoh-case", 
            "text": "Desaigner Database :  Database = db_magang_2       Soal dan Penyelesaian :    Alias Kolom  1. Menampilkan data dengan kolom (nama siswa, tempat lahir siswa)  NOTE : nama dengan keteranagn Nama_Siswa dan tempat lahir dengan keterangan Tempat_lahir_siswa      SELECT nama AS Nama_Siswa, tempat_lahir AS Tempat_Lahir_Siswa\n    FROM siswa;   Output                           2. Menampilkan data dengan kolom (nama siswa, tempat lahir siswa)  NOTE : kolom (nama siswa) dengan keteranagn Nama_Siswa dan kolom (tempat lahir siswa) dengan keterangan Tempat Lahir Siswa      SELECT nama AS Nama_Siswa, tempat_lahir AS  Tempat Lahir Siswa \n    FROM siswa;   Output                           3. Menampilkan data dengan kolom (nama siswa, alamat siswa, nisn siswa, tanggal lahir siswa, tempat lahir siswa)  NOTE : kolom (alamat siswa, nisn siswa, tanggal lahir siswa, tempat lahir siswa) dengan keterangan Data      SELECT nama, CONCAT(alamat, ,  ,nisn, ,  ,tanggal_lahir, ,  ,tempat_lahir) AS Data\n    FROM siswa;   Output                           Alias Tabel  Menampilkan data dengan kolom (nama siswa, agama siswa)  NOTE : tabel (siswa) dengan keterangan s dan tabel (agama) dengan keterangan a      SELECT s.nama, a.nama\n    FROM siswa AS s, agama AS a\n    WHERE s.nama= ADIT  AND a.id=s.id_agama;   Output", 
            "title": "Contoh Case"
        }, 
        {
            "location": "/menu/sql/sql_joinTabel/", 
            "text": "SQL Join\n\n\n\n\nA. Penjelasan\n\n\nSQL Join adalah Klausa JOIN digunakan untuk menggabungkan baris dari dua tabel atau lebih, berdasarkan kolom terkait di antara keduanya.\n\n\n\n\n\n\nB. Macam-macam\n\n\nBerikut adalah berbagai jenis JOINs di SQL:\n\n\n\n\n(INNER) JOIN: Mengembalikan catatan yang memiliki nilai yang cocok di kedua tabel\n\n\nLEFT (OUTER) JOIN: Kembalikan semua catatan dari tabel kiri, dan catatan yang cocok dari tabel kanan\n\n\nRIGHT (OUTER) JOIN: Kembalikan semua catatan dari tabel kanan, dan catatan yang cocok dari tabel kiri\n\n\nFULL (OUTER) JOIN: Kembalikan semua catatan saat ada kecocokan di tabel kiri atau kanan", 
            "title": "SQL Join"
        }, 
        {
            "location": "/menu/sql/sql_joinTabel/#sql-join", 
            "text": "", 
            "title": "SQL Join"
        }, 
        {
            "location": "/menu/sql/sql_joinTabel/#a-penjelasan", 
            "text": "SQL Join adalah Klausa JOIN digunakan untuk menggabungkan baris dari dua tabel atau lebih, berdasarkan kolom terkait di antara keduanya.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/sql/sql_joinTabel/#b-macam-macam", 
            "text": "Berikut adalah berbagai jenis JOINs di SQL:   (INNER) JOIN: Mengembalikan catatan yang memiliki nilai yang cocok di kedua tabel  LEFT (OUTER) JOIN: Kembalikan semua catatan dari tabel kiri, dan catatan yang cocok dari tabel kanan  RIGHT (OUTER) JOIN: Kembalikan semua catatan dari tabel kanan, dan catatan yang cocok dari tabel kiri  FULL (OUTER) JOIN: Kembalikan semua catatan saat ada kecocokan di tabel kiri atau kanan", 
            "title": "B. Macam-macam"
        }, 
        {
            "location": "/menu/sql/sql_innerJoin/", 
            "text": "SQL Inner Join\n\n\n\n\nA. Penjelasan\n\n\nSQL Inner Join adalah Bentuk kondisi join dimana di antara 2 atau lebih tabel yang ingin di join memiliki hubungan sehingga semua isi tabel yang di pilih bisa di tampilkan\n\n\n\n\n\n\nB. Bentuk Syntax Umum\n\n\n\n\n\n\nJoin dengan 2 tabel\n\n\nSELECT nama_kolom(s)\nFROM tabel1,tabel2 \nWHERE tabel1.nama_kolom = tabel2.nama_kolom;\n\natau\n\nSELECT nama_kolom(s)\nFROM tabel1 INNER JOIN tabel2 \nON tabel1.nama_kolom = tabel2.nama_kolom;\n\n\n\n\n\n\n\n\n\nJoin dengan 3 tabel\n\n\nSELECT nama_kolom(s)\nFROM tabel1, tabel2, tabel3\nWHERE tabel1.nama_kolom = tabel2.nama_kolom\nAND tabel2.nama_kolom = tabel3.nama_kolom;\n\natau\n\nSELECT nama_kolom(s)\nFROM ((tabel1 INNER JOIN tabel2 ON tabel1.nama_kolom = tabel2.nama_kolom)\nINNER JOIN tabel3 ON tabel2.nama_kolom = tabel3.nama_kolom);\n\n\n\n\n\n\n\n\n\n\n\nC. Implementasi\n\n\nContoh Case 1\n\n\n\n\n\n\nDesaigner Database :\n\n\nDatabase = db_magang_2\n\n\n\n\n\n \n\n\n\n\n\n\nSoal dan Penyelesaian :\n\n\n\n\n\n\na) SQL Join Tabel\n                    \n\n\nJoin Tabel dalam 2 tabel\n\n\n1. Menampilkan seluruh data pada tabel siswa dan tabel agama\n \n\n\n    SELECT * \n    FROM siswa, agama \n    WHERE siswa.id_agama=agama.id;\n\n\n\n\n\n\n\nOutput                       \n\n\n \n\n\n\n\n2. Menampilkan data dengan kolom (nisn siswa, nama siswa, nama agama)\n \n\n\n    SELECT siswa.nisn, siswa.nama, agama.nama\n    FROM siswa, agama\n    WHERE siswa.id_agama=agama.id;\n\n\n\n\n\n\n\nOutput                       \n\n\n \n\n\n\n\nJoin Tabel dalam 3 tabel\n\n\nMenampilkan data dengan kolom (nama siswa, nama mata pelajaran, nilai angka)\n  \n\n\n    SELECT siswa.nama,mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n    FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n    WHERE siswa.id=nilai_mata_pelajaran.id_siswa\n    AND nilai_mata_pelajaran.id_mata_pelajaran=mata_pelajaran.id\n\n\n\n\n\n\n\nOutput                       \n\n\n \n\n\n\n\nb) SQL Inner Join\n\n\nInner Join dalam 2 tabel\n\n\n1. Menampilkan seluruh data pada tabel siswa dan tabel agama\n \n\n\n    SELECT *    \n    FROM siswa INNER JOIN agama \n    ON siswa.id_agama=agama.id;\n\n\n\n\n\n\n\nOutput                       \n\n\n \n\n\n\n\n2. Menampilkan data dengan kolom (nisn siswa, nama siswa, nama agama)\n \n\n\n    SELECT siswa.nisn, siswa.nama, agama.nama\n    FROM siswa INNER JOIN agama\n    ON siswa.id_agama=agama.id;\n\n\n\n\n\n\n\nOutput                       \n\n\n \n\n\n\n\nInner Join dalam 3 tabel\n\n\nMenampilkan data dengan kolom (nama siswa, nama mata pelajaran, nilai angka)\n \n\n\n    SELECT siswa.nama,mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n    FROM ((siswa INNER JOIN nilai_mata_pelajaran ON siswa.id=nilai_mata_pelajaran.id_siswa)\n    INNER JOIN mata_pelajaran ON nilai_mata_pelajaran.id_mata_pelajaran=mata_pelajaran.id);\n\n\n\n\n\n\n\nOutput                       \n\n\n \n\n\n\n\n\n\nContoh Case 2\n\n\n\n\n\n\nDesaigner Database :\n\n\nDatabase = ukk_11102016_sbd_153140914111007_hildakhairunnisa\n\n\n\n\n\n \n\n\n\n\n\n\nSoal dan Penyelesaian :\n\n\n\n\n\n\na) SQL Join Tabel\n                    \n\n\nJoin Tabel dalam 2 tabel\n\n\n1. Menampilkan seluruh data pada tabel dokter dan tabel spesialis\n \n\n\n    SELECT * \n    FROM tb_dokter, tb_spesialis \n    WHERE tb_spesialis.KD_SPESIALIS = tb_dokter.KD_SPESIALIS;\n\n\n\n\n\n\n\nOutput                       \n\n\n  \n\n\n\n\n2. Menampilkan data dengan kolom (nama dokter, jam mulai jaga dan jam selesai jaga)\n \n\n\n    SELECT tb_dokter.NAMA_DOKTER, tb_jaga.JAM_MULAI, tb_jaga.JAM_SELESAI\n    FROM tb_dokter, tb_jaga\n    WHERE tb_dokter.KD_DOKTER=tb_jaga.KD_DOKTER;\n\n\n\n\n\n\n\nOutput                       \n\n\n \n\n\n\n\nJoin Tabel dalam 3 tabel\n\n\nMenampilkan data dengan kolom (nama dokter, nama spesialis, jam mulai jaga, jam selesai jaga)\n  \n\n\n    SELECT tb_dokter.NAMA_DOKTER, tb_spesialis.SPESIALIS, tb_jaga.JAM_MULAI, tb_jaga.JAM_SELESAI\n    FROM tb_dokter, tb_spesialis, tb_jaga\n    WHERE tb_dokter.KD_SPESIALIS=tb_spesialis.KD_SPESIALIS\n    AND tb_dokter.KD_DOKTER=tb_jaga.KD_DOKTER;\n\n\n\n\n\n\n\nOutput                       \n\n\n \n\n\n\n\nb) SQL Inner Join\n\n\nInner Join dalam 2 tabel\n\n\n1. Menampilkan seluruh data pada tabel dokter dan tabel spesialis\n \n\n\n    SELECT *    \n    FROM tb_dokter INNER JOIN tb_spesialis \n    ON tb_spesialis.KD_SPESIALIS = tb_dokter.KD_SPESIALIS;\n\n\n\n\n\n\n\nOutput                       \n\n\n \n\n\n\n\n2. Menampilkan data dengan kolom (nama dokter, jam mulai jaga dan jam selesai jaga)\n  \n\n\n    SELECT tb_dokter.NAMA_DOKTER, tb_jaga.JAM_MULAI, tb_jaga.JAM_SELESAI\n    FROM tb_dokter INNER JOIn tb_jaga\n    ON tb_dokter.KD_DOKTER=tb_jaga.KD_DOKTER;\n\n\n\n\n\n\n\nOutput                       \n\n\n \n\n\n\n\nInner Join dalam 3 tabel\n\n\nMenampilkan data dengan kolom (nama dokter, nama spesialis, jam mulai jaga, jam selesai jaga)\n\n\n    SELECT tb_dokter.NAMA_DOKTER, tb_spesialis.SPESIALIS, tb_jaga.JAM_MULAI, tb_jaga.JAM_SELESAI\n    FROM ((tb_dokter INNER JOIN tb_spesialis ON tb_dokter.KD_SPESIALIS = tb_spesialis.KD_SPESIALIS)\n    INNER JOIN tb_jaga ON tb_dokter.KD_DOKTER = tb_jaga.KD_DOKTER);\n\n\n\n\n\n\n\nOutput                       \n\n\n  \n\n\n\n\n\n\nContoh Case 3\n\n\n\n\n\n\nDesaigner Database :\n\n\nDatabase = db_magang_1\n\n\n\n\n\n \n\n\n\n\n\n\nSoal dan Jawaban case :\n\n\n\n\n\n\n1. Menampilkan data dengan kolom (nama kecamatan, nama kabupaten)\n \n\n\n    SELECT kecamatan.nama_kecamatan,kabupaten.nama_kabupaten\n    FROM kecamatan,kabupaten\n    WHERE kecamatan.id_kabupaten=kabupaten.id_kabupaten\n\n    atau\n\n    SELECT x.nama_kecamatan,y.nama_kabupaten\n    FROM kecamatan x,kabupaten y\n    WHERE x.id_kabupaten=y.id_kabupaten\n\n    atau\n\n    SELECT kecamatan.nama_kecamatan,kabupaten.nama_kabupaten\n    FROM kecamatan INNER JOIN kabupaten\n    ON (kecamatan.id_kabupaten=kabupaten.id_kabupaten)\n\n\n\n\n\n\n\nOutput                       \n\n\n \n\n\n\n\n2. Menampilkan data dengan kolom (nama kecamatan, nama kabupaten, nama provinsinya)\n\n\n    SELECT kecamatan.nama_kecamatan,kabupaten.nama_kabupaten, provinsi.nama_provinsi\n    FROM kecamatan, kabupaten, provinsi\n    WHERE kecamatan.id_kabupaten=kabupaten.id_kabupaten AND kabupaten.id_provinsi=provinsi.id_provinsi\n\n\n\n\n\n\n\nOutput                       \n\n\n \n\n\n\n\n3. Menampilkan data dengan kolom (nama kecamatan, nama provinsinya)\n \n\n\n    SELECT kecamatan.nama_kecamatan, provinsi.nama_provinsi\n    FROM kecamatan, kabupaten, provinsi\n    WHERE kecamatan.id_kabupaten=kabupaten.id_kabupaten AND kabupaten.id_provinsi=provinsi.id_provinsi\n\n\n\n\n\n\n\nOutput                       \n\n\n  \n\n\n\n\n\n\nContoh Case 4\n\n\n\n\n\n\nDesaigner Database :\n\n\nDatabase = db_magang_1\n\n\n\n\n\n \n\n\n\n\n\n\nSoal dan Penyelesaian :\n\n\n\n\n\n\nPenambahan tabel negara \n\n\n    Tabel negara\n    - id\n    - nama\n\n    Tabel provinsi\n    - id_provinsi\n    - id_negara\n    - nama_provinsi\n\n    Tabel kabupaten\n    - id_kabupaten\n    - id_provinsi\n    - nama_kabupaten\n    - jumlah_penduduk\n\n    Tabel kecamatan\n    - id_kecamatan\n    - id_kabupaten\n    - nama_kecamatan\n\n\n\n\n\nLangkah \u2013 langkah :\n\n\n    SELECT (nama field / nama kolom yang akan ditampilkan)\n    FROM (tabel sesuai field / kolom yang akan ditampilkan)\n    WHERE (kondisi dimana tabelA.Key=tabelB.Key)\n    AND (penambahan kondisi)\n\n\n\n\n\n1. Menampilkan data dengan kolom (nama kecamatan, nama kabupaten ,nama provinsinya , nama negara)\n  \n\n\n    SELECT kecamatan.nama_kecamatan , kabupaten.nama_kabupaten , provinsi.nama_provinsi , negara.nama\n    FROM kecamatan , kabupaten , provinsi , negara\n    WHERE kecamatan.id_kabupaten = kabupaten.id_kabupaten \n    AND kabupaten.id_provinsi = provinsi.id_provinsi \n    AND negara.id = provinsi.id_negara\n\n\n\n\n\n2. Menampilkan data dengan kolom (nama kecamatan, nama kabupaten)\n  \n\n\n    SELECT kecamatan.nama_kecamatan,kabupaten.nama_kabupaten\n    FROM kecamatan,kabupaten\n    WHERE kecamatan.id_kabupaten=kabupaten.id_kabupaten\n\n    Atau\n    SELECT x.nama_kecamatan,y.nama_kabupaten\n    FROM kecamatan x,kabupaten y\n    WHERE x.id_kabupaten=y.id_kabupaten\n\n    Atau\n    SELECT kecamatan.nama_kecamatan,kabupaten.nama_kabupaten\n    FROM kecamatan INNER JOIN kabupaten\n    ON (kecamatan.id_kabupaten=kabupaten.id_kabupaten)\n\n\n\n\n\n\n\nOutput", 
            "title": "SQL Inner Join"
        }, 
        {
            "location": "/menu/sql/sql_innerJoin/#sql-inner-join", 
            "text": "", 
            "title": "SQL Inner Join"
        }, 
        {
            "location": "/menu/sql/sql_innerJoin/#a-penjelasan", 
            "text": "SQL Inner Join adalah Bentuk kondisi join dimana di antara 2 atau lebih tabel yang ingin di join memiliki hubungan sehingga semua isi tabel yang di pilih bisa di tampilkan", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/sql/sql_innerJoin/#b-bentuk-syntax-umum", 
            "text": "Join dengan 2 tabel  SELECT nama_kolom(s)\nFROM tabel1,tabel2 \nWHERE tabel1.nama_kolom = tabel2.nama_kolom;\n\natau\n\nSELECT nama_kolom(s)\nFROM tabel1 INNER JOIN tabel2 \nON tabel1.nama_kolom = tabel2.nama_kolom;    Join dengan 3 tabel  SELECT nama_kolom(s)\nFROM tabel1, tabel2, tabel3\nWHERE tabel1.nama_kolom = tabel2.nama_kolom\nAND tabel2.nama_kolom = tabel3.nama_kolom;\n\natau\n\nSELECT nama_kolom(s)\nFROM ((tabel1 INNER JOIN tabel2 ON tabel1.nama_kolom = tabel2.nama_kolom)\nINNER JOIN tabel3 ON tabel2.nama_kolom = tabel3.nama_kolom);", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/sql/sql_innerJoin/#c-implementasi", 
            "text": "", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/sql/sql_innerJoin/#contoh-case-1", 
            "text": "Desaigner Database :  Database = db_magang_2       Soal dan Penyelesaian :    a) SQL Join Tabel                       Join Tabel dalam 2 tabel  1. Menampilkan seluruh data pada tabel siswa dan tabel agama        SELECT * \n    FROM siswa, agama \n    WHERE siswa.id_agama=agama.id;   Output                             2. Menampilkan data dengan kolom (nisn siswa, nama siswa, nama agama)        SELECT siswa.nisn, siswa.nama, agama.nama\n    FROM siswa, agama\n    WHERE siswa.id_agama=agama.id;   Output                             Join Tabel dalam 3 tabel  Menampilkan data dengan kolom (nama siswa, nama mata pelajaran, nilai angka)         SELECT siswa.nama,mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n    FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n    WHERE siswa.id=nilai_mata_pelajaran.id_siswa\n    AND nilai_mata_pelajaran.id_mata_pelajaran=mata_pelajaran.id   Output                             b) SQL Inner Join  Inner Join dalam 2 tabel  1. Menampilkan seluruh data pada tabel siswa dan tabel agama        SELECT *    \n    FROM siswa INNER JOIN agama \n    ON siswa.id_agama=agama.id;   Output                             2. Menampilkan data dengan kolom (nisn siswa, nama siswa, nama agama)        SELECT siswa.nisn, siswa.nama, agama.nama\n    FROM siswa INNER JOIN agama\n    ON siswa.id_agama=agama.id;   Output                             Inner Join dalam 3 tabel  Menampilkan data dengan kolom (nama siswa, nama mata pelajaran, nilai angka)        SELECT siswa.nama,mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n    FROM ((siswa INNER JOIN nilai_mata_pelajaran ON siswa.id=nilai_mata_pelajaran.id_siswa)\n    INNER JOIN mata_pelajaran ON nilai_mata_pelajaran.id_mata_pelajaran=mata_pelajaran.id);   Output", 
            "title": "Contoh Case 1"
        }, 
        {
            "location": "/menu/sql/sql_innerJoin/#contoh-case-2", 
            "text": "Desaigner Database :  Database = ukk_11102016_sbd_153140914111007_hildakhairunnisa       Soal dan Penyelesaian :    a) SQL Join Tabel                       Join Tabel dalam 2 tabel  1. Menampilkan seluruh data pada tabel dokter dan tabel spesialis        SELECT * \n    FROM tb_dokter, tb_spesialis \n    WHERE tb_spesialis.KD_SPESIALIS = tb_dokter.KD_SPESIALIS;   Output                              2. Menampilkan data dengan kolom (nama dokter, jam mulai jaga dan jam selesai jaga)        SELECT tb_dokter.NAMA_DOKTER, tb_jaga.JAM_MULAI, tb_jaga.JAM_SELESAI\n    FROM tb_dokter, tb_jaga\n    WHERE tb_dokter.KD_DOKTER=tb_jaga.KD_DOKTER;   Output                             Join Tabel dalam 3 tabel  Menampilkan data dengan kolom (nama dokter, nama spesialis, jam mulai jaga, jam selesai jaga)         SELECT tb_dokter.NAMA_DOKTER, tb_spesialis.SPESIALIS, tb_jaga.JAM_MULAI, tb_jaga.JAM_SELESAI\n    FROM tb_dokter, tb_spesialis, tb_jaga\n    WHERE tb_dokter.KD_SPESIALIS=tb_spesialis.KD_SPESIALIS\n    AND tb_dokter.KD_DOKTER=tb_jaga.KD_DOKTER;   Output                             b) SQL Inner Join  Inner Join dalam 2 tabel  1. Menampilkan seluruh data pada tabel dokter dan tabel spesialis        SELECT *    \n    FROM tb_dokter INNER JOIN tb_spesialis \n    ON tb_spesialis.KD_SPESIALIS = tb_dokter.KD_SPESIALIS;   Output                             2. Menampilkan data dengan kolom (nama dokter, jam mulai jaga dan jam selesai jaga)         SELECT tb_dokter.NAMA_DOKTER, tb_jaga.JAM_MULAI, tb_jaga.JAM_SELESAI\n    FROM tb_dokter INNER JOIn tb_jaga\n    ON tb_dokter.KD_DOKTER=tb_jaga.KD_DOKTER;   Output                             Inner Join dalam 3 tabel  Menampilkan data dengan kolom (nama dokter, nama spesialis, jam mulai jaga, jam selesai jaga)      SELECT tb_dokter.NAMA_DOKTER, tb_spesialis.SPESIALIS, tb_jaga.JAM_MULAI, tb_jaga.JAM_SELESAI\n    FROM ((tb_dokter INNER JOIN tb_spesialis ON tb_dokter.KD_SPESIALIS = tb_spesialis.KD_SPESIALIS)\n    INNER JOIN tb_jaga ON tb_dokter.KD_DOKTER = tb_jaga.KD_DOKTER);   Output", 
            "title": "Contoh Case 2"
        }, 
        {
            "location": "/menu/sql/sql_innerJoin/#contoh-case-3", 
            "text": "Desaigner Database :  Database = db_magang_1       Soal dan Jawaban case :    1. Menampilkan data dengan kolom (nama kecamatan, nama kabupaten)        SELECT kecamatan.nama_kecamatan,kabupaten.nama_kabupaten\n    FROM kecamatan,kabupaten\n    WHERE kecamatan.id_kabupaten=kabupaten.id_kabupaten\n\n    atau\n\n    SELECT x.nama_kecamatan,y.nama_kabupaten\n    FROM kecamatan x,kabupaten y\n    WHERE x.id_kabupaten=y.id_kabupaten\n\n    atau\n\n    SELECT kecamatan.nama_kecamatan,kabupaten.nama_kabupaten\n    FROM kecamatan INNER JOIN kabupaten\n    ON (kecamatan.id_kabupaten=kabupaten.id_kabupaten)   Output                             2. Menampilkan data dengan kolom (nama kecamatan, nama kabupaten, nama provinsinya)      SELECT kecamatan.nama_kecamatan,kabupaten.nama_kabupaten, provinsi.nama_provinsi\n    FROM kecamatan, kabupaten, provinsi\n    WHERE kecamatan.id_kabupaten=kabupaten.id_kabupaten AND kabupaten.id_provinsi=provinsi.id_provinsi   Output                             3. Menampilkan data dengan kolom (nama kecamatan, nama provinsinya)        SELECT kecamatan.nama_kecamatan, provinsi.nama_provinsi\n    FROM kecamatan, kabupaten, provinsi\n    WHERE kecamatan.id_kabupaten=kabupaten.id_kabupaten AND kabupaten.id_provinsi=provinsi.id_provinsi   Output", 
            "title": "Contoh Case 3"
        }, 
        {
            "location": "/menu/sql/sql_innerJoin/#contoh-case-4", 
            "text": "Desaigner Database :  Database = db_magang_1       Soal dan Penyelesaian :    Penambahan tabel negara       Tabel negara\n    - id\n    - nama\n\n    Tabel provinsi\n    - id_provinsi\n    - id_negara\n    - nama_provinsi\n\n    Tabel kabupaten\n    - id_kabupaten\n    - id_provinsi\n    - nama_kabupaten\n    - jumlah_penduduk\n\n    Tabel kecamatan\n    - id_kecamatan\n    - id_kabupaten\n    - nama_kecamatan  Langkah \u2013 langkah :      SELECT (nama field / nama kolom yang akan ditampilkan)\n    FROM (tabel sesuai field / kolom yang akan ditampilkan)\n    WHERE (kondisi dimana tabelA.Key=tabelB.Key)\n    AND (penambahan kondisi)  1. Menampilkan data dengan kolom (nama kecamatan, nama kabupaten ,nama provinsinya , nama negara)         SELECT kecamatan.nama_kecamatan , kabupaten.nama_kabupaten , provinsi.nama_provinsi , negara.nama\n    FROM kecamatan , kabupaten , provinsi , negara\n    WHERE kecamatan.id_kabupaten = kabupaten.id_kabupaten \n    AND kabupaten.id_provinsi = provinsi.id_provinsi \n    AND negara.id = provinsi.id_negara  2. Menampilkan data dengan kolom (nama kecamatan, nama kabupaten)         SELECT kecamatan.nama_kecamatan,kabupaten.nama_kabupaten\n    FROM kecamatan,kabupaten\n    WHERE kecamatan.id_kabupaten=kabupaten.id_kabupaten\n\n    Atau\n    SELECT x.nama_kecamatan,y.nama_kabupaten\n    FROM kecamatan x,kabupaten y\n    WHERE x.id_kabupaten=y.id_kabupaten\n\n    Atau\n    SELECT kecamatan.nama_kecamatan,kabupaten.nama_kabupaten\n    FROM kecamatan INNER JOIN kabupaten\n    ON (kecamatan.id_kabupaten=kabupaten.id_kabupaten)   Output", 
            "title": "Contoh Case 4"
        }, 
        {
            "location": "/menu/sql/sql_leftJoin/", 
            "text": "SQL Left Join\n\n\n\n\nA. Penjelasan\n\n\nSQL Left Join adalah Untuk mengembalikan semua record dari tabel kiri (table1), dan catatan yang cocok dari tabel kanan (table2). Hasilnya adalah NULL dari sisi kanan, jika tidak ada yang cocok.\n\n\n\n\n\n\nB. Bentuk Syntax Umum\n\n\n    SELECT nama_kolom(s)\n    FROM tabel1 LEFT JOIN tabel2 \n    ON tabel1.nama_kolom = tabel2.nama_kolom;\n\n\n\n\n\n\n\nC. Implementasi\n\n\nContoh Case\n\n\n\n\n\n\nDesigner Database :\n\n\nDatabase = ukk_11102016_sbd_153140914111007_hildakhairunnisa\n\n\n\n\n\n \n\n\n\n\n\n\nSoal dan Jawaban Case :\n\n\n\n\n\n\nLeft Join dalam 2 tabel\n\n\n1. Menampilkan data dengan kolom (nama dokter, jam mulai jaga dan jam selesai jaga)\n \n\n\nNOTE : untuk mengetahui tabel ke 2 yang tidak terisi dan bernilai NULL\n\n\n    SELECT tb_dokter.NAMA_DOKTER, tb_jaga.JAM_MULAI, tb_jaga.JAM_SELESAI\n    FROM tb_dokter LEFT JOIN tb_jaga\n    ON tb_dokter.KD_DOKTER=tb_jaga.KD_DOKTER;\n\n\n\n\n\n\n\nOutput                       \n\n\n\n\n\n\n2. Menampilkan data dengan kolom (nama dokter, jam mulai jaga dan jam selesai jaga)\n\n\nNOTE : untuk mengetahui tabel ke 2 yang tidak terisi dan bernilai NULL, data diurutkan berdasarkan nama dokter (urut dari A-Z)\n  \n\n\n    SELECT tb_dokter.NAMA_DOKTER, tb_jaga.JAM_MULAI, tb_jaga.JAM_SELESAI\n    FROM tb_dokter LEFT JOIN tb_jaga\n    ON tb_dokter.KD_DOKTER=tb_jaga.KD_DOKTER\n    ORDER BY tb_dokter.NAMA_DOKTER;\n\n\n\n\n\n\n\nOutput                       \n\n\n \n\n\n\n\n3. Menampilkan data dengan kolom (nama dokter, jam mulai jaga dan jam selesai jaga)\n\n\nNOTE : untuk mengetahui tabel ke 2 yang tidak terisi dan bernilai NULL, data diurutkan berdasarkan nama dokter (urut dari Z-A)\n  \n\n\n    SELECT tb_dokter.NAMA_DOKTER, tb_jaga.JAM_MULAI, tb_jaga.JAM_SELESAI\n    FROM tb_dokter LEFT JOIN tb_jaga\n    ON tb_dokter.KD_DOKTER=tb_jaga.KD_DOKTER\n    ORDER BY tb_dokter.NAMA_DOKTER DESC;\n\n\n\n\n\n\n\nOutput                       \n\n\n \n\n\n\n\nLeft Join dalam 3 tabel \n\n\nMenampilkan data dengan kolom (nama dokter, nama spesialis, jam mulai jaga, jam selesai jaga)\n \n\n\nNOTE : untuk mengetahui tabel ke 2 atau ke 3 yang tidak terisi dan bernilai NULL\n\n\n    SELECT tb_dokter.NAMA_DOKTER, tb_spesialis.SPESIALIS, tb_jaga.JAM_MULAI, tb_jaga.JAM_SELESAI\n    FROM ((tb_dokter LEFT JOIN tb_spesialis ON tb_dokter.KD_SPESIALIS = tb_spesialis.KD_SPESIALIS)\n    LEFT JOIN tb_jaga ON tb_dokter.KD_DOKTER = tb_jaga.KD_DOKTER);\n\n\n\n\n\n\n\nOutput                       \n\n\n   \n\n\n\n\nLeft Join IS NULL\n\n\nMenampilkan data dengan kolom (nama dokter, jam mulai juga, jam selesai jaga)\n \n\n\nNOTE : untuk mengetahui tabel ke 2 yang hanya bernilai NULL\n\n\n    SELECT tb_dokter.NAMA_DOKTER, tb_jaga.JAM_MULAI, tb_jaga.JAM_SELESAI\n    FROM tb_dokter LEFT JOIN tb_jaga\n    ON tb_dokter.KD_DOKTER=tb_jaga.KD_DOKTER\n    WHERE tb_jaga.KD_DOKTER IS NULL;\n\n\n\n\n\n\n\nOutput", 
            "title": "SQL Left Join"
        }, 
        {
            "location": "/menu/sql/sql_leftJoin/#sql-left-join", 
            "text": "", 
            "title": "SQL Left Join"
        }, 
        {
            "location": "/menu/sql/sql_leftJoin/#a-penjelasan", 
            "text": "SQL Left Join adalah Untuk mengembalikan semua record dari tabel kiri (table1), dan catatan yang cocok dari tabel kanan (table2). Hasilnya adalah NULL dari sisi kanan, jika tidak ada yang cocok.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/sql/sql_leftJoin/#b-bentuk-syntax-umum", 
            "text": "SELECT nama_kolom(s)\n    FROM tabel1 LEFT JOIN tabel2 \n    ON tabel1.nama_kolom = tabel2.nama_kolom;", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/sql/sql_leftJoin/#c-implementasi", 
            "text": "", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/sql/sql_leftJoin/#contoh-case", 
            "text": "Designer Database :  Database = ukk_11102016_sbd_153140914111007_hildakhairunnisa       Soal dan Jawaban Case :    Left Join dalam 2 tabel  1. Menampilkan data dengan kolom (nama dokter, jam mulai jaga dan jam selesai jaga)    NOTE : untuk mengetahui tabel ke 2 yang tidak terisi dan bernilai NULL      SELECT tb_dokter.NAMA_DOKTER, tb_jaga.JAM_MULAI, tb_jaga.JAM_SELESAI\n    FROM tb_dokter LEFT JOIN tb_jaga\n    ON tb_dokter.KD_DOKTER=tb_jaga.KD_DOKTER;   Output                           2. Menampilkan data dengan kolom (nama dokter, jam mulai jaga dan jam selesai jaga)  NOTE : untuk mengetahui tabel ke 2 yang tidak terisi dan bernilai NULL, data diurutkan berdasarkan nama dokter (urut dari A-Z)         SELECT tb_dokter.NAMA_DOKTER, tb_jaga.JAM_MULAI, tb_jaga.JAM_SELESAI\n    FROM tb_dokter LEFT JOIN tb_jaga\n    ON tb_dokter.KD_DOKTER=tb_jaga.KD_DOKTER\n    ORDER BY tb_dokter.NAMA_DOKTER;   Output                             3. Menampilkan data dengan kolom (nama dokter, jam mulai jaga dan jam selesai jaga)  NOTE : untuk mengetahui tabel ke 2 yang tidak terisi dan bernilai NULL, data diurutkan berdasarkan nama dokter (urut dari Z-A)         SELECT tb_dokter.NAMA_DOKTER, tb_jaga.JAM_MULAI, tb_jaga.JAM_SELESAI\n    FROM tb_dokter LEFT JOIN tb_jaga\n    ON tb_dokter.KD_DOKTER=tb_jaga.KD_DOKTER\n    ORDER BY tb_dokter.NAMA_DOKTER DESC;   Output                             Left Join dalam 3 tabel   Menampilkan data dengan kolom (nama dokter, nama spesialis, jam mulai jaga, jam selesai jaga)    NOTE : untuk mengetahui tabel ke 2 atau ke 3 yang tidak terisi dan bernilai NULL      SELECT tb_dokter.NAMA_DOKTER, tb_spesialis.SPESIALIS, tb_jaga.JAM_MULAI, tb_jaga.JAM_SELESAI\n    FROM ((tb_dokter LEFT JOIN tb_spesialis ON tb_dokter.KD_SPESIALIS = tb_spesialis.KD_SPESIALIS)\n    LEFT JOIN tb_jaga ON tb_dokter.KD_DOKTER = tb_jaga.KD_DOKTER);   Output                               Left Join IS NULL  Menampilkan data dengan kolom (nama dokter, jam mulai juga, jam selesai jaga)    NOTE : untuk mengetahui tabel ke 2 yang hanya bernilai NULL      SELECT tb_dokter.NAMA_DOKTER, tb_jaga.JAM_MULAI, tb_jaga.JAM_SELESAI\n    FROM tb_dokter LEFT JOIN tb_jaga\n    ON tb_dokter.KD_DOKTER=tb_jaga.KD_DOKTER\n    WHERE tb_jaga.KD_DOKTER IS NULL;   Output", 
            "title": "Contoh Case"
        }, 
        {
            "location": "/menu/sql/sql_rightJoin/", 
            "text": "SQL Right Join\n\n\n\n\nA. Penjelasan\n\n\nSQL Right Join adalah Untuk mengembalikan semua catatan dari tabel kanan (table2), dan catatan yang cocok dari tabel kiri (table1). Hasilnya adalah NULL dari sisi kiri, bila tidak ada yang cocok.\n\n\n\n\n\n\nB. Bentuk Syntax Umum\n\n\n    SELECT nama_kolom(s)\n    FROM tabel1 RIGHT JOIN tabel2 \n    ON tabel1.nama_kolom = tabel2.nama_kolom;\n\n\n\n\n\n\n\nC. Implementasi\n\n\nContoh Case\n\n\n\n\n\n\nDesigner Database :\n\n\nDatabase = ukk_11102016_sbd_153140914111007_hildakhairunnisa\n\n\n\n\n\n \n\n\n\n\n\n\nSoal dan Jawaban Case :\n\n\n\n\n\n\nRight Join dalam 2 tabel\n\n\n1. Menampilkan data dengan kolom (nama dokter, nama spesialis)\n\n\nNOTE : untuk mengetahui tabel ke 1 yang tidak terisi dan bernilai NULL\n\n\n    SELECT tb_dokter.NAMA_DOKTER, tb_spesialis.SPESIALIS\n    FROM tb_dokter RIGHT JOIN tb_spesialis \n    ON tb_dokter.KD_SPESIALIS = tb_spesialis.KD_SPESIALIS;\n\n\n\n\n\n\n\nOutput                       \n\n\n     \n\n\n\n\n2. Menampilkan data dengan (nama dokter, nama spesialis)\n\n\nNOTE: untuk mengetahui tabel ke 1 yang tidak terisi dan bernilai NULL, data diurutkan berdasarkan nama dokter (urut dari A-Z)\n\n\n    SELECT tb_dokter.NAMA_DOKTER, tb_spesialis.SPESIALIS\n    FROM tb_dokter RIGHT JOIN tb_spesialis \n    ON tb_dokter.KD_SPESIALIS = tb_spesialis.KD_SPESIALIS\n    ORDER BY tb_dokter.NAMA_DOKTER;\n\n\n\n\n\n\n\nOutput                       \n\n\n  \n\n\n\n\n3. Menampilkan data dengan kolom (nama dokter, nama spesialis)\n \n\n\nNOTE: untuk mengetahui tabel ke 1 yang tidak terisi dan bernilai NULL, data diurutkan berdasarkan nama dokter (urut dari Z-A)\n\n\n    SELECT tb_dokter.NAMA_DOKTER, tb_spesialis.SPESIALIS\n    FROM tb_dokter RIGHT JOIN tb_spesialis \n    ON tb_dokter.KD_SPESIALIS = tb_spesialis.KD_SPESIALIS\n    ORDER BY tb_dokter.NAMA_DOKTER DESC;\n\n\n\n\n\n\n\nOutput                       \n\n\n  \n\n\n\n\nRight Join IS NULL\n\n\nMenampilkan data dengan kolom (nama dokter, nama spesialis)\n\n\nNOTE : untuk mengetahui tabel ke 1 yang hanya bernilai NULL\n\n\n    SELECT tb_dokter.NAMA_DOKTER, tb_spesialis.SPESIALIS\n    FROM tb_dokter RIGHT JOIN tb_spesialis \n    ON tb_dokter.KD_SPESIALIS = tb_spesialis.KD_SPESIALIS\n    WHERE tb_dokter.KD_SPESIALIS IS NULL;\n\n\n\n\n\n\n\nOutput", 
            "title": "SQL Right Join"
        }, 
        {
            "location": "/menu/sql/sql_rightJoin/#sql-right-join", 
            "text": "", 
            "title": "SQL Right Join"
        }, 
        {
            "location": "/menu/sql/sql_rightJoin/#a-penjelasan", 
            "text": "SQL Right Join adalah Untuk mengembalikan semua catatan dari tabel kanan (table2), dan catatan yang cocok dari tabel kiri (table1). Hasilnya adalah NULL dari sisi kiri, bila tidak ada yang cocok.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/sql/sql_rightJoin/#b-bentuk-syntax-umum", 
            "text": "SELECT nama_kolom(s)\n    FROM tabel1 RIGHT JOIN tabel2 \n    ON tabel1.nama_kolom = tabel2.nama_kolom;", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/sql/sql_rightJoin/#c-implementasi", 
            "text": "", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/sql/sql_rightJoin/#contoh-case", 
            "text": "Designer Database :  Database = ukk_11102016_sbd_153140914111007_hildakhairunnisa       Soal dan Jawaban Case :    Right Join dalam 2 tabel  1. Menampilkan data dengan kolom (nama dokter, nama spesialis)  NOTE : untuk mengetahui tabel ke 1 yang tidak terisi dan bernilai NULL      SELECT tb_dokter.NAMA_DOKTER, tb_spesialis.SPESIALIS\n    FROM tb_dokter RIGHT JOIN tb_spesialis \n    ON tb_dokter.KD_SPESIALIS = tb_spesialis.KD_SPESIALIS;   Output                                 2. Menampilkan data dengan (nama dokter, nama spesialis)  NOTE: untuk mengetahui tabel ke 1 yang tidak terisi dan bernilai NULL, data diurutkan berdasarkan nama dokter (urut dari A-Z)      SELECT tb_dokter.NAMA_DOKTER, tb_spesialis.SPESIALIS\n    FROM tb_dokter RIGHT JOIN tb_spesialis \n    ON tb_dokter.KD_SPESIALIS = tb_spesialis.KD_SPESIALIS\n    ORDER BY tb_dokter.NAMA_DOKTER;   Output                              3. Menampilkan data dengan kolom (nama dokter, nama spesialis)    NOTE: untuk mengetahui tabel ke 1 yang tidak terisi dan bernilai NULL, data diurutkan berdasarkan nama dokter (urut dari Z-A)      SELECT tb_dokter.NAMA_DOKTER, tb_spesialis.SPESIALIS\n    FROM tb_dokter RIGHT JOIN tb_spesialis \n    ON tb_dokter.KD_SPESIALIS = tb_spesialis.KD_SPESIALIS\n    ORDER BY tb_dokter.NAMA_DOKTER DESC;   Output                              Right Join IS NULL  Menampilkan data dengan kolom (nama dokter, nama spesialis)  NOTE : untuk mengetahui tabel ke 1 yang hanya bernilai NULL      SELECT tb_dokter.NAMA_DOKTER, tb_spesialis.SPESIALIS\n    FROM tb_dokter RIGHT JOIN tb_spesialis \n    ON tb_dokter.KD_SPESIALIS = tb_spesialis.KD_SPESIALIS\n    WHERE tb_dokter.KD_SPESIALIS IS NULL;   Output", 
            "title": "Contoh Case"
        }, 
        {
            "location": "/menu/sql/sql_fungsi/", 
            "text": "SQL Fungsi\n\n\n\n\nA. Penjelasan\n\n\na. SQL Fungsi Agregasi\n\n\nSQL Fungsi Agregasi adalah untuk mengembalikan satu nilai, dihitung dari nilai dalam kolom.\n\n\n\n\n\n\n\n\nFungsi\n\n\nKegunaan\n\n\nContoh\n\n\n\n\n\n\n\n\n\n\nAVG()\n\n\nuntuk mencari rata-rata nilai\n\n\nSELECT AVG(harga) AS Harga_rata2 FROM order\n\n\n\n\n\n\nCOUNT()\n\n\nuntuk menghitung jumlah record (baris)\n\n\nSELECT COUNT(id) AS Jumlah_tamu FROM bukutamu\n\n\n\n\n\n\nMAX()\n\n\nuntuk mencari nilai terakhir\n\n\nSELECT MAX(harga) AS Harga_termahal FROM order\n\n\n\n\n\n\nMIN()\n\n\nuntuk mencari nilai terkecil\n\n\nSELECT MIN(harga) AS Harga_termurah FROM order\n\n\n\n\n\n\nROUND()\n\n\nuntuk membulatkan angka ke jumlah digit yang ditentukan\n\n\nSELECT no_mhs,ROUND(nilai,0)as nilai bulat FROM nilai\n\n\n\n\n\n\nSUM()\n\n\nuntuk menghitung penjumlahan data\n\n\nSELECT SUM(harga) AS Harga_total FROM order\n\n\n\n\n\n\n\n\nb. SQL Fungsi String\n\n\n\n\n\n\n\n\nFungsi\n\n\nKegunaan\n\n\nCOntoh\n\n\n\n\n\n\n\n\n\n\nCONCAT()\n\n\nuntuk menghitung jumlah record (baris)\n\n\nSELECT CONCAT('Dan', 'Morgan') FROM dual\n\n\n\n\n\n\nLEFT()\n\n\nuntuk mengambil nilai dari suatu string dari posisi kiri\n\n\nSELECT Nm_brg, Left(Nm_brg,2)\n\n\n\n\n\n\nLEN() / LENGTH()\n\n\nuntuk menghitung panjang string\n\n\nSELECT LEN(nama) as panjang_nama FROM bukutamu\n\n\n\n\n\n\nLOWER() / LCASE()\n\n\nuntuk merubah string menjadi huruf kecil seluruhnya\n\n\nSELECT LCASE(nama) as Nama FROM bukutamu\n\n\n\n\n\n\nLTRIM()\n\n\nuntuk memotong suatu karakter pada sebelah kiri\n\n\nSELECT LTRIM(' Dan Morgan ') FROM dual\n\n\n\n\n\n\nSUBSTRING() / MID()\n\n\nuntuk mengambil nilai suatu string dari arah kiri\n\n\nSELECT MID (kota,1,4) as singkatan_kota FROM\n\n\n\n\n\n\nREPLACE()\n\n\nuntuk mengganti karakter / memotong string\n\n\nSELECT REPLACE(\u2018www.google.com\u2019, \u2018w\u2019, \u2018WW\u2019)\n\n\n\n\n\n\nRIGHT()\n\n\nuntuk mengambil nilai dari suatu string dari posisi kanan\n\n\nSELECT Nm_brg, Right(Nm_brg,2)\n\n\n\n\n\n\nRTRIM()\n\n\nuntuk memotong suatu karakter pada sebelah kanan\n\n\nSELECT RTRIM(' Dan Morgan ') FROM dual\n\n\n\n\n\n\nUPPER() / UCASE()\n\n\nuntuk merubah string menjadi huruf kapital seluruhnya\n\n\nSELECT UCASE(nama) as Nama FROM bukutamu\n\n\n\n\n\n\n\n\n\n\nB. Implementasi\n\n\nContoh Case\n\n\n\n\n\n\nDesaigner Database :\n\n\nDatabase = db_magang_2\n\n\n\n\n\n \n\n\n\n\n\n\nSoal dan Penyelesaian :\n\n\n\n\n\n\nSource Code (Contoh Soal)\n\n\n    SELECT siswa.id, siswa.nama, LEFT(siswa.nama, 3) , RIGHT(siswa.nama, 3) , \n    SUBSTRING(siswa.nama, 2, 2) ,LENGTH (siswa.nama) , LPAD(siswa.nama, 10, \nx\n) , \n    LPAD(siswa.id, 10, \n0\n) , lcase(siswa.nama) , ucase(siswa.nama), \n    CONCAT(\nNama Saya \n, siswa.nama , \n, saya lahir di \n, tempat_lahir) , \n    DATEDIFF(\n2014-11-30\n,\n2014-11-29\n) \n    FROM siswa\n\n\n\n\n\n\n\nOutput\n\n \n\n\n\n\nSoal : Outputnya dalam 1 kolom yang bernama Keterangan\n\n\n    nama kolom as Keterangan\n    \nNama saya YONDI , id saya 17000001, Saya lahir di Nganjuk , \n    saya lahir pada 26 October 1995 dan \n    sekarang umur saya 29 Tahun dan alamat saya JL. Diponegoro no 26 \n    kecamatan Wilangan kabupaten Nganjuk Jawa Timur \n\n\n\n\n\n\n\n\n\n\nJawaban Source Code 1 (Menampilkan seluruh data)\n\n\nSELECT CONCAT(\nNama Saya \n, UCASE(siswa.nama), \n, id saya \n, SUBSTRING(NOW(), 3, 2), LPAD(siswa.id, 6, \n0\n), \n, Saya lahir di \n, UCASE(SUBSTRING(siswa.tempat_lahir, 1,1)), LCASE(SUBSTRING(siswa.tempat_lahir, 2)), \n, saya lahir pada \n, DATE_FORMAT(siswa.tanggal_lahir, \n%d %M %Y\n), \n dan sekarang umur saya \n, \n(YEAR(NOW()) - YEAR(tanggal_lahir)) , \n Tahun dan alamat saya \n ,UCASE(SUBSTRING(siswa.alamat, 1,4)),LCASE(SUBSTRING(siswa.alamat, 5)) , \n kecamatan \n, \nUCASE(SUBSTRING(kecamatan.nama, 1,1)), LCASE(SUBSTRING(kecamatan.nama, 2)) , \n kabupaten \n, UCASE(SUBSTRING(kabupaten.nama, 1,1)),\nLCASE(SUBSTRING(kabupaten.nama, 2)), \n \n, UCASE(SUBSTRING(provinsi.nama, 1,1)), LCASE(SUBSTRING(provinsi.nama, 2)) ) AS Keterangan \nFROM siswa, kecamatan, kabupaten, provinsi \nWHERE siswa.id_kecamatan = kecamatan.id \nAND kecamatan.id_kabupaten = kabupaten.id \nAND kabupaten.id_provinsi = provinsi.id\n\n\n\n\n\n\n\nOutput :                                                                  \n\n\n\n\n\n\n\n\n\n\nJawaban Source Code 2 (Hanya menampilkan data Yondi sesuai Tugas)\n\n\nSELECT CONCAT(\nNama Saya \n, UCASE(siswa.nama), \n, id saya \n, SUBSTRING(NOW(), 3, 2), LPAD(siswa.id, 6, \n0\n), \n, Saya lahir di \n, UCASE(SUBSTRING(siswa.tempat_lahir, 1,1)), LCASE(SUBSTRING(siswa.tempat_lahir, 2)), \n, saya lahir pada \n, DATE_FORMAT(siswa.tanggal_lahir, \n%d %M %Y\n), \n dan sekarang umur saya \n, \n(YEAR(NOW()) - YEAR(tanggal_lahir)) , \n Tahun dan alamat saya \n ,UCASE(SUBSTRING(siswa.alamat, 1,4)), LCASE(SUBSTRING(siswa.alamat, 5)) , \n kecamatan \n, \nUCASE(SUBSTRING(kecamatan.nama, 1,1)), LCASE(SUBSTRING(kecamatan.nama, 2)) , \n kabupaten \n, UCASE(SUBSTRING(kabupaten.nama, 1,1)), LCASE(SUBSTRING(kabupaten.nama, 2)), \n \n, UCASE(SUBSTRING(provinsi.nama, 1,1)), LCASE(SUBSTRING(provinsi.nama, 2)) ) AS Keterangan \nFROM siswa, kecamatan, kabupaten, provinsi \nWHERE siswa.id_kecamatan = kecamatan.id \nAND kecamatan.id_kabupaten = kabupaten.id \nAND kabupaten.id_provinsi = provinsi.id\nAND siswa.nama = \nYONDI\n\n\n\n\n\n\n\n\nOutput :", 
            "title": "SQL Fungsi"
        }, 
        {
            "location": "/menu/sql/sql_fungsi/#sql-fungsi", 
            "text": "", 
            "title": "SQL Fungsi"
        }, 
        {
            "location": "/menu/sql/sql_fungsi/#a-penjelasan", 
            "text": "a. SQL Fungsi Agregasi  SQL Fungsi Agregasi adalah untuk mengembalikan satu nilai, dihitung dari nilai dalam kolom.     Fungsi  Kegunaan  Contoh      AVG()  untuk mencari rata-rata nilai  SELECT AVG(harga) AS Harga_rata2 FROM order    COUNT()  untuk menghitung jumlah record (baris)  SELECT COUNT(id) AS Jumlah_tamu FROM bukutamu    MAX()  untuk mencari nilai terakhir  SELECT MAX(harga) AS Harga_termahal FROM order    MIN()  untuk mencari nilai terkecil  SELECT MIN(harga) AS Harga_termurah FROM order    ROUND()  untuk membulatkan angka ke jumlah digit yang ditentukan  SELECT no_mhs,ROUND(nilai,0)as nilai bulat FROM nilai    SUM()  untuk menghitung penjumlahan data  SELECT SUM(harga) AS Harga_total FROM order     b. SQL Fungsi String     Fungsi  Kegunaan  COntoh      CONCAT()  untuk menghitung jumlah record (baris)  SELECT CONCAT('Dan', 'Morgan') FROM dual    LEFT()  untuk mengambil nilai dari suatu string dari posisi kiri  SELECT Nm_brg, Left(Nm_brg,2)    LEN() / LENGTH()  untuk menghitung panjang string  SELECT LEN(nama) as panjang_nama FROM bukutamu    LOWER() / LCASE()  untuk merubah string menjadi huruf kecil seluruhnya  SELECT LCASE(nama) as Nama FROM bukutamu    LTRIM()  untuk memotong suatu karakter pada sebelah kiri  SELECT LTRIM(' Dan Morgan ') FROM dual    SUBSTRING() / MID()  untuk mengambil nilai suatu string dari arah kiri  SELECT MID (kota,1,4) as singkatan_kota FROM    REPLACE()  untuk mengganti karakter / memotong string  SELECT REPLACE(\u2018www.google.com\u2019, \u2018w\u2019, \u2018WW\u2019)    RIGHT()  untuk mengambil nilai dari suatu string dari posisi kanan  SELECT Nm_brg, Right(Nm_brg,2)    RTRIM()  untuk memotong suatu karakter pada sebelah kanan  SELECT RTRIM(' Dan Morgan ') FROM dual    UPPER() / UCASE()  untuk merubah string menjadi huruf kapital seluruhnya  SELECT UCASE(nama) as Nama FROM bukutamu", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/sql/sql_fungsi/#b-implementasi", 
            "text": "", 
            "title": "B. Implementasi"
        }, 
        {
            "location": "/menu/sql/sql_fungsi/#contoh-case", 
            "text": "Desaigner Database :  Database = db_magang_2       Soal dan Penyelesaian :    Source Code (Contoh Soal)      SELECT siswa.id, siswa.nama, LEFT(siswa.nama, 3) , RIGHT(siswa.nama, 3) , \n    SUBSTRING(siswa.nama, 2, 2) ,LENGTH (siswa.nama) , LPAD(siswa.nama, 10,  x ) , \n    LPAD(siswa.id, 10,  0 ) , lcase(siswa.nama) , ucase(siswa.nama), \n    CONCAT( Nama Saya  , siswa.nama ,  , saya lahir di  , tempat_lahir) , \n    DATEDIFF( 2014-11-30 , 2014-11-29 ) \n    FROM siswa   Output     Soal : Outputnya dalam 1 kolom yang bernama Keterangan      nama kolom as Keterangan\n     Nama saya YONDI , id saya 17000001, Saya lahir di Nganjuk , \n    saya lahir pada 26 October 1995 dan \n    sekarang umur saya 29 Tahun dan alamat saya JL. Diponegoro no 26 \n    kecamatan Wilangan kabupaten Nganjuk Jawa Timur      Jawaban Source Code 1 (Menampilkan seluruh data)  SELECT CONCAT( Nama Saya  , UCASE(siswa.nama),  , id saya  , SUBSTRING(NOW(), 3, 2), LPAD(siswa.id, 6,  0 ),  , Saya lahir di  , UCASE(SUBSTRING(siswa.tempat_lahir, 1,1)), LCASE(SUBSTRING(siswa.tempat_lahir, 2)),  , saya lahir pada  , DATE_FORMAT(siswa.tanggal_lahir,  %d %M %Y ),   dan sekarang umur saya  , \n(YEAR(NOW()) - YEAR(tanggal_lahir)) ,   Tahun dan alamat saya   ,UCASE(SUBSTRING(siswa.alamat, 1,4)),LCASE(SUBSTRING(siswa.alamat, 5)) ,   kecamatan  , \nUCASE(SUBSTRING(kecamatan.nama, 1,1)), LCASE(SUBSTRING(kecamatan.nama, 2)) ,   kabupaten  , UCASE(SUBSTRING(kabupaten.nama, 1,1)),\nLCASE(SUBSTRING(kabupaten.nama, 2)),    , UCASE(SUBSTRING(provinsi.nama, 1,1)), LCASE(SUBSTRING(provinsi.nama, 2)) ) AS Keterangan \nFROM siswa, kecamatan, kabupaten, provinsi \nWHERE siswa.id_kecamatan = kecamatan.id \nAND kecamatan.id_kabupaten = kabupaten.id \nAND kabupaten.id_provinsi = provinsi.id   Output :                                                                        Jawaban Source Code 2 (Hanya menampilkan data Yondi sesuai Tugas)  SELECT CONCAT( Nama Saya  , UCASE(siswa.nama),  , id saya  , SUBSTRING(NOW(), 3, 2), LPAD(siswa.id, 6,  0 ),  , Saya lahir di  , UCASE(SUBSTRING(siswa.tempat_lahir, 1,1)), LCASE(SUBSTRING(siswa.tempat_lahir, 2)),  , saya lahir pada  , DATE_FORMAT(siswa.tanggal_lahir,  %d %M %Y ),   dan sekarang umur saya  , \n(YEAR(NOW()) - YEAR(tanggal_lahir)) ,   Tahun dan alamat saya   ,UCASE(SUBSTRING(siswa.alamat, 1,4)), LCASE(SUBSTRING(siswa.alamat, 5)) ,   kecamatan  , \nUCASE(SUBSTRING(kecamatan.nama, 1,1)), LCASE(SUBSTRING(kecamatan.nama, 2)) ,   kabupaten  , UCASE(SUBSTRING(kabupaten.nama, 1,1)), LCASE(SUBSTRING(kabupaten.nama, 2)),    , UCASE(SUBSTRING(provinsi.nama, 1,1)), LCASE(SUBSTRING(provinsi.nama, 2)) ) AS Keterangan \nFROM siswa, kecamatan, kabupaten, provinsi \nWHERE siswa.id_kecamatan = kecamatan.id \nAND kecamatan.id_kabupaten = kabupaten.id \nAND kabupaten.id_provinsi = provinsi.id\nAND siswa.nama =  YONDI    Output :", 
            "title": "Contoh Case"
        }, 
        {
            "location": "/menu/sql/sql_fungsiTanggal/", 
            "text": "SQL Fungsi Tanggal\n\n\n\n\nA. Penjelsan\n\n\na. MySQL Fungsi Tanggal\n\n\n\n\n\n\n\n\nFungsi\n\n\nKegunaan\n\n\n\n\n\n\n\n\n\n\nNOW()\n\n\nuntuk mendapatkan informasi waktu (tanggal dan jam saat ini)\n\n\n\n\n\n\nCURDATE()\n\n\nuntuk mendapatkan informasi tanggal saat ini\n\n\n\n\n\n\nCURTIME()\n\n\nuntuk mendapatkan informasi jam saat ini\n\n\n\n\n\n\nDATE()\n\n\nuntuk Ekstrak bagian tanggal dari tanggal atau tanggal / ekspresi waktu\n\n\n\n\n\n\nDATE_ADD()\n\n\nuntuk menambahkan interval waktu tertentu pada sebuah tanggal\n\n\n\n\n\n\nDATE_SUB()\n\n\nuntuk untuk pengurangan sebuah tanggal dengan interval tertentu\n\n\n\n\n\n\nDATEDIFF()\n\n\nuntuk mendapatkan informasi waktu di antara 2 buah tanggal\n\n\n\n\n\n\nDATE_FORMAT()\n\n\nuntuk untuk menampilkan informasi jam dan tanggal dengan format tertentu\n\n\n\n\n\n\n\n\nb. Date Format\n\n\n\n\n\n\n\n\nFungsi\n\n\nKegunaan\n\n\n\n\n\n\n\n\n\n\n%a\n\n\nNama hari kerja yang disingkat (Sun to Sat)\n\n\n\n\n\n\n%b\n\n\nNama bulan yang disingkat (Jan to Dec)\n\n\n\n\n\n\n%c\n\n\nNama bulan numerik (0 sampai 12)\n\n\n\n\n\n\n%d\n\n\nHari dalam sebulan sebagai nilai numerik (01 sampai 31)\n\n\n\n\n\n\n%H\n\n\nHour (00-23)\n\n\n\n\n\n\n%h\n\n\nJam (00 sampai 12)\n\n\n\n\n\n\n%M\n\n\nBulan nama secara penuh (Januari sampai Desember)\n\n\n\n\n\n\n%m\n\n\nNama bulan sebagai nilai numerik (00 sampai 12)\n\n\n\n\n\n\n%p\n\n\nAM atau PM\n\n\n\n\n\n\n%W\n\n\nNama hari kerja secara penuh (Minggu sampai Sabtu)\n\n\n\n\n\n\n%Y\n\n\nTahun sebagai angka, nilai 4 digit\n\n\n\n\n\n\n%y\n\n\nTahun sebagai angka, nilai 2 digit\n\n\n\n\n\n\n\n\nc. SQL Tipe Data Tanggal\n\n\n\n\n\n\nMySQL dilengkapi dengan tipe data berikut untuk menyimpan tanggal atau tanggal / nilai waktu dalam database:\n\n\nDATE - format YYYY-MM-DD\nDATETIME - format: YYYY-MM-DD HH:MI:SS\nTIMESTAMP - format: YYYY-MM-DD HH:MI:SS\nYEAR - format YYYY or YY\n\n\n\n\n\n\n\n\n\nSQL Server hadir dengan tipe data berikut untuk menyimpan tanggal atau tanggal / nilai waktu dalam database:\n\n\nDATE - format YYYY-MM-DD\nDATETIME - format: YYYY-MM-DD HH:MI:SS\nSMALLDATETIME - format: YYYY-MM-DD HH:MI:SS\nTIMESTAMP - format: a unique number\n\n\n\n\n\n\n\n\n\nCatatan: Jenis tanggal dipilih untuk kolom saat Anda membuat tabel baru di database Anda", 
            "title": "SQL Fungsi Tanggal"
        }, 
        {
            "location": "/menu/sql/sql_fungsiTanggal/#sql-fungsi-tanggal", 
            "text": "", 
            "title": "SQL Fungsi Tanggal"
        }, 
        {
            "location": "/menu/sql/sql_fungsiTanggal/#a-penjelsan", 
            "text": "a. MySQL Fungsi Tanggal     Fungsi  Kegunaan      NOW()  untuk mendapatkan informasi waktu (tanggal dan jam saat ini)    CURDATE()  untuk mendapatkan informasi tanggal saat ini    CURTIME()  untuk mendapatkan informasi jam saat ini    DATE()  untuk Ekstrak bagian tanggal dari tanggal atau tanggal / ekspresi waktu    DATE_ADD()  untuk menambahkan interval waktu tertentu pada sebuah tanggal    DATE_SUB()  untuk untuk pengurangan sebuah tanggal dengan interval tertentu    DATEDIFF()  untuk mendapatkan informasi waktu di antara 2 buah tanggal    DATE_FORMAT()  untuk untuk menampilkan informasi jam dan tanggal dengan format tertentu     b. Date Format     Fungsi  Kegunaan      %a  Nama hari kerja yang disingkat (Sun to Sat)    %b  Nama bulan yang disingkat (Jan to Dec)    %c  Nama bulan numerik (0 sampai 12)    %d  Hari dalam sebulan sebagai nilai numerik (01 sampai 31)    %H  Hour (00-23)    %h  Jam (00 sampai 12)    %M  Bulan nama secara penuh (Januari sampai Desember)    %m  Nama bulan sebagai nilai numerik (00 sampai 12)    %p  AM atau PM    %W  Nama hari kerja secara penuh (Minggu sampai Sabtu)    %Y  Tahun sebagai angka, nilai 4 digit    %y  Tahun sebagai angka, nilai 2 digit     c. SQL Tipe Data Tanggal    MySQL dilengkapi dengan tipe data berikut untuk menyimpan tanggal atau tanggal / nilai waktu dalam database:  DATE - format YYYY-MM-DD\nDATETIME - format: YYYY-MM-DD HH:MI:SS\nTIMESTAMP - format: YYYY-MM-DD HH:MI:SS\nYEAR - format YYYY or YY    SQL Server hadir dengan tipe data berikut untuk menyimpan tanggal atau tanggal / nilai waktu dalam database:  DATE - format YYYY-MM-DD\nDATETIME - format: YYYY-MM-DD HH:MI:SS\nSMALLDATETIME - format: YYYY-MM-DD HH:MI:SS\nTIMESTAMP - format: a unique number    Catatan: Jenis tanggal dipilih untuk kolom saat Anda membuat tabel baru di database Anda", 
            "title": "A. Penjelsan"
        }, 
        {
            "location": "/menu/sql/sql_operator/", 
            "text": "SQL Operator\n\n\n\n\nA. Penjelsan\n\n\na. SQL Operator Aritmatika\n \n\n\n\n\n\n\n\n\nFungsi\n\n\nKegunaan\n\n\n\n\n\n\n\n\n\n\n+\n\n\nuntuk menambahkan\n\n\n\n\n\n\n-\n\n\nuntuk mengurangi\n\n\n\n\n\n\n*\n\n\nuntuk mengkalikan\n\n\n\n\n\n\n/\n\n\nuntuk membagikan\n\n\n\n\n\n\n%\n\n\nuntuk modulo\n\n\n\n\n\n\n\n\nb. SQL Operator Pembanding\n\n\n\n\n\n\n\n\nFungsi\n\n\nKegunaan\n\n\n\n\n\n\n\n\n\n\n=\n\n\nsama dengan\n\n\n\n\n\n\n\n\nlebih besar dari\n\n\n\n\n\n\n\n\nkurang dari\n\n\n\n\n\n\n=\n\n\nlebih besar dari sama dengan\n\n\n\n\n\n\n=\n\n\nkurang dari sama dengan\n\n\n\n\n\n\n\n\ntidak sebanding dengan\n\n\n\n\n\n\n\n\nc. SQL Operator Logikal\n\n\n\n\n\n\n\n\nFungsi\n\n\nKegunaan\n\n\n\n\n\n\n\n\n\n\nALL\n\n\nBENAR jika semua nilai subkueri memenuhi syarat\n\n\n\n\n\n\nAND\n\n\nBENAR jika semua kondisi dipisahkan oleh DAN BENAR\n\n\n\n\n\n\nANY\n\n\nBENAR jika salah satu nilai subkueri memenuhi syarat\n\n\n\n\n\n\nBETWEEN\n\n\nBENAR jika operan berada dalam kisaran perbandingan\n\n\n\n\n\n\nEXISTS\n\n\nBENAR jika subkueri mengembalikan satu atau lebih catatan\n\n\n\n\n\n\nIN\n\n\nBENAR jika operan sama dengan salah satu daftar ungkapan\n\n\n\n\n\n\nLIKE\n\n\nBENAR jika operan cocok dengan pola\n\n\n\n\n\n\nNOT\n\n\nMenampilkan catatan jika kondisinya TIDAK BENAR\n\n\n\n\n\n\nOR\n\n\nBENAR jika salah satu kondisi dipisahkan oleh ATAU BENAR\n\n\n\n\n\n\nSOME\n\n\nBENAR jika salah satu nilai subkueri memenuhi syarat\n\n\n\n\n\n\n\n\n\n\nB. Implementasi\n\n\nContoh Case 1\n\n\n\n\n\n\nDesaigner Database :\n\n\nDatabase = db_magang_2\n\n\n\n\n\n \n\n\n\n\n\n\nSoal dan Penyelesaian :\n\n\nOperator Pembanding : \n1. =\n2. \n\n3. \n\n4. \n\n5. \n=\n6. \n=\n7. like \n%a\n\n8. like \nb%\n\n9. like \n%b%\n\n10. in(\na\n,\nb\n)\n11. not in(\na\n,\nb\n)\n\n\n\n\n\n\n\n\n\nOperator =\n\n\n1. Menampilkan seluruh data dengan kolom (nama siswa = YONDI)\n\n\n    SELECT *\n    FROM siswa\n    WHERE nama = \nYONDI\n\n\n\n\n\n\n2. Menampilkan seluruh data dengan kolom (nama siswa = ADIT atau yang tempat lahirnya di MALANG)\n\n\n    SELECT *\n    FROM siswa\n    WHERE nama = \nADIT\n or tempat_lahir = \nMALANG\n\n\n\n\n\n\n3. Menampilkan seluruh data dengan kolom (nama siswa = YONDI atau yang nama siswanya = ADIT, ALI, NIZAR)\n\n\n    SELECT *\n    FROM siswa\n    WHERE (nama = \nYONDI\n or nama = \nADIT\n or nama = \nALI\n or nama = \nNIZAR\n)\n\n\n\n\n\n4. Menampilkan seluruh data dengan kolom (nama siswa = ADIT yang tempat lahirnya di MALANG)\n\n\n    SELECT *\n    FROM siswa\n    WHERE nama = \nADIT\n and tempat_lahir = \nMALANG\n\n\n\n\n\n\nOperator \n \n\n\nMenampilkan seluruh data dengan kolom (id siswa = id ke 10)\n\n\n    SELECT *\n    FROM siswa\n    WHERE id \n 10\n\n\n\n\n\nOperator \n \n\n\n1. Menampilkan seluruh data dengan kolom (tanggal lahir lebih besar dari 1992-10-20)\n\n\n    SELECT *\n    FROM siswa\n    WHERE siswa.tanggal_lahir \n \n1992-10-20\n\n\n\n\n\n\n2. Menampilkan seluruh data dengan kolom (tanggal lahir lebih besar dari tahun 1992)\n\n\n    SELECT *\n    FROM siswa\n    WHERE siswa.tanggal_lahir \n \n1992\u2019\n\n\n\n\n\nOperator \n \n\n\n1. Menampilkan seluruh data dengan kolom (tanggal lahir kurang dari 1992-10-20)\n\n\n    SELECT *\n    FROM siswa\n    WHERE siswa.tanggal_lahir \n \n1992-10-20\n\n\n\n\n\n\n2. Menampilkan seluruh data dengan kolom (tanggal lahir kurang dari yang tahunnya 1992)\n\n\n    SELECT *\n    FROM siswa\n    WHERE siswa.tanggal_lahir \n \n1992\u2019\n\n\n\n\n\n3. Menampilkan seluruh data dengan kolom (nama siswa = ADIT yang tanggal lahirnya lebih besar dari 1992-10-20)\n \n\n\n    select *\n    from siswa\n    where nama = \nADIT\n and tanggal_lahir \n \n1995-01-01\n\n\n\n\n\n\nOperator \n= \n\n\n1. Menampilkan seluruh data dengan kolom (tanggal lahir lebih besar dari sama dengan 1992-10-20)\n \n\n\n    SELECT *\n    FROM siswa\n    WHERE siswa.tanggal_lahir \n= \n1992-10-20\n\n\n\n\n\n\n2. Menampilkan seluruh data dengan kolom (tanggal lahir lebih besar dari sama dengan yang tahunnya 1992)\n\n\n    SELECT *\n    FROM siswa\n    WHERE siswa.tanggal_lahir \n= \n1992\u2019\n\n\n\n\n\nOperator \n=\n\n\n1. Menampilkan seluruh data dengan kolom (tanggal lahir kurang dari sama dengan 1992-10-20)\n \n\n\n    SELECT *\n    FROM siswa\n    WHERE siswa.tanggal_lahir \n= \n1992-10-20\n\n\n\n\n\n\n2. Menampilkan seluruh data dengan kolom (tanggal lahir kurang dari sama dengan yang tahunnya 1992)\n\n\n    SELECT *\n    FROM siswa\n    WHERE siswa.tanggal_lahir \n= \n1992\u2019\n\n\n\n\n\nOperator like 'a%'\n\n\nMenampilkan seluruh data dengan kolom (nama siswa yang depannya huruf A)\n\n\n    SELECT *\n    FROM siswa\n    WHERE nama like \na%\n\n\n\n\n\n\nOperator like '%a'\n\n\n1. Menampilkan seluruh data dengan kolom (nama siswa yang belakangnya huruf A)\n\n\n    SELECT *\n    FROM siswa\n    WHERE nama like \n%a\n\n\n\n\n\n\n2. Menampilkan seluruh data dengan kolom (nama siswa yang depannya huruf A dan AB)\n\n\n    SELECT *\n    FROM siswa\n    WHERE nama like \na%\n and nama like \nab%\n\n\n\n\n\n\nOperator like '%ag%' \n\n\nMenampilkan seluruh data dengan kolom (nama siswa yang memiliki huruf AG)\n\n\n    SELECT *\n    FROM siswa\n    WHERE nama like \n%ag%\n\n\n\n\n\n\nOperator in('a','b') \n\n\nMenampilkan seluruh data dengan kolom (nama siswa = YONDI, ADIT)\n\n\n    SELECT *\n    FROM siswa\n    WHERE nama IN(\nYONDI\n,\nADIT\n)\n\n\n\n\n\nOperator not in('a','b') \n\n\nMenampilkan seluruh data dengan selain kolom (nama siswa = YONDI, ADIT, ALI, NIZAR)\n\n\n    SELECT *\n    FROM siswa\n    WHERE nama NOT IN(\nYONDI\n,\nADIT\n,\nALI\n,\nNIZAR\n)\n\n\n\n\n\n\n\nContoh Case 2\n\n\n\n\n\n\nDesaigner Database : \n\n\nDatabase = db_magang_2\n\n\n\n\n\n \n\n\n\n\n\n\nSoal dan Penyelesaian :\n\n\nOperator Pembanding \n1. =\n2. \n\n3. \n\n4. \n\n5. \n=\n6. \n=\n7. like \n%a\n\n8. like \nb%\n\n9. like \n%b%\n\n10. in(\na\n,\nb\n)\n11. not in(\na\n,\nb\n)\n\n\n\n\n\n\n\n\n\nOperator = \n\n\n1. Menampilkan seluruh data dengan kolom (nama kabupaten = BLITAR)\n\n\n        SELECT *\n        FROM kabupaten\n        WHERE nama = \nBLITAR\n\n\n\n\n\n\n2. Menampilkan seluruh data dengan kolom (id kabupaten = id ke 4)\n\n\n        SELECT *\n        FROM kabupaten\n        WHERE id = 4\n\n\n\n\n\n3. Menampilkan data dengan kolom (nama siswa = ADIT yang nama kabupatennya di KEDIRI\n\n\n        SELECT siswa.nama, kabupaten.nama\n        FROM siswa INNER JOIN kabupaten\n        ON siswa.nama = \nADIT\nAND kabupaten.nama = \nKEDIRI\n\n\n\n\n\n\n4. Menampilkan data dengan kolom (nama siswa = YONDI atau yang nama siswanya = ADIT, ALI, NIZAR)\n\n\n        SELECT *\n        FROM siswa\n        WHERE (nama = \nYONDI\n or nama = \nADIT\n or nama = \nALI\n or nama = \nNIZAR\n)\n\n\n\n\n\n5. Menampilkan data dengan kolom (nisn siswa, nama siswa = YONDI atau yang nama siswanya = \"ADIT, ALI, NIZAR\", nama mata pelajaran, nilai angka dari siswa untuk nama\n\n\nNOTE : data diurutkan berdasarkan nama siswa (urut dari Z-A)\n \n\n\n        SELECT siswa.nisn, siswa.nama, mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n        FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n        WHERE siswa.id = nilai_mata_pelajaran.id_siswa \n        and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran \n        and siswa.nama = \nYONDI\n or siswa.nama = \nADIT\n or siswa.nama = \nALI\n or siswa.nama = \nNIZAR\n\n        ORDER BY siswa.nama DESC\n\n\n\n\n\n6. Menampilkan data dengan kolom (nisn siswa, nama siswa, nama mata pelajaran, nilai kecuali nilai angka dari nilai mata pelajaran untuk nilai angka (75), nama mata pelajaran yang di tampilkan adalah BAHASA INDONESIA\n\n\n        SELECT siswa.nisn, siswa.nama, mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n        FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n        WHERE siswa.id = nilai_mata_pelajaran.id_siswa \n        and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran \n        and nilai_mata_pelajaran.nilai_angka \n 75\n        and mata_pelajaran.nama = \nBAHASA INDONESIA\n\n\n\n\n\n\nOperator \n \n\n\n1. Menampilkan data dengan selain kolom (nama kabupaten = BLITAR)\n\n\n        SELECT *\n        FROM kabupaten\n        WHERE nama \n \nBLITAR\n\n\n\n\n\n\n2. Menampilkan data dengan selain kolom (id kabupaten = id ke 4)\n\n\n        SELECT *\n        FROM kabupaten\n        WHERE id \n 4\n\n\n\n\n\n3. Menampilkan data dengan kolom (nisn siswa, nama siswa, nama mata pelajaran, kecuali nilai angka dari nilai mata pelajaran untuk nilai angka 75)\n\n\n        SELECT siswa.nisn, siswa.nama, mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n        FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n        WHERE siswa.id = nilai_mata_pelajaran.id_siswa \n        and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran \n        and nilai_mata_pelajaran.nilai_angka \n (75)\n\n\n\n\n\nOperator \n **\n\n\nMenampilkan data dengan kolom (nisn siswa, nama siswa, nama mata pelajaran, nilai angka lebih besar dari nilai mata pelajaran untuk nilai angka 75)\n\n\n        SELECT siswa.nisn, siswa.nama, mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n        FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n        WHERE siswa.id = nilai_mata_pelajaran.id_siswa \n        and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran \n        and nilai_mata_pelajaran.nilai_angka \n (75)\n\n\n\n\n\nOperator \n \n\n\nMenampilkan data dengan kolom (nisn siswa, nama siswa, nama mata pelajaran, nilai angka kurang dari nilai mata pelajaran untuk nilai angka 75)\n\n\n        SELECT siswa.nisn, siswa.nama, mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n        FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n        WHERE siswa.id = nilai_mata_pelajaran.id_siswa \n        and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran \n        and nilai_mata_pelajaran.nilai_angka \n (75)\n\n\n\n\n\nOperator \n= \n\n\nMenampilkan data dengan kolom (nisn siswa, nama siswa, nama mata pelajaran, nilai angka lebih besar dari samadengan nilai mata pelajaran untuk nilai angka 75)\n\n\n        SELECT siswa.nisn, siswa.nama, mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n        FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n        WHERE siswa.id = nilai_mata_pelajaran.id_siswa \n        and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran \n        and nilai_mata_pelajaran.nilai_angka \n= (75)\n\n\n\n\n\nOperator \n= \n\n\nMenampilkan data dengan kolom (nisn siswa, nama siswa, nama mata pelajaran, nilai angka kurang dari samadengan nilai mata pelajaran untuk nilai angka 75)\n\n\n        SELECT siswa.nisn, siswa.nama, mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n        FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n        WHERE siswa.id = nilai_mata_pelajaran.id_siswa \n        and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran \n        and nilai_mata_pelajaran.nilai_angka \n= (75)\n\n\n\n\n\nOperator Like '%I' \n\n\n1. Menampilkan data dengan kolom (nama siswa, nama agama, nama provinsi, nama kabupaten dan tanggal lahir siswa untuk nama siswa yang huruf belakangnya\"AD\")\n\n\n        SELECT siswa.nama, agama.nama, provinsi.nama, kabupaten.nama, siswa.tanggal_lahir \n        FROM siswa, agama, provinsi, kabupaten , kecamatan\n        WHERE siswa.id_agama = agama.id \n        and siswa.id_kecamatan = kecamatan.id \n        and kecamatan.id_kabupaten = kabupaten.id \n        and kabupaten.id_provinsi = provinsi.id \n        and siswa.nama LIKE \n%I\n\n\n\n\n\n\n2. Menampilkan data dengan kolom (nama siswa, nama agama, nama provinsi, nama kabupaten dan tanggal lahir siswa untuk nama siswa yang huruf belakangnya\"AD\")\n \n\n\n**NOTE : data diurutkan berdasarkan nama siswa (urut dari Z-A)  \n\n\n        SELECT siswa.nama, agama.nama, provinsi.nama, kabupaten.nama, siswa.tanggal_lahir \n        FROM siswa, agama, provinsi, kabupaten , kecamatan\n        WHERE siswa.id_agama = agama.id \n        and siswa.id_kecamatan = kecamatan.id \n        and kecamatan.id_kabupaten = kabupaten.id \n        and kabupaten.id_provinsi = provinsi.id \n        and siswa.nama LIKE \n%I\n\n        ORDER BY siswa.nama DESC\n\n\n\n\n\nOperator Like 'AD%'\n\n\nMenampilkan data dengan kolom (nama siswa, nama agama, nama provinsi, nama kabupaten dan tanggal lahir siswa untuk nama siswa yang huruf depannya \"AD\")\n\n\n        SELECT siswa.nama, agama.nama, provinsi.nama, kabupaten.nama, siswa.tanggal_lahir \n        FROM siswa, agama, provinsi, kabupaten , kecamatan\n        WHERE siswa.id_agama = agama.id \n        and siswa.id_kecamatan = kecamatan.id \n        and kecamatan.id_kabupaten = kabupaten.id \n        and kabupaten.id_provinsi = provinsi.id \n        and siswa.nama LIKE \nAD%\n\n\n\n\n\n\nOperator Like '%DI%' \n\n\nMenampilkan data dengan kolom (nama siswa, nama agama, nama provinsi, nama kabupaten dan tanggal lahir siswa untuk nama siswa yang ada huruf \"DI\")\n\n\n        SELECT siswa.nama, agama.nama, provinsi.nama, kabupaten.nama, siswa.tanggal_lahir \n        FROM siswa, agama, provinsi, kabupaten , kecamatan\n        WHERE siswa.id_agama = agama.id \n        and siswa.id_kecamatan = kecamatan.id \n        and kecamatan.id_kabupaten = kabupaten.id \n        and kabupaten.id_provinsi = provinsi.id \n        and siswa.nama LIKE \n%DI%\n\n\n\n\n\n\nOperator in () \n\n\nMenampilkan data dengan kolom (nisn siswa, nama siswa, nama mata pelajaran, nilai angka dari nilai mata pelajaran untuk nilai angka 90 dan 75)\n\n\n        SELECT siswa.nisn, siswa.nama, mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n        FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n        WHERE siswa.id = nilai_mata_pelajaran.id_siswa \n        and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran \n        and nilai_mata_pelajaran.nilai_angka IN (90,75)\n\n\n\n\n\nOperator not in () \n\n\nMenampilkan data dengan kolom (nama siswa, nama agama, nama provinsi, nama kabupaten dan tanggal lahir siswa untuk selain nama siswa (ADIT, ADITYA, ALI, ARIF))\n\n\n        SELECT siswa.nama, agama.nama, provinsi.nama, kabupaten.nama, siswa.tanggal_lahir \n        FROM siswa, agama, provinsi, kabupaten , kecamatan\n        WHERE siswa.id_agama = agama.id \n        and siswa.id_kecamatan = kecamatan.id \n        and kecamatan.id_kabupaten = kabupaten.id \n        and kabupaten.id_provinsi = provinsi.id \n        and siswa.nama NOT IN (\nADIT\n, \nADITYA\n, \nALI\n, \nARIF\n)\n\n\n\n\n\n\n\nContoh Case 3\n\n\n\n\n\n\nDesaigner Database \n\n\nDatabase = db_magang_2\n\n\n\n\n\n  \n\n\n\n\n\n\nSoal dan Penyelesaian\n\n\n\n\n\n\n1. Menampilkan nama yg tidak memiliki sertifikat dan memiliki sertifikat\n\n\n    SELECT siswa.nama , sertifikat_siswa.nama_sertifikat \n    FROM siswa LEFT JOIN sertifikat_siswa \n    ON (sertifikat_siswa.id_siswa = siswa.id)\n\n\n\n\n\n2. Menampilkan nama yg tidak memiliki sertifikat dengan NULL\n\n\n    SELECT siswa.nama , sertifikat_siswa.nama_sertifikat \n    FROM siswa left join sertifikat_siswa ON (sertifikat_siswa.id_siswa = siswa.id) \n    WHERE sertifikat_siswa.nama_sertifikat is NULL\n\n\n\n\n\n3. Menampilkan nama yg tidak memiliki sertifikat hanya nama saja\n\n\n    SELECT siswa.nama\n    FROM siswa\n    WHERE siswa.id not in(select id_siswa from sertifikat_siswa)\n\n\n\n\n\n4. Menampilkan nama yg memiliki sertifikat\n\n\n    SELECT siswa.nama , sertifikat_siswa.nama_sertifikat \n    FROM siswa LEFT JOIN sertifikat_siswa ON (sertifikat_siswa.id_siswa = siswa.id) \n    WHERE sertifikat_siswa.nama_sertifikat is not NULL\n\n\n\n\n\n5. Menampilkan yang tidak memiliki sertifikat, dengan Sub query, nilai lebih 80, mata pelajaran Matematika\n\n\n    SELECT siswa.nisn as \nnisn_siswa\n,\n    siswa.nama as \nnama_siswa\n,\n    mata_pelajaran.nama as \nnama_matkul\n,\n    nilai_mata_pelajaran.nilai_angka as \nnilai_angka\n\n    FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n    WHERE (siswa.id = nilai_mata_pelajaran.id_siswa \n    and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran) \n    and siswa.id not in (select id_siswa FROM sertifikat_siswa) \n    and nilai_mata_pelajaran.nilai_angka \n 80 \n    and mata_pelajaran.nama = \nMATEMATIKA\n\n    ORDER BY siswa.nama;\n\n\n\n\n\n6. Menampilkan yang tidak memiliki sertifikat, dengan Sub query, nilai lebih 80, mata pelajaran Matematika, kabupaten Nganjuk\n\n\n    SELECT siswa.nisn as \nnisn_siswa\n,\n    siswa.nama as \nnama_siswa\n,\n    mata_pelajaran.nama as \nnama_matkul\n,\n    nilai_mata_pelajaran.nilai_angka as \nnilai_angka\n\n    FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n    WHERE (siswa.id = nilai_mata_pelajaran.id_siswa \n    and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran) \n    and siswa.id not in (select id_siswa FROM sertifikat_siswa) \n    and nilai_mata_pelajaran.nilai_angka \n 80 \n    and mata_pelajaran.nama = \nMATEMATIKA\n\n    and id_kecamatan in(\n           select id from kecamatan where id_kabupaten in(\n                 select id from kabupaten where nama = \nNGANJUK\n\n           ) \n    )\n    ORDER BY siswa.nama;\n\n\n\n\n\n7. Menampilkan yang tidak memiliki sertifikat, tidak dengan Sub query, nilai lebih 80, mata pelajaran Matematika, kabupaten Nganjuk\n\n\n    SELECT siswa.nisn as \nnisn_siswa\n,\n    siswa.nama as \nnama_siswa\n,\n    mata_pelajaran.nama as \nnama_matkul\n,\n    nilai_mata_pelajaran.nilai_angka as \nnilai_angka\n\n    FROM siswa, mata_pelajaran, nilai_mata_pelajaran , kecamatan , kabupaten\n    WHERE (siswa.id = nilai_mata_pelajaran.id_siswa \n    and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran) \n    and siswa.id not in (select id_siswa FROM sertifikat_siswa) \n    and nilai_mata_pelajaran.nilai_angka \n 80 \n    and mata_pelajaran.nama = \nMATEMATIKA\n\n    and siswa.id_kecamatan = kecamatan.id \n    and kabupaten.id = kecamatan.id_kabupaten\n    and kabupaten.nama = \nNGANJUK\n\n\n\n\n\n\n8. Menampilkan yang tidak memiliki sertifikat, tidak dengan Sub query, lebih dari 50, nama sertifikat terisi Null, diurutkan melalui Nama\n\n\n    SELECT siswa.nama, siswa.tanggal_lahir, agama.nama, kabupaten.nama, provinsi.nama, mata_pelajaran.nama, \n    nilai_mata_pelajaran.nilai_angka ,sertifikat_siswa.nama_sertifikat\n    FROM siswa left join sertifikat_siswa on sertifikat_siswa.id_siswa = siswa.id , agama, kecamatan, kabupaten, provinsi, nilai_mata_pelajaran, mata_pelajaran\n    WHERE siswa.id_agama = agama.id \n    and siswa.id_kecamatan = kecamatan.id \n    and kecamatan.id_kabupaten = kabupaten.id \n    and kabupaten.id_provinsi = provinsi.id \n    and nilai_mata_pelajaran.id_siswa = siswa.id \n    and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran \n    and nilai_mata_pelajaran.nilai_angka \n50 and sertifikat_siswa.id_siswa is NULL\n    ORDER BY siswa.nama;\n\n\n\n\n\nContoh Case 4\n\n\n\n\n\n\nDesaigner Database :\n\n\nDatabase = db_magang_2.1\n\n\n\n\n\n \n\n\n\n\n\n\nSoal dan Jawaban Case :\n\n\nSoal\n \n:\n\n\nTampilan\n \nOutput\n \nSemua\n \ndata\n \n(\nnama\n,\npanjang\n,\nlebar\n,\nluas\n,\nvolume\n,\nvolume_2_angka_dibelakang_koma\n)\n\n\n\nKeterangan\n \nDatabase\n \n:\n\n\ncreate\n \ntable\n \nobject_balok\n(\n\n\nnama\n \nvarchar\n(\n20\n)\n\n\npanjang\n \ndecimal\n(\n18\n,\n2\n)\n\n\nlebar\n \ndecimal\n(\n18\n,\n2\n)\n\n\ntinggi\n \ndecimal\n(\n18\n,\n2\n)\n\n\n)\n\n\n\n\n\n\n\n\n\n\n Tampilan output Semua data (nama,panjang,lebar,luas,volume,volume_2_angka_dibelakang_koma)\n\n\n\n\n\n\nSource Code \n\n\nSELECT nama, panjang, lebar, tinggi, 2*((panjang*lebar)+(panjang*tinggi)+(lebar*tinggi)) AS \nLuas\n,panjang*lebar*tinggi AS \nVolume\n,\nROUND(panjang*lebar*tinggi,2) AS \nVolume_2_angka_dibelakang_koma\n\nFROM object_balok\n\n\n\n\n\n\n\n\n\nOutput", 
            "title": "SQL Operator"
        }, 
        {
            "location": "/menu/sql/sql_operator/#sql-operator", 
            "text": "", 
            "title": "SQL Operator"
        }, 
        {
            "location": "/menu/sql/sql_operator/#a-penjelsan", 
            "text": "a. SQL Operator Aritmatika       Fungsi  Kegunaan      +  untuk menambahkan    -  untuk mengurangi    *  untuk mengkalikan    /  untuk membagikan    %  untuk modulo     b. SQL Operator Pembanding     Fungsi  Kegunaan      =  sama dengan     lebih besar dari     kurang dari    =  lebih besar dari sama dengan    =  kurang dari sama dengan     tidak sebanding dengan     c. SQL Operator Logikal     Fungsi  Kegunaan      ALL  BENAR jika semua nilai subkueri memenuhi syarat    AND  BENAR jika semua kondisi dipisahkan oleh DAN BENAR    ANY  BENAR jika salah satu nilai subkueri memenuhi syarat    BETWEEN  BENAR jika operan berada dalam kisaran perbandingan    EXISTS  BENAR jika subkueri mengembalikan satu atau lebih catatan    IN  BENAR jika operan sama dengan salah satu daftar ungkapan    LIKE  BENAR jika operan cocok dengan pola    NOT  Menampilkan catatan jika kondisinya TIDAK BENAR    OR  BENAR jika salah satu kondisi dipisahkan oleh ATAU BENAR    SOME  BENAR jika salah satu nilai subkueri memenuhi syarat", 
            "title": "A. Penjelsan"
        }, 
        {
            "location": "/menu/sql/sql_operator/#b-implementasi", 
            "text": "", 
            "title": "B. Implementasi"
        }, 
        {
            "location": "/menu/sql/sql_operator/#contoh-case-1", 
            "text": "Desaigner Database :  Database = db_magang_2       Soal dan Penyelesaian :  Operator Pembanding : \n1. =\n2.  \n3.  \n4.  \n5.  =\n6.  =\n7. like  %a \n8. like  b% \n9. like  %b% \n10. in( a , b )\n11. not in( a , b )    Operator =  1. Menampilkan seluruh data dengan kolom (nama siswa = YONDI)      SELECT *\n    FROM siswa\n    WHERE nama =  YONDI   2. Menampilkan seluruh data dengan kolom (nama siswa = ADIT atau yang tempat lahirnya di MALANG)      SELECT *\n    FROM siswa\n    WHERE nama =  ADIT  or tempat_lahir =  MALANG   3. Menampilkan seluruh data dengan kolom (nama siswa = YONDI atau yang nama siswanya = ADIT, ALI, NIZAR)      SELECT *\n    FROM siswa\n    WHERE (nama =  YONDI  or nama =  ADIT  or nama =  ALI  or nama =  NIZAR )  4. Menampilkan seluruh data dengan kolom (nama siswa = ADIT yang tempat lahirnya di MALANG)      SELECT *\n    FROM siswa\n    WHERE nama =  ADIT  and tempat_lahir =  MALANG   Operator     Menampilkan seluruh data dengan kolom (id siswa = id ke 10)      SELECT *\n    FROM siswa\n    WHERE id   10  Operator     1. Menampilkan seluruh data dengan kolom (tanggal lahir lebih besar dari 1992-10-20)      SELECT *\n    FROM siswa\n    WHERE siswa.tanggal_lahir    1992-10-20   2. Menampilkan seluruh data dengan kolom (tanggal lahir lebih besar dari tahun 1992)      SELECT *\n    FROM siswa\n    WHERE siswa.tanggal_lahir    1992\u2019  Operator     1. Menampilkan seluruh data dengan kolom (tanggal lahir kurang dari 1992-10-20)      SELECT *\n    FROM siswa\n    WHERE siswa.tanggal_lahir    1992-10-20   2. Menampilkan seluruh data dengan kolom (tanggal lahir kurang dari yang tahunnya 1992)      SELECT *\n    FROM siswa\n    WHERE siswa.tanggal_lahir    1992\u2019  3. Menampilkan seluruh data dengan kolom (nama siswa = ADIT yang tanggal lahirnya lebih besar dari 1992-10-20)        select *\n    from siswa\n    where nama =  ADIT  and tanggal_lahir    1995-01-01   Operator  =   1. Menampilkan seluruh data dengan kolom (tanggal lahir lebih besar dari sama dengan 1992-10-20)        SELECT *\n    FROM siswa\n    WHERE siswa.tanggal_lahir  =  1992-10-20   2. Menampilkan seluruh data dengan kolom (tanggal lahir lebih besar dari sama dengan yang tahunnya 1992)      SELECT *\n    FROM siswa\n    WHERE siswa.tanggal_lahir  =  1992\u2019  Operator  =  1. Menampilkan seluruh data dengan kolom (tanggal lahir kurang dari sama dengan 1992-10-20)        SELECT *\n    FROM siswa\n    WHERE siswa.tanggal_lahir  =  1992-10-20   2. Menampilkan seluruh data dengan kolom (tanggal lahir kurang dari sama dengan yang tahunnya 1992)      SELECT *\n    FROM siswa\n    WHERE siswa.tanggal_lahir  =  1992\u2019  Operator like 'a%'  Menampilkan seluruh data dengan kolom (nama siswa yang depannya huruf A)      SELECT *\n    FROM siswa\n    WHERE nama like  a%   Operator like '%a'  1. Menampilkan seluruh data dengan kolom (nama siswa yang belakangnya huruf A)      SELECT *\n    FROM siswa\n    WHERE nama like  %a   2. Menampilkan seluruh data dengan kolom (nama siswa yang depannya huruf A dan AB)      SELECT *\n    FROM siswa\n    WHERE nama like  a%  and nama like  ab%   Operator like '%ag%'   Menampilkan seluruh data dengan kolom (nama siswa yang memiliki huruf AG)      SELECT *\n    FROM siswa\n    WHERE nama like  %ag%   Operator in('a','b')   Menampilkan seluruh data dengan kolom (nama siswa = YONDI, ADIT)      SELECT *\n    FROM siswa\n    WHERE nama IN( YONDI , ADIT )  Operator not in('a','b')   Menampilkan seluruh data dengan selain kolom (nama siswa = YONDI, ADIT, ALI, NIZAR)      SELECT *\n    FROM siswa\n    WHERE nama NOT IN( YONDI , ADIT , ALI , NIZAR )", 
            "title": "Contoh Case 1"
        }, 
        {
            "location": "/menu/sql/sql_operator/#contoh-case-2", 
            "text": "Desaigner Database :   Database = db_magang_2       Soal dan Penyelesaian :  Operator Pembanding \n1. =\n2.  \n3.  \n4.  \n5.  =\n6.  =\n7. like  %a \n8. like  b% \n9. like  %b% \n10. in( a , b )\n11. not in( a , b )    Operator =   1. Menampilkan seluruh data dengan kolom (nama kabupaten = BLITAR)          SELECT *\n        FROM kabupaten\n        WHERE nama =  BLITAR   2. Menampilkan seluruh data dengan kolom (id kabupaten = id ke 4)          SELECT *\n        FROM kabupaten\n        WHERE id = 4  3. Menampilkan data dengan kolom (nama siswa = ADIT yang nama kabupatennya di KEDIRI          SELECT siswa.nama, kabupaten.nama\n        FROM siswa INNER JOIN kabupaten\n        ON siswa.nama =  ADIT AND kabupaten.nama =  KEDIRI   4. Menampilkan data dengan kolom (nama siswa = YONDI atau yang nama siswanya = ADIT, ALI, NIZAR)          SELECT *\n        FROM siswa\n        WHERE (nama =  YONDI  or nama =  ADIT  or nama =  ALI  or nama =  NIZAR )  5. Menampilkan data dengan kolom (nisn siswa, nama siswa = YONDI atau yang nama siswanya = \"ADIT, ALI, NIZAR\", nama mata pelajaran, nilai angka dari siswa untuk nama  NOTE : data diurutkan berdasarkan nama siswa (urut dari Z-A)            SELECT siswa.nisn, siswa.nama, mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n        FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n        WHERE siswa.id = nilai_mata_pelajaran.id_siswa \n        and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran \n        and siswa.nama =  YONDI  or siswa.nama =  ADIT  or siswa.nama =  ALI  or siswa.nama =  NIZAR \n        ORDER BY siswa.nama DESC  6. Menampilkan data dengan kolom (nisn siswa, nama siswa, nama mata pelajaran, nilai kecuali nilai angka dari nilai mata pelajaran untuk nilai angka (75), nama mata pelajaran yang di tampilkan adalah BAHASA INDONESIA          SELECT siswa.nisn, siswa.nama, mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n        FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n        WHERE siswa.id = nilai_mata_pelajaran.id_siswa \n        and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran \n        and nilai_mata_pelajaran.nilai_angka   75\n        and mata_pelajaran.nama =  BAHASA INDONESIA   Operator     1. Menampilkan data dengan selain kolom (nama kabupaten = BLITAR)          SELECT *\n        FROM kabupaten\n        WHERE nama    BLITAR   2. Menampilkan data dengan selain kolom (id kabupaten = id ke 4)          SELECT *\n        FROM kabupaten\n        WHERE id   4  3. Menampilkan data dengan kolom (nisn siswa, nama siswa, nama mata pelajaran, kecuali nilai angka dari nilai mata pelajaran untuk nilai angka 75)          SELECT siswa.nisn, siswa.nama, mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n        FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n        WHERE siswa.id = nilai_mata_pelajaran.id_siswa \n        and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran \n        and nilai_mata_pelajaran.nilai_angka   (75)  Operator   **  Menampilkan data dengan kolom (nisn siswa, nama siswa, nama mata pelajaran, nilai angka lebih besar dari nilai mata pelajaran untuk nilai angka 75)          SELECT siswa.nisn, siswa.nama, mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n        FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n        WHERE siswa.id = nilai_mata_pelajaran.id_siswa \n        and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran \n        and nilai_mata_pelajaran.nilai_angka   (75)  Operator     Menampilkan data dengan kolom (nisn siswa, nama siswa, nama mata pelajaran, nilai angka kurang dari nilai mata pelajaran untuk nilai angka 75)          SELECT siswa.nisn, siswa.nama, mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n        FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n        WHERE siswa.id = nilai_mata_pelajaran.id_siswa \n        and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran \n        and nilai_mata_pelajaran.nilai_angka   (75)  Operator  =   Menampilkan data dengan kolom (nisn siswa, nama siswa, nama mata pelajaran, nilai angka lebih besar dari samadengan nilai mata pelajaran untuk nilai angka 75)          SELECT siswa.nisn, siswa.nama, mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n        FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n        WHERE siswa.id = nilai_mata_pelajaran.id_siswa \n        and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran \n        and nilai_mata_pelajaran.nilai_angka  = (75)  Operator  =   Menampilkan data dengan kolom (nisn siswa, nama siswa, nama mata pelajaran, nilai angka kurang dari samadengan nilai mata pelajaran untuk nilai angka 75)          SELECT siswa.nisn, siswa.nama, mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n        FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n        WHERE siswa.id = nilai_mata_pelajaran.id_siswa \n        and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran \n        and nilai_mata_pelajaran.nilai_angka  = (75)  Operator Like '%I'   1. Menampilkan data dengan kolom (nama siswa, nama agama, nama provinsi, nama kabupaten dan tanggal lahir siswa untuk nama siswa yang huruf belakangnya\"AD\")          SELECT siswa.nama, agama.nama, provinsi.nama, kabupaten.nama, siswa.tanggal_lahir \n        FROM siswa, agama, provinsi, kabupaten , kecamatan\n        WHERE siswa.id_agama = agama.id \n        and siswa.id_kecamatan = kecamatan.id \n        and kecamatan.id_kabupaten = kabupaten.id \n        and kabupaten.id_provinsi = provinsi.id \n        and siswa.nama LIKE  %I   2. Menampilkan data dengan kolom (nama siswa, nama agama, nama provinsi, nama kabupaten dan tanggal lahir siswa untuk nama siswa yang huruf belakangnya\"AD\")    **NOTE : data diurutkan berdasarkan nama siswa (urut dari Z-A)            SELECT siswa.nama, agama.nama, provinsi.nama, kabupaten.nama, siswa.tanggal_lahir \n        FROM siswa, agama, provinsi, kabupaten , kecamatan\n        WHERE siswa.id_agama = agama.id \n        and siswa.id_kecamatan = kecamatan.id \n        and kecamatan.id_kabupaten = kabupaten.id \n        and kabupaten.id_provinsi = provinsi.id \n        and siswa.nama LIKE  %I \n        ORDER BY siswa.nama DESC  Operator Like 'AD%'  Menampilkan data dengan kolom (nama siswa, nama agama, nama provinsi, nama kabupaten dan tanggal lahir siswa untuk nama siswa yang huruf depannya \"AD\")          SELECT siswa.nama, agama.nama, provinsi.nama, kabupaten.nama, siswa.tanggal_lahir \n        FROM siswa, agama, provinsi, kabupaten , kecamatan\n        WHERE siswa.id_agama = agama.id \n        and siswa.id_kecamatan = kecamatan.id \n        and kecamatan.id_kabupaten = kabupaten.id \n        and kabupaten.id_provinsi = provinsi.id \n        and siswa.nama LIKE  AD%   Operator Like '%DI%'   Menampilkan data dengan kolom (nama siswa, nama agama, nama provinsi, nama kabupaten dan tanggal lahir siswa untuk nama siswa yang ada huruf \"DI\")          SELECT siswa.nama, agama.nama, provinsi.nama, kabupaten.nama, siswa.tanggal_lahir \n        FROM siswa, agama, provinsi, kabupaten , kecamatan\n        WHERE siswa.id_agama = agama.id \n        and siswa.id_kecamatan = kecamatan.id \n        and kecamatan.id_kabupaten = kabupaten.id \n        and kabupaten.id_provinsi = provinsi.id \n        and siswa.nama LIKE  %DI%   Operator in ()   Menampilkan data dengan kolom (nisn siswa, nama siswa, nama mata pelajaran, nilai angka dari nilai mata pelajaran untuk nilai angka 90 dan 75)          SELECT siswa.nisn, siswa.nama, mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka\n        FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n        WHERE siswa.id = nilai_mata_pelajaran.id_siswa \n        and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran \n        and nilai_mata_pelajaran.nilai_angka IN (90,75)  Operator not in ()   Menampilkan data dengan kolom (nama siswa, nama agama, nama provinsi, nama kabupaten dan tanggal lahir siswa untuk selain nama siswa (ADIT, ADITYA, ALI, ARIF))          SELECT siswa.nama, agama.nama, provinsi.nama, kabupaten.nama, siswa.tanggal_lahir \n        FROM siswa, agama, provinsi, kabupaten , kecamatan\n        WHERE siswa.id_agama = agama.id \n        and siswa.id_kecamatan = kecamatan.id \n        and kecamatan.id_kabupaten = kabupaten.id \n        and kabupaten.id_provinsi = provinsi.id \n        and siswa.nama NOT IN ( ADIT ,  ADITYA ,  ALI ,  ARIF )", 
            "title": "Contoh Case 2"
        }, 
        {
            "location": "/menu/sql/sql_operator/#contoh-case-3", 
            "text": "Desaigner Database   Database = db_magang_2        Soal dan Penyelesaian    1. Menampilkan nama yg tidak memiliki sertifikat dan memiliki sertifikat      SELECT siswa.nama , sertifikat_siswa.nama_sertifikat \n    FROM siswa LEFT JOIN sertifikat_siswa \n    ON (sertifikat_siswa.id_siswa = siswa.id)  2. Menampilkan nama yg tidak memiliki sertifikat dengan NULL      SELECT siswa.nama , sertifikat_siswa.nama_sertifikat \n    FROM siswa left join sertifikat_siswa ON (sertifikat_siswa.id_siswa = siswa.id) \n    WHERE sertifikat_siswa.nama_sertifikat is NULL  3. Menampilkan nama yg tidak memiliki sertifikat hanya nama saja      SELECT siswa.nama\n    FROM siswa\n    WHERE siswa.id not in(select id_siswa from sertifikat_siswa)  4. Menampilkan nama yg memiliki sertifikat      SELECT siswa.nama , sertifikat_siswa.nama_sertifikat \n    FROM siswa LEFT JOIN sertifikat_siswa ON (sertifikat_siswa.id_siswa = siswa.id) \n    WHERE sertifikat_siswa.nama_sertifikat is not NULL  5. Menampilkan yang tidak memiliki sertifikat, dengan Sub query, nilai lebih 80, mata pelajaran Matematika      SELECT siswa.nisn as  nisn_siswa ,\n    siswa.nama as  nama_siswa ,\n    mata_pelajaran.nama as  nama_matkul ,\n    nilai_mata_pelajaran.nilai_angka as  nilai_angka \n    FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n    WHERE (siswa.id = nilai_mata_pelajaran.id_siswa \n    and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran) \n    and siswa.id not in (select id_siswa FROM sertifikat_siswa) \n    and nilai_mata_pelajaran.nilai_angka   80 \n    and mata_pelajaran.nama =  MATEMATIKA \n    ORDER BY siswa.nama;  6. Menampilkan yang tidak memiliki sertifikat, dengan Sub query, nilai lebih 80, mata pelajaran Matematika, kabupaten Nganjuk      SELECT siswa.nisn as  nisn_siswa ,\n    siswa.nama as  nama_siswa ,\n    mata_pelajaran.nama as  nama_matkul ,\n    nilai_mata_pelajaran.nilai_angka as  nilai_angka \n    FROM siswa, mata_pelajaran, nilai_mata_pelajaran\n    WHERE (siswa.id = nilai_mata_pelajaran.id_siswa \n    and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran) \n    and siswa.id not in (select id_siswa FROM sertifikat_siswa) \n    and nilai_mata_pelajaran.nilai_angka   80 \n    and mata_pelajaran.nama =  MATEMATIKA \n    and id_kecamatan in(\n           select id from kecamatan where id_kabupaten in(\n                 select id from kabupaten where nama =  NGANJUK \n           ) \n    )\n    ORDER BY siswa.nama;  7. Menampilkan yang tidak memiliki sertifikat, tidak dengan Sub query, nilai lebih 80, mata pelajaran Matematika, kabupaten Nganjuk      SELECT siswa.nisn as  nisn_siswa ,\n    siswa.nama as  nama_siswa ,\n    mata_pelajaran.nama as  nama_matkul ,\n    nilai_mata_pelajaran.nilai_angka as  nilai_angka \n    FROM siswa, mata_pelajaran, nilai_mata_pelajaran , kecamatan , kabupaten\n    WHERE (siswa.id = nilai_mata_pelajaran.id_siswa \n    and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran) \n    and siswa.id not in (select id_siswa FROM sertifikat_siswa) \n    and nilai_mata_pelajaran.nilai_angka   80 \n    and mata_pelajaran.nama =  MATEMATIKA \n    and siswa.id_kecamatan = kecamatan.id \n    and kabupaten.id = kecamatan.id_kabupaten\n    and kabupaten.nama =  NGANJUK   8. Menampilkan yang tidak memiliki sertifikat, tidak dengan Sub query, lebih dari 50, nama sertifikat terisi Null, diurutkan melalui Nama      SELECT siswa.nama, siswa.tanggal_lahir, agama.nama, kabupaten.nama, provinsi.nama, mata_pelajaran.nama, \n    nilai_mata_pelajaran.nilai_angka ,sertifikat_siswa.nama_sertifikat\n    FROM siswa left join sertifikat_siswa on sertifikat_siswa.id_siswa = siswa.id , agama, kecamatan, kabupaten, provinsi, nilai_mata_pelajaran, mata_pelajaran\n    WHERE siswa.id_agama = agama.id \n    and siswa.id_kecamatan = kecamatan.id \n    and kecamatan.id_kabupaten = kabupaten.id \n    and kabupaten.id_provinsi = provinsi.id \n    and nilai_mata_pelajaran.id_siswa = siswa.id \n    and mata_pelajaran.id = nilai_mata_pelajaran.id_mata_pelajaran \n    and nilai_mata_pelajaran.nilai_angka  50 and sertifikat_siswa.id_siswa is NULL\n    ORDER BY siswa.nama;", 
            "title": "Contoh Case 3"
        }, 
        {
            "location": "/menu/sql/sql_operator/#contoh-case-4", 
            "text": "Desaigner Database :  Database = db_magang_2.1       Soal dan Jawaban Case :  Soal   :  Tampilan   Output   Semua   data   ( nama , panjang , lebar , luas , volume , volume_2_angka_dibelakang_koma )  Keterangan   Database   :  create   table   object_balok (  nama   varchar ( 20 )  panjang   decimal ( 18 , 2 )  lebar   decimal ( 18 , 2 )  tinggi   decimal ( 18 , 2 )  )      Tampilan output Semua data (nama,panjang,lebar,luas,volume,volume_2_angka_dibelakang_koma)    Source Code   SELECT nama, panjang, lebar, tinggi, 2*((panjang*lebar)+(panjang*tinggi)+(lebar*tinggi)) AS  Luas ,panjang*lebar*tinggi AS  Volume ,\nROUND(panjang*lebar*tinggi,2) AS  Volume_2_angka_dibelakang_koma \nFROM object_balok    Output", 
            "title": "Contoh Case 4"
        }, 
        {
            "location": "/menu/php/php/", 
            "text": "PHP\n\n\n\n\nA. Penjelasan\n\n\nPHP adalah singkatan dari \"PHP: Hypertext Prepocessor\", yaitu bahasa pemrograman yang digunakan secara luas untuk penanganan pembuatan dan pengembangan sebuah situs web dan bisa digunakan bersamaan dengan HTML. PHP diciptakan oleh Rasmus Lerdorf pertama kali tahun 1994. Script PHP dieksekusi di server.\n\n\na. Apa yang seharusnya sudah anda ketahui\n\n\nMemiliki pemahaman dasar tentang hal-hal berikut:\n\n\n\n\nHTML\n\n\nCSS\n\n\nJavaScript\n\n\n\n\nb. Apa itu PHP?\n\n\n\n\nPHP adalah akronim untuk \"PHP: Hypertext Preprocessor\"\n\n\nPHP adalah bahasa scripting open source yang banyak digunakan\n\n\nScript PHP dieksekusi di server\n\n\nPHP bebas untuk didownload dan digunakan\nPHP adalah bahasa yang menakjubkan dan populer!\n\nIni cukup kuat untuk menjadi inti dari sistem blogging terbesar di web (WordPress)!\nIni cukup dalam untuk menjalankan jaringan sosial terbesar (Facebook)!\nHal ini juga cukup mudah untuk menjadi bahasa server pemula pertama!\n\n\n\n\n\n\n\n\n\nc. Apa itu File PHP?\n\n\n\n\nFile PHP bisa berisi kode teks, HTML, CSS, JavaScript, dan PHP\n\n\nKode PHP dijalankan di server, dan hasilnya dikembalikan ke browser sebagai HTML biasa\n\n\nFile PHP memiliki ekstensi \".php\"\n\n\n\n\nd. Apa yang bisa dilakukan PHP?\n\n\n\n\nPHP bisa menghasilkan konten halaman yang dinamis\n\n\nPHP dapat membuat, membuka, membaca, menulis, menghapus, dan menutup file di server\n\n\nPHP bisa mengumpulkan data form\n\n\nPHP bisa mengirim dan menerima cookies\n\n\nPHP bisa menambah, menghapus, memodifikasi data dalam database anda\n\n\nPHP bisa digunakan untuk mengontrol user-access\n\n\nPHP bisa mengenkripsi data\n\n\n\n\nDengan PHP anda tidak terbatas pada output HTML. Anda bisa menampilkan gambar, file PDF, dan bahkan film Flash. Anda juga dapat menampilkan teks apa pun, seperti XHTML dan XML.\n\n\ne. Mengapa PHP?\n\n\n\n\nPHP berjalan di berbagai platform (Windows, Linux, Unix, Mac OS X, dll.)\n\n\nPHP kompatibel dengan hampir semua server yang digunakan saat ini (Apache, IIS, dll)\n\n\nPHP mendukung berbagai macam database\n\n\nPHP gratis Download dari sumber PHP resmi: www.php.net\n\n\nPHP mudah dipelajari dan berjalan efisien di sisi server\n\n\n\n\n\n\nB. Tutorial Installasi\n\n\nInstall PHP\n\n\nTutorial install PHP di Linux Ubuntu 16.04 desktop :\n\n\n Sudo apt-get install php libapache2-mod-php php-mcrypt php-mysql", 
            "title": "Home"
        }, 
        {
            "location": "/menu/php/php/#php", 
            "text": "", 
            "title": "PHP"
        }, 
        {
            "location": "/menu/php/php/#a-penjelasan", 
            "text": "PHP adalah singkatan dari \"PHP: Hypertext Prepocessor\", yaitu bahasa pemrograman yang digunakan secara luas untuk penanganan pembuatan dan pengembangan sebuah situs web dan bisa digunakan bersamaan dengan HTML. PHP diciptakan oleh Rasmus Lerdorf pertama kali tahun 1994. Script PHP dieksekusi di server.  a. Apa yang seharusnya sudah anda ketahui  Memiliki pemahaman dasar tentang hal-hal berikut:   HTML  CSS  JavaScript   b. Apa itu PHP?   PHP adalah akronim untuk \"PHP: Hypertext Preprocessor\"  PHP adalah bahasa scripting open source yang banyak digunakan  Script PHP dieksekusi di server  PHP bebas untuk didownload dan digunakan PHP adalah bahasa yang menakjubkan dan populer!\n\nIni cukup kuat untuk menjadi inti dari sistem blogging terbesar di web (WordPress)!\nIni cukup dalam untuk menjalankan jaringan sosial terbesar (Facebook)!\nHal ini juga cukup mudah untuk menjadi bahasa server pemula pertama!    c. Apa itu File PHP?   File PHP bisa berisi kode teks, HTML, CSS, JavaScript, dan PHP  Kode PHP dijalankan di server, dan hasilnya dikembalikan ke browser sebagai HTML biasa  File PHP memiliki ekstensi \".php\"   d. Apa yang bisa dilakukan PHP?   PHP bisa menghasilkan konten halaman yang dinamis  PHP dapat membuat, membuka, membaca, menulis, menghapus, dan menutup file di server  PHP bisa mengumpulkan data form  PHP bisa mengirim dan menerima cookies  PHP bisa menambah, menghapus, memodifikasi data dalam database anda  PHP bisa digunakan untuk mengontrol user-access  PHP bisa mengenkripsi data   Dengan PHP anda tidak terbatas pada output HTML. Anda bisa menampilkan gambar, file PDF, dan bahkan film Flash. Anda juga dapat menampilkan teks apa pun, seperti XHTML dan XML.  e. Mengapa PHP?   PHP berjalan di berbagai platform (Windows, Linux, Unix, Mac OS X, dll.)  PHP kompatibel dengan hampir semua server yang digunakan saat ini (Apache, IIS, dll)  PHP mendukung berbagai macam database  PHP gratis Download dari sumber PHP resmi: www.php.net  PHP mudah dipelajari dan berjalan efisien di sisi server", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/php/#b-tutorial-installasi", 
            "text": "", 
            "title": "B. Tutorial Installasi"
        }, 
        {
            "location": "/menu/php/php/#install-php", 
            "text": "Tutorial install PHP di Linux Ubuntu 16.04 desktop :   Sudo apt-get install php libapache2-mod-php php-mcrypt php-mysql", 
            "title": "Install PHP"
        }, 
        {
            "location": "/menu/php/prosedurFungsi/", 
            "text": "Prosedur dan Fungsi\n\n\n\n\nA. Penjelasan\n\n\na. Prosedur                                                                                                                                \n\nProsedur adalah bagian dari suatu program yang disusun secara terpisah untuk melakukan suatu tugas khusus atau fungsi tertentu. \n\n\nPada dasarnya ada dua macam bentuk prosedur yaitu Subrutin (subprogram) dan Fungsi.\n\n\n\n\n\n\nSubrutin (subprogram) adalah bagian dari program yang dibuat terpisah untuk melaksanakan sebagian dari tugas yang harus diselesaikan oleh suatu program. Pada umumnya yang dikenal dengan nama \u201cProsedur\u201d sebenarnya adalah \u201cSubprogram\u201d .\n\n\n\n\n\n\nFungsi adalah bagian dari program yang dibuat terpisah untuk melaksanakan fungsi tertentu yang menghasilkan suatu nilai untuk dikembalikan ke program utama.\n\n\n\n\n\n\nProsedur banyak digunakan pada program yang terstruktur karena :\n\n\n\n\n\n\nMerupakan penerapan konsep program Modular, yaitu memecah-mecah program yang rumit menjadi program-program bagian yang lebih sederhana dalam bentuk sebagai prosedur-prosedur.\n\n\n\n\n\n\nUntuk hal-hal yang sering dilakukan berulang-ulang, cukup dituliskan sekali saja dalam prosedur dan dapat dipanggil atau dipergunakan sewaktu-waktu bila diperlukan.\n\n\n\n\n\n\nMembuat kode program lebih mudah dibaca.\n\n\n\n\n\n\nDapat digunakan untuk menyembunyikan detil program\n\n\n\n\n\n\nProsedur memiliki ciri-ciri sebagai berikut ini :\n\n\n\n\n\n\nHanya memiliki satu fungsi tujuan (logical inherent). Sebuah prosedur sebaiknya hanya memiliki satu fungsi tujuan dan tidak bercampur dengan tujuan lain. Hal ini untuk membuat prosedur lebih focus.\n\n\n\n\n\n\nBerukuran kecil (small size). Yang dimaksud ukuran disini adalah panjang algoritma atau panjang kode program pada suatu prosedur. Ukuran kecil akan mudah dibaca maupun diperbaiki.\n\n\n\n\n\n\nTidak tergantung pada prosedur lain (independent). Sebuah prosedur harusnya bersifat mandiri, artinya sebuah prosedur dapat berjalan dan diuji tanpa menunggu bagian lainnya selesai. Selain itu variable yang digunakan dalam prosedur tidak mempengaruhi variabel yang digunakan pada bagian lain di keseluruhan program.\n\n\n\n\n\n\nManfaat pembuatan prosedur :\n\n\n\n\n\n\nModularisasi : Suatu program yang besar dan kompleks dapat dibagi ke dalam beberapa prosedur sehingga setiap prosedur merupakan bagian yang mudah dikerjakan. Dengan demikian, program besar tersebut menjadi mungkin diselesaikan.\n\n\n\n\n\n\nSimplifikasi : Dalam suatu program, sering diperlukan suatu tugas yang harus dikerjakan berulang-ulang dengan nilai-nilai variabel yang berbeda. Agar tidak merepotkan maka tugas ini cukup ditulis sekali saja dalam bentuk prosedur yang kemudian dipanggil berulang-ulang sesuai kebutuhan.\n\n\n\n\n\n\nb. Fungsi                                                                                                        \n\nFungsi sama seperti halnya dengan prosedur, namun tetap ada perbedaannya yaitu fungsi mempunyai output dengan tipe variabel yang kita tentukan. Berbeda dengan procedure yang bisa dengan tidak menggunakan parameter, fungsi harus menggunakan parameter dalam penggunaannya. Fungsi juga mempunyai Output dengan tipe variabel yang kita tentukan. \n\n\nc. Perbedaan Prosedur dan Fungsi                                                            \n\n\n \n\n\nPerbedaan Prosedur dan Fungsi\n\n\n\n\n\n\nPada fungsi, nilai yang dikirimkan balik terdapat pada nama fungsinya (kalau pada prosedur pada parameter yang dikirimkan secara acuan).\n\n\n\n\n\n\nKarena nilai balik berada di nama fungsi tersebut, maka fungsi tersebut dapat langsung digunakan untuk dicetak hasilnya. Atau nilai fungsi tersebut dapat juga langsung dipindahkan ke pengenal variable yang lainnya.\n\n\n\n\n\n\nNama Prosedur tidak dapat digunakan lagsung tidak seperti pada Nama Fungsi, yang dapat langsung digunakan dari sebuah prosedur adalah parameternya yang mengandung nilai balik.\n\n\n\n\n\n\nPada dasarnya tidak ada perbedaan yang signifikan antara prosedur dan fungsi pada Bahasa C, hanya dibedakan dari return value. Jika suatu sub program tersebut memiliki nilai balik (return value) maka sub program tersebut disebut Function (Fungsi) jika tidak memiliki nilai balik maka sub program tersebut merupakan prosedure (Procedure)\n\n\n\n\n\n\nd. Manfaat Menggunakan Prosedur dan Fungsi\n\n\n\n\n\n\nDapat memecahkan program yang rumit dan besar menjadi program-program yang lebih sederhana atau kecil.\n\n\n\n\n\n\nUntuk aktivitas yang dilakukan lebih dari satu kali / sering dilakukan berulang-ulang.\n\n\n\n\n\n\nMeningkatkan kemampuan untuk menganalisis kesalahan, jika terjadi suatu kesalahan kita tinggal mencari fungsi atau prosedur yang bersangkutan saja dan tak perlu di seluruh program.\n\n\n\n\n\n\ne. Keuntungan Menggunakan Prosedur dan Fungsi\n\n\nKeuntungan menggunakan Prosedur, yaitu :\n\n\n\n\n\n\nMerupakan penerapan konsep program modular, yaitu memecah-mecah program yang rumit menjadi program-program bagian yang lebih sederhana dalam bentuk prosedur-prosedur.\n\n\n\n\n\n\nUntuk hal-hal yang sering dilakukan berulang-ulang, cukup dituliskan sekali saja dalam prosedur dan dapat dipanggil atau dipergunakan sewaktu-waktu bila diperlukan.\n\n\n\n\n\n\nKeuntungan menggunakan Fungsi, yaitu\n\n\n\n\n\n\nMenguraikan tugas pemrograman rumit menjadi langkah-langkah yang lebih sederhana atau kecil.\n\n\n\n\n\n\nMengurangi duplikasi kode (kode yang sama ditulis berulang-ulang) dalam program.\n\n\n\n\n\n\nDapat menggunakan kode yang ditulis dalam berbagai program yang berbeda.\n\n\n\n\n\n\nMemecah program besar menjadi kecil sehingga dapat dikerjakan oleh programmer-programmer atau dipecah menjadi beberapa tahap sehingga mempermudah pengerjaan dalam sebuah projek\n\n\n\n\n\n\nMenyembunyikan informasi dari user sehingga mencegah adanya perbuatan iseng seperti memodifikasi atau mengubah program yang kita buat\n\n\n\n\n\n\nMeningkatkan kemampuan pelacakan kesalahan, jika terjadi suatu kesalahan kita tinggal mencari fungsi yang bersangkutan saja dan tak perlu mencari kesalahan tersebut di seluruh program\n\n\n\n\n\n\nf. Mengapa Menggunakan Prosedur dan Fungsi\n\n\n\n\n\n\nMemecahkan program yang rumit dan besar menjadi program-program yang lebih sederhana atau kecil.\n\n\n\n\n\n\nUntuk aktivitas yang dilakukan lebih dari satu kali / sering dilakukan berulang-ulang.\n\n\n\n\n\n\nMeningkatkan kemampuan untuk menganalisis kesalahan, jika terjadi suatu kesalahan kita tinggal mencari fungsi atau prosedur yang bersangkutan saja dan tak perlu di seluruh program.\n\n\n\n\n\n\n\n\nB. Bentuk Syntax Umum\n\n\na. Prosedur\n\n\nBentuk umum prosedur adalah sebagai berikut:\n\n\nVoid NamaProsedur (DaftarParameter)\n{\n/*Code atau Badan Prosedur*/\n}\n\n\n\n\n\nContoh prsedur dalam Bahasa C:\n    \n \n\n\n#include\n \nstdio.h\n\n\n//Prosedur\n\n\nvoid\n \nmain\n(\nint\n \npanjang\n){\n// dimisalkan int panjang sebagai parameter input\n\n\nint\n \nlebar\n,\n \nluas\n;\n \n//deklarasi variable dengan tipe data integer\n\n\npanjang\n \n=\n \n16\n;\n\n\nprintf\n(\n\u201c\nMasukkan\n \nLebar\n \nPersegi\n:\n \n\u201c\n);\n//menampilkan tulisan\n\n\nscanf\n(\n\u201c\n%\nd\n\u201d\n,\nlebar\n);\n//menyimpan nilai\n\n\nluas\n=\n(\npanjang\n*\nlebar\n);\n \n//rumus luas persegi panjang\n\n\nprintf\n(\n\u201c\nLuas\n \npersegi\n \npanjang\n \ntersebut\n \nadalah\n \n:\n \n%\nd\n\\\nn\n\\\nn\n\u201d\n,\nluas\n);\n\n\nlus\n=\nmain2\n(\n21\n);\n//fungsi main2 dapat dipanggil disini karena memiliki nilai return\n\n\nprintf\n(\n\u201c\nLuas\n \npersegi\n \npanjang\n \ntersebut\n \nke2\n \nadalah\n \n:\n \n%\nd\n\\\nn\n\\\nn\n\u201d\n,\nluas\n);\n\n\n}\n\n\n\n\n\n\nb. Fungsi\n\n\nBentuk umum prosedur adalah sebagai berikut:\n\n\nTipeData NamaFungsi (DaftarParameter){\n/*Code atau Badan Prosedur*/\nreturn nilaireturn;\n}\n\n\n\n\n\nContoh Fungsi dalam Bahasa C:\n    \n \n\n\n#include\n \nstdio.h\n\n\n//Fungsi\n\n\nint\n \nmain\n(\nint\n \npanjang\n){\n\n\nint\n \nlebar\n,\n \nluas\n;\n\n\nprintf\n(\n\u201c\nMasukkan\n \nLebar\n \nPersegi\n \nke2\n:\n \n\u201c\n);\n\n\nscanf\n(\n\u201c\n%\nd\n\u201d\n,\nlebar\n);\n\n\nluas\n=\n(\npanjang\n*\nlebar\n);\n\n\nreturn\n \nluas\n;\n\n\n}\n\n\n\n\n\n\n\n\nC. Implementasi\n\n\nContoh Case 1\n\n\n1. Contoh menghitung luas persegi menggunakan Prosedur dan Fungsi dengan Bahasa c++\n\n\na. Prosedur \n\n\n\n\n\n\nSource Code\n\n\n#include\n \niostream\n\n\n\nusing\n \nnamespace\n \nstd\n;\n\n\n\nint\n \nmain\n(\nint\n \nargc\n,\n \nchar\n \n*\nargv\n[])\n\n\n{\n\n    \n//variabel dengan tipe int dan float\n\n    \nint\n \ns1\n,\ns2\n;\n\n    \nfloat\n \nluas_persegi\n;\n\n\n    \n//input dan output   \n\n    \ncout\n=============================================\n\\n\nendl\n;\n\n    \ncout\n   Menghitung Luas Persegi dengan Prosedur\n\\n\nendl\n;\n\n    \ncout\n=============================================\n\\n\nendl\n;\n\n    \ncout\n  Masukan Nilai Sisi Pertama ( s1 ) : \n;\ncin\ns1\n;\n\n    \ncout\n  Masukan Nilai Sisi Kedua   ( s2 ) : \n;\ncin\ns2\n;\n\n\n    \n//rumus\n\n    \nluas_persegi\n=\ns1\n*\ns2\n;\n\n\n    \n//tampilan output dan hasil   \n\n    \ncout\nendl\n;\n\n    \ncout\n=============================================\nendl\n;\n\n    \ncout\n\\n\n;\n\n    \ncout\n  Luas persegi dengan Sisi Pertama \ns1\n dan Sisi Kedua \ns2\n adalah \nluas_persegi\n;\n\n    \ncout\nendl\nendl\n;\n\n\n}\n\n\n\n\n\n\n\n\n\n\nOutput dengan inputan\n\n \n\n\n\n\n\n\nb. Fungsi\n\n\n\n\n\n\nSource Code\n\n\n#include\niostream\n\n\n\nusing\n \nnamespace\n \nstd\n;\n\n\n\n//nilai \n\n\nint\n \nLuas\n(\nint\n \nx\n,\nint\n \ny\n)\n\n\n{\n\n    \nint\n \nhasil\n;\n\n    \nhasil\n \n=\nx\n*\ny\n;\n\n    \nreturn\n  \nhasil\n \n;\n\n\n}\n\n\n\nmain\n()\n\n\n{\n  \n    \n//variabel dengan tipe int\n\n    \nint\n \ns1\n=\n0\n,\ns2\n=\n0\n,\nhasil\n;\n\n\n    \n//input dan output   \n\n    \ncout\n===========================================\n\\n\nendl\n;\n\n    \ncout\n   Menghitung Luas Persegi dengan Fungsi\n\\n\nendl\n;\n\n    \ncout\n===========================================\n\\n\nendl\n;\n\n    \ncout\n  Masukan Nilai Sisi Pertama ( s1 ) : \n;\ncin\ns1\n;\n\n    \ncout\n  Masukan Nilai Sisi Kedua   ( s2 ) : \n;\ncin\ns2\n;\n\n\n    \n//rumus dan pengembalian nilai\n\n    \nhasil\n=\nLuas\n(\ns1\n,\ns2\n);\n\n\n    \n//tampilan output dan hasilnya\n\n    \ncout\n\\n\n;\n\n    \ncout\n===========================================\nendl\n;\n\n    \ncout\n\\n\n;\n\n    \ncout\n  Luas persegi dengan Sisi Pertama \ns1\n dan Sisi Kedua \ns2\n adalah \nhasil\n;\n\n    \ncout\n\\n\n;\n\n\n}\n\n\n\n\n\n\n\n\n\n\nOutput dengan inputan\n\n \n\n\n\n\n\n\n\n\nContoh Case 2\n\n\n\n\n\n\nTugas :\n\n\n\n\nClas luas_persegi\n\n\nMemiliki 2 method luas dan volume\n\n\nTanpa Inputan\n\n\nTanpa atribut\n\n\nMenghitung luas dengan prosedur\n\n\nMenghitung volume dengan function\n\n\nPanjang = 5\n\n\nLebar = 10\n\n\n\n\n\n\n\n\nSource Code\n\n\n?php\n\n\n//class luas persegi\n\n    \nClass\n \nLuas_Persegi\n{\n\n\n        \n//memiliki 2 method yaitu Volume dan Luas\n\n        \nfunction\n \nLuas\n(\n$panjang\n,\n \n$lebar\n){\n\n            \necho\n \nLuas dengan Prosedur = \n \n.\n \n(\n$panjang\n \n*\n \n$lebar\n);\n\n        \n}\n\n\n        \nfunction\n \nVolume\n(\n$panjang\n,\n \n$lebar\n,\n \n$tinggi\n){\n\n            \n$volume\n \n=\n \n$panjang\n*\n$lebar\n*\n$tinggi\n;\n\n            \nreturn\n \n$volume\n;\n \n//respon nilai\n\n        \n}\n\n    \n}\n\n\n    \n//objek dari persegi panjang\n\n    \n$persegi\n \n=\n \nnew\n \nLuas_Persegi\n();\n\n\n    \n//implementasi Prosedur\n\n    \n$persegi\n-\nLuas\n(\n10\n,\n5\n);\n\n    \necho\n \nbr/\n;\n\n\n    \n//implementasi Function\n\n    \n$volume\n \n=\n \n$persegi\n-\nVolume\n(\n10\n,\n5\n,\n10\n);\n \n    \necho\n \nVolume dengan Funtion = \n \n.\n \n$volume\n;\n \n\n?\n\n\n\n\n\n\n\n\n\n\nOutput dengan inputan                      \n\n\n \n\n\n\n\n\n\n\n\nContoh Case 3\n\n\n\n\n\n\nSoal :\n\n\n\n\nMenghitung luas persegi panjang dengan Prosedur \n\n\nDalam 1 sourcecode\n\n\nTidak ada inputan langsung menampilkan nilai\n\n\n\n\n\n\n\n\nCiri \u2013 ciri :\n\n\n\n\nTerdiri dari 2 method yaitu \"Luas\" dan \"Volume\" \n\n\nVariabel panjang dan lebar dan tinggi\n\n\nTanpa Class\n\n\nLuas = Implementasi Prosedur, karena tidak ada pengembalian nilai\n\n\nVolume = Implementasi Prosedur, karena tidak ada pengembalian nilai\n\n\n\n\n\n\n\n\nSource Code                                                              \n\n\n?php\n\n    \nfunction\n \nVolume\n(\n$panjang\n,\n \n$lebar\n,\n \n$tinggi\n)\n\n    \n{\n\n        \n$volume\n \n=\n \n$panjang\n*\n$lebar\n*\n$tinggi\n;\n\n        \necho\n \nVolume dengan Prosedur = \n \n.\n \n$volume\n;\n\n    \n}\n\n\n    \nfunction\n \nLuas\n(\n$panjang\n,\n \n$lebar\n)\n\n    \n{\n\n        \n$luas\n \n=\n \n$panjang\n*\n$lebar\n;\n\n        \necho\n \nLuas dengan Prosedur = \n \n.\n \n$luas\n;\n\n    \n}\n\n\n    \nVolume\n(\n10\n,\n5\n,\n10\n);\n\n    \necho\n \nbr/\n;\n\n    \nLuas\n(\n10\n,\n5\n);\n\n\n?\n\n\n\n\n\n\n\n\n\n\nOutput dengan inputan                      \n\n\n \n\n\n\n\n\n\n\n\nContoh Case 4\n\n\n\n\n\n\nSoal :\n\n\n\n\nMenghitung luas persegi panjang dengan Prosedur \n\n\nDengan class\n\n\nDalam 1 sourcecode\n\n\nTidak ada inputan langsung menampilkan nilai\n\n\n\n\n\n\n\n\nCiri \u2013 ciri :\n\n\n\n\nTerdiri dari 2 method yaitu \"Luas\" dan \"Volume\" \n\n\nVariabel panjang dan lebar dan tinggi\n\n\nTanpa Class\n\n\nLuas = Implementasi Prosedur, karena tidak ada pengembalian nilai\n\n\nVolume = Implementasi Prosedur, karena tidak ada pengembalian nilai\n\n\n\n\n\n\n\n\nSource Code                                                              \n\n\n?php\n\n\nClass\n \nLuas_Persegi\n{\n\n    \nfunction\n \nVolume\n(\n$panjang\n,\n \n$lebar\n,\n \n$tinggi\n){\n\n        \n$volume\n \n=\n \n$panjang\n*\n$lebar\n*\n$tinggi\n;\n\n        \necho\n \nVolume dengan Prosedur = \n \n.\n \n$volume\n;\n\n    \n}\n\n\n    \nfunction\n \nLuas\n(\n$panjang\n,\n \n$lebar\n){\n\n        \n$luas\n \n=\n \n$panjang\n*\n$lebar\n;\n\n        \necho\n \nLuas dengan Prosedur = \n \n.\n \n$luas\n;\n\n    \n}\n\n\n}\n\n\n\n$persegi\n \n=\n \nnew\n \nLuas_Persegi\n();\n\n\n$persegi\n-\nVolume\n(\n10\n,\n5\n,\n10\n);\n\n\necho\n \nbr/\n;\n\n\n$persegi\n-\nLuas\n(\n10\n,\n5\n);\n\n\n?\n\n\n\n\n\n\n\n\n\n\nOutput dengan inputan                      \n\n\n \n\n\n\n\n\n\n\n\nContoh Case 5\n\n\n\n\n\n\nSoal :\n\n\n\n\nMenghitung luas persegi panjang dengan 2 cara yaitu prosedur dan fungsi \n\n\nDalam 1 sourcecode\n\n\nTidak ada inputan langsung menampilkan nilai\n\n\n\n\n\n\n\n\nCiri \u2013 ciri :\n    -Terdiri dari 2 method yaitu \u201cluas1\u201d dan \u201cluas2\u201d \n\n\n\n\nVariabel panjang dan lebar\n\n\nTanpa Class\n\n\n\u201cluas1\u201d = Implementasi Fungsi, karena ada pengembalian nilai\n\n\n\u201cluas2\u201d = Implementasi Prosedur, karena tidak ada pengembalian nilai\n\n\n\n\n\n\n\n\nSource Code                                                              \n\n\n?\nphp\n\n\nfunction\n \nluas1\n(\n$panjang\n,\n$lebar\n){\n\n    \nreturn\n \n$panjang\n \n*\n \n$lebar\n;\n\n\n}\n\n\n\nfunction\n \nluas2\n(\n$panjang\n,\n$lebar\n){\n\n    \necho\n \nLuas Persegi Dengan Prosedur = \n \n.\n \n(\n$panjang\n \n*\n \n$lebar\n);\n\n\n}\n\n\n\n/* implementasi function */\n\n\n$hasil\n \n=\n \nluas1\n(\n10\n,\n5\n);\n\n\necho\n \nLuas Persegi Dengan Fungsi = \n \n.\n \n$hasil\n;\n\n\necho\n \nbr\n;\n\n\n\n/* implementasi procedure */\n\n\nluas2\n(\n10\n,\n5\n);\n\n\n?\n\n\n\n\n\n\n\n\n\n\nOutput dengan inputan", 
            "title": "Prosedur dan Fungsi"
        }, 
        {
            "location": "/menu/php/prosedurFungsi/#prosedur-dan-fungsi", 
            "text": "", 
            "title": "Prosedur dan Fungsi"
        }, 
        {
            "location": "/menu/php/prosedurFungsi/#a-penjelasan", 
            "text": "a. Prosedur                                                                                                                                 \nProsedur adalah bagian dari suatu program yang disusun secara terpisah untuk melakukan suatu tugas khusus atau fungsi tertentu.   Pada dasarnya ada dua macam bentuk prosedur yaitu Subrutin (subprogram) dan Fungsi.    Subrutin (subprogram) adalah bagian dari program yang dibuat terpisah untuk melaksanakan sebagian dari tugas yang harus diselesaikan oleh suatu program. Pada umumnya yang dikenal dengan nama \u201cProsedur\u201d sebenarnya adalah \u201cSubprogram\u201d .    Fungsi adalah bagian dari program yang dibuat terpisah untuk melaksanakan fungsi tertentu yang menghasilkan suatu nilai untuk dikembalikan ke program utama.    Prosedur banyak digunakan pada program yang terstruktur karena :    Merupakan penerapan konsep program Modular, yaitu memecah-mecah program yang rumit menjadi program-program bagian yang lebih sederhana dalam bentuk sebagai prosedur-prosedur.    Untuk hal-hal yang sering dilakukan berulang-ulang, cukup dituliskan sekali saja dalam prosedur dan dapat dipanggil atau dipergunakan sewaktu-waktu bila diperlukan.    Membuat kode program lebih mudah dibaca.    Dapat digunakan untuk menyembunyikan detil program    Prosedur memiliki ciri-ciri sebagai berikut ini :    Hanya memiliki satu fungsi tujuan (logical inherent). Sebuah prosedur sebaiknya hanya memiliki satu fungsi tujuan dan tidak bercampur dengan tujuan lain. Hal ini untuk membuat prosedur lebih focus.    Berukuran kecil (small size). Yang dimaksud ukuran disini adalah panjang algoritma atau panjang kode program pada suatu prosedur. Ukuran kecil akan mudah dibaca maupun diperbaiki.    Tidak tergantung pada prosedur lain (independent). Sebuah prosedur harusnya bersifat mandiri, artinya sebuah prosedur dapat berjalan dan diuji tanpa menunggu bagian lainnya selesai. Selain itu variable yang digunakan dalam prosedur tidak mempengaruhi variabel yang digunakan pada bagian lain di keseluruhan program.    Manfaat pembuatan prosedur :    Modularisasi : Suatu program yang besar dan kompleks dapat dibagi ke dalam beberapa prosedur sehingga setiap prosedur merupakan bagian yang mudah dikerjakan. Dengan demikian, program besar tersebut menjadi mungkin diselesaikan.    Simplifikasi : Dalam suatu program, sering diperlukan suatu tugas yang harus dikerjakan berulang-ulang dengan nilai-nilai variabel yang berbeda. Agar tidak merepotkan maka tugas ini cukup ditulis sekali saja dalam bentuk prosedur yang kemudian dipanggil berulang-ulang sesuai kebutuhan.    b. Fungsi                                                                                                         \nFungsi sama seperti halnya dengan prosedur, namun tetap ada perbedaannya yaitu fungsi mempunyai output dengan tipe variabel yang kita tentukan. Berbeda dengan procedure yang bisa dengan tidak menggunakan parameter, fungsi harus menggunakan parameter dalam penggunaannya. Fungsi juga mempunyai Output dengan tipe variabel yang kita tentukan.   c. Perbedaan Prosedur dan Fungsi                                                                 Perbedaan Prosedur dan Fungsi    Pada fungsi, nilai yang dikirimkan balik terdapat pada nama fungsinya (kalau pada prosedur pada parameter yang dikirimkan secara acuan).    Karena nilai balik berada di nama fungsi tersebut, maka fungsi tersebut dapat langsung digunakan untuk dicetak hasilnya. Atau nilai fungsi tersebut dapat juga langsung dipindahkan ke pengenal variable yang lainnya.    Nama Prosedur tidak dapat digunakan lagsung tidak seperti pada Nama Fungsi, yang dapat langsung digunakan dari sebuah prosedur adalah parameternya yang mengandung nilai balik.    Pada dasarnya tidak ada perbedaan yang signifikan antara prosedur dan fungsi pada Bahasa C, hanya dibedakan dari return value. Jika suatu sub program tersebut memiliki nilai balik (return value) maka sub program tersebut disebut Function (Fungsi) jika tidak memiliki nilai balik maka sub program tersebut merupakan prosedure (Procedure)    d. Manfaat Menggunakan Prosedur dan Fungsi    Dapat memecahkan program yang rumit dan besar menjadi program-program yang lebih sederhana atau kecil.    Untuk aktivitas yang dilakukan lebih dari satu kali / sering dilakukan berulang-ulang.    Meningkatkan kemampuan untuk menganalisis kesalahan, jika terjadi suatu kesalahan kita tinggal mencari fungsi atau prosedur yang bersangkutan saja dan tak perlu di seluruh program.    e. Keuntungan Menggunakan Prosedur dan Fungsi  Keuntungan menggunakan Prosedur, yaitu :    Merupakan penerapan konsep program modular, yaitu memecah-mecah program yang rumit menjadi program-program bagian yang lebih sederhana dalam bentuk prosedur-prosedur.    Untuk hal-hal yang sering dilakukan berulang-ulang, cukup dituliskan sekali saja dalam prosedur dan dapat dipanggil atau dipergunakan sewaktu-waktu bila diperlukan.    Keuntungan menggunakan Fungsi, yaitu    Menguraikan tugas pemrograman rumit menjadi langkah-langkah yang lebih sederhana atau kecil.    Mengurangi duplikasi kode (kode yang sama ditulis berulang-ulang) dalam program.    Dapat menggunakan kode yang ditulis dalam berbagai program yang berbeda.    Memecah program besar menjadi kecil sehingga dapat dikerjakan oleh programmer-programmer atau dipecah menjadi beberapa tahap sehingga mempermudah pengerjaan dalam sebuah projek    Menyembunyikan informasi dari user sehingga mencegah adanya perbuatan iseng seperti memodifikasi atau mengubah program yang kita buat    Meningkatkan kemampuan pelacakan kesalahan, jika terjadi suatu kesalahan kita tinggal mencari fungsi yang bersangkutan saja dan tak perlu mencari kesalahan tersebut di seluruh program    f. Mengapa Menggunakan Prosedur dan Fungsi    Memecahkan program yang rumit dan besar menjadi program-program yang lebih sederhana atau kecil.    Untuk aktivitas yang dilakukan lebih dari satu kali / sering dilakukan berulang-ulang.    Meningkatkan kemampuan untuk menganalisis kesalahan, jika terjadi suatu kesalahan kita tinggal mencari fungsi atau prosedur yang bersangkutan saja dan tak perlu di seluruh program.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/prosedurFungsi/#b-bentuk-syntax-umum", 
            "text": "a. Prosedur  Bentuk umum prosedur adalah sebagai berikut:  Void NamaProsedur (DaftarParameter)\n{\n/*Code atau Badan Prosedur*/\n}  Contoh prsedur dalam Bahasa C:\n        #include   stdio.h  //Prosedur  void   main ( int   panjang ){ // dimisalkan int panjang sebagai parameter input  int   lebar ,   luas ;   //deklarasi variable dengan tipe data integer  panjang   =   16 ;  printf ( \u201c Masukkan   Lebar   Persegi :   \u201c ); //menampilkan tulisan  scanf ( \u201c % d \u201d , lebar ); //menyimpan nilai  luas = ( panjang * lebar );   //rumus luas persegi panjang  printf ( \u201c Luas   persegi   panjang   tersebut   adalah   :   % d \\ n \\ n \u201d , luas );  lus = main2 ( 21 ); //fungsi main2 dapat dipanggil disini karena memiliki nilai return  printf ( \u201c Luas   persegi   panjang   tersebut   ke2   adalah   :   % d \\ n \\ n \u201d , luas );  }   b. Fungsi  Bentuk umum prosedur adalah sebagai berikut:  TipeData NamaFungsi (DaftarParameter){\n/*Code atau Badan Prosedur*/\nreturn nilaireturn;\n}  Contoh Fungsi dalam Bahasa C:\n        #include   stdio.h  //Fungsi  int   main ( int   panjang ){  int   lebar ,   luas ;  printf ( \u201c Masukkan   Lebar   Persegi   ke2 :   \u201c );  scanf ( \u201c % d \u201d , lebar );  luas = ( panjang * lebar );  return   luas ;  }", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/prosedurFungsi/#c-implementasi", 
            "text": "", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/prosedurFungsi/#contoh-case-1", 
            "text": "1. Contoh menghitung luas persegi menggunakan Prosedur dan Fungsi dengan Bahasa c++  a. Prosedur     Source Code  #include   iostream  using   namespace   std ;  int   main ( int   argc ,   char   * argv [])  { \n     //variabel dengan tipe int dan float \n     int   s1 , s2 ; \n     float   luas_persegi ; \n\n     //input dan output    \n     cout ============================================= \\n endl ; \n     cout    Menghitung Luas Persegi dengan Prosedur \\n endl ; \n     cout ============================================= \\n endl ; \n     cout   Masukan Nilai Sisi Pertama ( s1 ) :  ; cin s1 ; \n     cout   Masukan Nilai Sisi Kedua   ( s2 ) :  ; cin s2 ; \n\n     //rumus \n     luas_persegi = s1 * s2 ; \n\n     //tampilan output dan hasil    \n     cout endl ; \n     cout ============================================= endl ; \n     cout \\n ; \n     cout   Luas persegi dengan Sisi Pertama  s1  dan Sisi Kedua  s2  adalah  luas_persegi ; \n     cout endl endl ;  }     Output dengan inputan      b. Fungsi    Source Code  #include iostream  using   namespace   std ;  //nilai   int   Luas ( int   x , int   y )  { \n     int   hasil ; \n     hasil   = x * y ; \n     return    hasil   ;  }  main ()  {   \n     //variabel dengan tipe int \n     int   s1 = 0 , s2 = 0 , hasil ; \n\n     //input dan output    \n     cout =========================================== \\n endl ; \n     cout    Menghitung Luas Persegi dengan Fungsi \\n endl ; \n     cout =========================================== \\n endl ; \n     cout   Masukan Nilai Sisi Pertama ( s1 ) :  ; cin s1 ; \n     cout   Masukan Nilai Sisi Kedua   ( s2 ) :  ; cin s2 ; \n\n     //rumus dan pengembalian nilai \n     hasil = Luas ( s1 , s2 ); \n\n     //tampilan output dan hasilnya \n     cout \\n ; \n     cout =========================================== endl ; \n     cout \\n ; \n     cout   Luas persegi dengan Sisi Pertama  s1  dan Sisi Kedua  s2  adalah  hasil ; \n     cout \\n ;  }     Output dengan inputan", 
            "title": "Contoh Case 1"
        }, 
        {
            "location": "/menu/php/prosedurFungsi/#contoh-case-2", 
            "text": "Tugas :   Clas luas_persegi  Memiliki 2 method luas dan volume  Tanpa Inputan  Tanpa atribut  Menghitung luas dengan prosedur  Menghitung volume dengan function  Panjang = 5  Lebar = 10     Source Code  ?php  //class luas persegi \n     Class   Luas_Persegi { \n\n         //memiliki 2 method yaitu Volume dan Luas \n         function   Luas ( $panjang ,   $lebar ){ \n             echo   Luas dengan Prosedur =    .   ( $panjang   *   $lebar ); \n         } \n\n         function   Volume ( $panjang ,   $lebar ,   $tinggi ){ \n             $volume   =   $panjang * $lebar * $tinggi ; \n             return   $volume ;   //respon nilai \n         } \n     } \n\n     //objek dari persegi panjang \n     $persegi   =   new   Luas_Persegi (); \n\n     //implementasi Prosedur \n     $persegi - Luas ( 10 , 5 ); \n     echo   br/ ; \n\n     //implementasi Function \n     $volume   =   $persegi - Volume ( 10 , 5 , 10 );  \n     echo   Volume dengan Funtion =    .   $volume ;   ?     Output dengan inputan", 
            "title": "Contoh Case 2"
        }, 
        {
            "location": "/menu/php/prosedurFungsi/#contoh-case-3", 
            "text": "Soal :   Menghitung luas persegi panjang dengan Prosedur   Dalam 1 sourcecode  Tidak ada inputan langsung menampilkan nilai     Ciri \u2013 ciri :   Terdiri dari 2 method yaitu \"Luas\" dan \"Volume\"   Variabel panjang dan lebar dan tinggi  Tanpa Class  Luas = Implementasi Prosedur, karena tidak ada pengembalian nilai  Volume = Implementasi Prosedur, karena tidak ada pengembalian nilai     Source Code                                                                ?php \n     function   Volume ( $panjang ,   $lebar ,   $tinggi ) \n     { \n         $volume   =   $panjang * $lebar * $tinggi ; \n         echo   Volume dengan Prosedur =    .   $volume ; \n     } \n\n     function   Luas ( $panjang ,   $lebar ) \n     { \n         $luas   =   $panjang * $lebar ; \n         echo   Luas dengan Prosedur =    .   $luas ; \n     } \n\n     Volume ( 10 , 5 , 10 ); \n     echo   br/ ; \n     Luas ( 10 , 5 );  ?     Output dengan inputan", 
            "title": "Contoh Case 3"
        }, 
        {
            "location": "/menu/php/prosedurFungsi/#contoh-case-4", 
            "text": "Soal :   Menghitung luas persegi panjang dengan Prosedur   Dengan class  Dalam 1 sourcecode  Tidak ada inputan langsung menampilkan nilai     Ciri \u2013 ciri :   Terdiri dari 2 method yaitu \"Luas\" dan \"Volume\"   Variabel panjang dan lebar dan tinggi  Tanpa Class  Luas = Implementasi Prosedur, karena tidak ada pengembalian nilai  Volume = Implementasi Prosedur, karena tidak ada pengembalian nilai     Source Code                                                                ?php  Class   Luas_Persegi { \n     function   Volume ( $panjang ,   $lebar ,   $tinggi ){ \n         $volume   =   $panjang * $lebar * $tinggi ; \n         echo   Volume dengan Prosedur =    .   $volume ; \n     } \n\n     function   Luas ( $panjang ,   $lebar ){ \n         $luas   =   $panjang * $lebar ; \n         echo   Luas dengan Prosedur =    .   $luas ; \n     }  }  $persegi   =   new   Luas_Persegi ();  $persegi - Volume ( 10 , 5 , 10 );  echo   br/ ;  $persegi - Luas ( 10 , 5 );  ?     Output dengan inputan", 
            "title": "Contoh Case 4"
        }, 
        {
            "location": "/menu/php/prosedurFungsi/#contoh-case-5", 
            "text": "Soal :   Menghitung luas persegi panjang dengan 2 cara yaitu prosedur dan fungsi   Dalam 1 sourcecode  Tidak ada inputan langsung menampilkan nilai     Ciri \u2013 ciri :\n    -Terdiri dari 2 method yaitu \u201cluas1\u201d dan \u201cluas2\u201d    Variabel panjang dan lebar  Tanpa Class  \u201cluas1\u201d = Implementasi Fungsi, karena ada pengembalian nilai  \u201cluas2\u201d = Implementasi Prosedur, karena tidak ada pengembalian nilai     Source Code                                                                ? php  function   luas1 ( $panjang , $lebar ){ \n     return   $panjang   *   $lebar ;  }  function   luas2 ( $panjang , $lebar ){ \n     echo   Luas Persegi Dengan Prosedur =    .   ( $panjang   *   $lebar );  }  /* implementasi function */  $hasil   =   luas1 ( 10 , 5 );  echo   Luas Persegi Dengan Fungsi =    .   $hasil ;  echo   br ;  /* implementasi procedure */  luas2 ( 10 , 5 );  ?     Output dengan inputan", 
            "title": "Contoh Case 5"
        }, 
        {
            "location": "/menu/php/increment/", 
            "text": "Increment\n\n\n\n\nA. Penjelasan\n\n\nPada tutorial kali ini saya akan membahas macam-macam operator yang ada didalam PHP terutama operator Increment dan Decrement. Fungsi kedua operator tersebuat adalah untuk mempersingkat pembuatan kode program. Increment dan Decrement adalah nama untuk operasi seperti $a++ dan $a--. Increment digunakan untuk menambah nilai variable sebanyak 1 angka, sedangkan Decrement digunakan untuk mengurang nilai variable sebanyak 1 angka. Cara penulisannya menggunakan tanda tambah sebanyak 2 kali untuk Increment, sedangkan Decrement menggunakan tanda kurang 2 kali dan untuk penempatan kedua tanda tersebut boleh sebelum variable atau sesudah variable tetapi dari penempatan keduannya tersebut memiliki perbedaan sehingga terdapat 4 jenis Increment dan Decrement dalam PHP. Penjelasannya sebagai berikut :\n\n\n\n\nB. Bentuk Syntax Umum\n\n\n    1)  ++$a Pre-increment : menambahkan nilai $a sebanyak 1, lalu kirim nilai.\n    2)  $a++ Post-increment : kirim nilai $a, lalu menambahkan nilai $a sebanyak 1.\n    3)  --$a Pre-decrement : mengurangi nilai $a sebanyak 1, lalu kirim nilai.\n    4)  $a-- Post- decrement: kirim nilai $a, lalu mengurangi nilai $a sebanyak 1.\n\n\n\n\n\n\n\nC. Implementasi\n\n\nContoh Case 1\n\n\na. Pre Increment\n\n\n\n\n\n\nSource Code                                  \n\n\n?php\n\n\n\n//Pre-increment\n\n\n\n$a\n \n=\n \n5\n;\n\n\n\necho\n \n\\$\na = \n$a\n \nbr\n;\n\n\necho\n \n\\$\na bernilai 6 : \n \n.\n \n++\n$a\n \n.\n \n(\n$a\\\n++) \nbr\n;\n\n\necho\n \n\\$\na bernilai 6 : \n \n.\n \n$a\n \n.\n \nbr\n;\n\n\n\n?\n\n\n\n\n\n\n\n\n\n\nOutput                                \n\n\n \n\n\n\n\n\n\nb. Post Increment \n\n\n\n\nSource Code                                  \n?php\n\n\n\n//Pre-increment\n\n\n\n$a\n \n=\n \n5\n;\n\n\n\necho\n \n\\$\na = \n$a\n \nbr\n;\n\n\necho\n \n\\$\na bernilai 5 : \n \n.\n \n++\n$a\n \n.\n \n(\\++\n$a\n) \nbr\n;\n\n\necho\n \n\\$\na bernilai 6 : \n \n.\n \n$a\n \n.\n \nbr\n;\n\n\n\n?\n\n\n\n\n\n\n\n\nOutput                                \n\n\n \n\n\n\n\n\n\n\n\nc. Pre Decrement \n\n\n\n\n\n\nSource Code                                  \n\n\n?php\n\n\n\n//Pre-decrement\n\n\n\n$a\n \n=\n \n5\n;\n\n\n\necho\n \n\\$\na = \n$a\n \nbr\n;\n\n\necho\n \n\\$\na bernilai 4 : \n \n.\n \n--\n$a\n \n.\n \n(--/\n$a\n) \nbr\n;\n\n\necho\n \n\\$\na bernilai 4 : \n \n.\n \n$a\n \n.\n \nbr\n;\n\n\n\n?\n\n\n\n\n\n\n\n\n\n\nOutput                                \n\n\n \n\n\n\n\n\n\nd. Post Decrement \n\n\n\n\nSource Code                                  \n?php\n\n\n\n//Pre-decrement\n\n\n\n$a\n \n=\n \n5\n;\n\n\n\necho\n \n\\$\na = \n$a\n \nbr\n;\n\n\necho\n \n\\$\na bernilai 5 : \n \n.\n \n--\n$a\n \n.\n \n(\n\\$\na--) \nbr\n;\n\n\necho\n \n\\$\na bernilai 4 : \n \n.\n \n$a\n \n.\n \nbr\n;\n\n\n\n?\n\n\n\n\n\n\n\n\nOutput                                \n\n\n \n\n\n\n\n\n\n\n\n\n\nContoh Case 2\n\n\n\n\n\n\nSource Code  \n\n\n?\nphp\n\n\n$jumlah_pesan\n \n=\n \n0\n;\n\n\n\nfunction\n \ntambah_pesan_1\n(){\n\n    \n$GLOBALS\n[\njumlah_pesan\n]\n \n+=\n \n1\n;\n\n\n}\n\n\n\nfunction\n \ntambah_pesan_2\n(){\n\n    \nreturn\n \n1\n;\n\n\n}\n\n\n\ntambah_pesan_1\n();\n\n\ntambah_pesan_1\n();\n\n\ntambah_pesan_1\n();\n\n\ntambah_pesan_1\n();\n\n\n\necho\n \n$jumlah_pesan\n;\n\n\n?\n\n\n\n\n\n\n\n\n\n\nOutput                                                \n\n\n \n\n\n\n\n\n\nImplementasi Increment :\n\n\ntambah_pesan_1 () sebanyak 4 kali \ndengan echo $jumlah_pesan berarti memanggil nilai mulai dari 0 sebanyak 4 kali. Hasilnya adalah \u201c4\u201d\n\n\n\n\n\n\nImplementasi Prosedur dan Fungsi :\n\n\ntambah_pesan_1 = Prosedur\ntambah_pesan_2 = Fungsi\n\n\n\n\n\n\n\n\nContoh Case 3\n\n\n\n\n\n\nSource Code                       \n\n\n?\nphp\n\n\n$jumlah_pesan\n \n=\n \n0\n;\n\n\n\nfunction\n \ntambah_pesan_1\n(){\n\n    \n$GLOBALS\n[\njumlah_pesan\n]\n \n+=\n \n1\n;\n\n\n}\n\n\n\nfunction\n \ntambah_pesan_2\n(){\n\n    \nreturn\n \n1\n;\n\n\n}\n\n\n\ntambah_pesan_1\n();\n\n\ntambah_pesan_1\n();\n\n\ntambah_pesan_1\n();\n\n\ntambah_pesan_1\n();\n\n\n\n$jumlah_pesan\n \n=\n \n$jumlah_pesan\n \n+\n \ntambah_pesan_2\n();\n\n\n$jumlah_pesan\n \n=\n \n$jumlah_pesan\n \n+\n \ntambah_pesan_2\n();\n\n\n$jumlah_pesan\n \n=\n \n$jumlah_pesan\n \n+\n \ntambah_pesan_2\n();\n\n\n\necho\n \n$jumlah_pesan\n\n\n?\n\n\n\n\n\n\n\n\n\n\nOutput                                                                             \n\n\n \n\n\n\n\n\n\nImplementasi Increment :\n\n\ntambah_pesan_1 () sebanyak 4 kali dan penambahan tambah_pesan_2 () sebanyak 3 kali dengan echo $jumlah_pesan berarti memanggil nilai mulai dari 0 sebanyak 4 kali dan dengan echo $jumlah_pesan berarti memanggil nilai mulai dari 0 sebanyak 3 kali  Hasilnya adalah \u201c7\u201d\n\n\n\n\n\n\nImplementasi Prosedur dan Fungsi :\n\n\ntambah_pesan_1 = Prosedur\ntambah_pesan_2 = Fungsi\n\n\n\n\n\n\n\n\nContoh Case 4\n\n\n\n\n\n\nSource Code        \n\n\n?\nphp\n\n\n$jumlah_pesan\n \n=\n \n0\n;\n\n\n\nfunction\n \ntambah_pesan_1\n(){\n\n    \n$GLOBALS\n[\njumlah_pesan\n]\n \n+=\n \n1\n;\n\n\n}\n\n\n\nfunction\n \ntambah_pesan_2\n(){\n\n    \nreturn\n \n1\n;\n\n\n}\n\n\n\ntambah_pesan_1\n();\n\n\ntambah_pesan_1\n();\n\n\ntambah_pesan_1\n();\n\n\ntambah_pesan_1\n();\n\n\n\n$jumlah_pesan\n \n+=\n \ntambah_pesan_2\n();\n\n\n$jumlah_pesan\n \n+=\n \ntambah_pesan_2\n();\n\n\n$jumlah_pesan\n \n+=\n \ntambah_pesan_2\n();\n\n\n\necho\n \n$jumlah_pesan\n\n\n?\n\n\n\n\n\n\n\n\n\n\nOutput                                                \n\n\n \n\n\n\n\n\n\nImplementasi Increment :\n\n\ntambah_pesan_1 () sebanyak 4 kali dan penambahan tambah_pesan_2 () sebanyak 3 kali dengan echo $jumlah_pesan berarti memanggil nilai mulai dari 0 sebanyak 4 kali dan dengan echo $jumlah_pesan berarti memanggil nilai mulai dari 0 sebanyak 3 kali  Hasilnya adalah \u201c7\u201d\n\n\n\n\n\n\nImplementasi Prosedur dan Fungsi :\n\n\ntambah_pesan_1 = Prosedur\ntambah_pesan_2 = Fungsi\n\n\n\n\n\n\n\n\nContoh Case 5\n\n\n\n\n\n\nSource Code\n\n\n?\nphp\n\n\n$jumlah_pesan\n \n=\n \n0\n;\n\n\n\nfunction\n \ntambah_pesan_1\n(){\n\n    \n$GLOBALS\n[\njumlah_pesan\n]\n \n+=\n \n1\n;\n\n\n}\n\n\n\nfunction\n \ntambah_pesan_2\n(){\n\n        \n$GLOBALS\n[\njumlah_pesan\n]\n \n+=\n \n1\n;\n\n    \nreturn\n \n1\n;\n\n\n}\n\n\n\ntambah_pesan_1\n();\n\n\ntambah_pesan_1\n();\n\n\ntambah_pesan_1\n();\n\n\ntambah_pesan_1\n();\n\n\n\ntambah_pesan_2\n();\n\n\ntambah_pesan_2\n();\n\n\ntambah_pesan_2\n();\n\n\n\necho\n \n$jumlah_pesan\n\n\n?\n\n\n\n\n\n\n\n\n\n\nOutput\n\n\n \n\n\n\n\n\n\nImplementasi Increment :\n\n\ntambah_pesan_1 () sebanyak 4 kali dan penambahan tambah_pesan_2 () sebanyak 3 kali dengan echo $jumlah_pesan berarti memanggil nilai mulai dari 0 sebanyak 4 kali dan dengan echo $jumlah_pesan berarti memanggil nilai mulai dari 0 sebanyak 3 kali  Hasilnya adalah \u201c7\u201d\n\n\n\n\n\n\nImplementasi Prosedur dan Fungsi :\n\n\ntambah_pesan_1 = Prosedur\ntambah_pesan_2 = Fungsi", 
            "title": "Increment"
        }, 
        {
            "location": "/menu/php/increment/#increment", 
            "text": "", 
            "title": "Increment"
        }, 
        {
            "location": "/menu/php/increment/#a-penjelasan", 
            "text": "Pada tutorial kali ini saya akan membahas macam-macam operator yang ada didalam PHP terutama operator Increment dan Decrement. Fungsi kedua operator tersebuat adalah untuk mempersingkat pembuatan kode program. Increment dan Decrement adalah nama untuk operasi seperti $a++ dan $a--. Increment digunakan untuk menambah nilai variable sebanyak 1 angka, sedangkan Decrement digunakan untuk mengurang nilai variable sebanyak 1 angka. Cara penulisannya menggunakan tanda tambah sebanyak 2 kali untuk Increment, sedangkan Decrement menggunakan tanda kurang 2 kali dan untuk penempatan kedua tanda tersebut boleh sebelum variable atau sesudah variable tetapi dari penempatan keduannya tersebut memiliki perbedaan sehingga terdapat 4 jenis Increment dan Decrement dalam PHP. Penjelasannya sebagai berikut :", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/increment/#b-bentuk-syntax-umum", 
            "text": "1)  ++$a Pre-increment : menambahkan nilai $a sebanyak 1, lalu kirim nilai.\n    2)  $a++ Post-increment : kirim nilai $a, lalu menambahkan nilai $a sebanyak 1.\n    3)  --$a Pre-decrement : mengurangi nilai $a sebanyak 1, lalu kirim nilai.\n    4)  $a-- Post- decrement: kirim nilai $a, lalu mengurangi nilai $a sebanyak 1.", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/increment/#c-implementasi", 
            "text": "", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/increment/#contoh-case-1", 
            "text": "a. Pre Increment    Source Code                                    ?php  //Pre-increment  $a   =   5 ;  echo   \\$ a =  $a   br ;  echo   \\$ a bernilai 6 :    .   ++ $a   .   ( $a\\ ++)  br ;  echo   \\$ a bernilai 6 :    .   $a   .   br ;  ?     Output                                       b. Post Increment    Source Code                                   ?php  //Pre-increment  $a   =   5 ;  echo   \\$ a =  $a   br ;  echo   \\$ a bernilai 5 :    .   ++ $a   .   (\\++ $a )  br ;  echo   \\$ a bernilai 6 :    .   $a   .   br ;  ?    Output                                        c. Pre Decrement     Source Code                                    ?php  //Pre-decrement  $a   =   5 ;  echo   \\$ a =  $a   br ;  echo   \\$ a bernilai 4 :    .   -- $a   .   (--/ $a )  br ;  echo   \\$ a bernilai 4 :    .   $a   .   br ;  ?     Output                                       d. Post Decrement    Source Code                                   ?php  //Pre-decrement  $a   =   5 ;  echo   \\$ a =  $a   br ;  echo   \\$ a bernilai 5 :    .   -- $a   .   ( \\$ a--)  br ;  echo   \\$ a bernilai 4 :    .   $a   .   br ;  ?    Output", 
            "title": "Contoh Case 1"
        }, 
        {
            "location": "/menu/php/increment/#contoh-case-2", 
            "text": "Source Code    ? php  $jumlah_pesan   =   0 ;  function   tambah_pesan_1 (){ \n     $GLOBALS [ jumlah_pesan ]   +=   1 ;  }  function   tambah_pesan_2 (){ \n     return   1 ;  }  tambah_pesan_1 ();  tambah_pesan_1 ();  tambah_pesan_1 ();  tambah_pesan_1 ();  echo   $jumlah_pesan ;  ?     Output                                                       Implementasi Increment :  tambah_pesan_1 () sebanyak 4 kali \ndengan echo $jumlah_pesan berarti memanggil nilai mulai dari 0 sebanyak 4 kali. Hasilnya adalah \u201c4\u201d    Implementasi Prosedur dan Fungsi :  tambah_pesan_1 = Prosedur\ntambah_pesan_2 = Fungsi", 
            "title": "Contoh Case 2"
        }, 
        {
            "location": "/menu/php/increment/#contoh-case-3", 
            "text": "Source Code                         ? php  $jumlah_pesan   =   0 ;  function   tambah_pesan_1 (){ \n     $GLOBALS [ jumlah_pesan ]   +=   1 ;  }  function   tambah_pesan_2 (){ \n     return   1 ;  }  tambah_pesan_1 ();  tambah_pesan_1 ();  tambah_pesan_1 ();  tambah_pesan_1 ();  $jumlah_pesan   =   $jumlah_pesan   +   tambah_pesan_2 ();  $jumlah_pesan   =   $jumlah_pesan   +   tambah_pesan_2 ();  $jumlah_pesan   =   $jumlah_pesan   +   tambah_pesan_2 ();  echo   $jumlah_pesan  ?     Output                                                                                    Implementasi Increment :  tambah_pesan_1 () sebanyak 4 kali dan penambahan tambah_pesan_2 () sebanyak 3 kali dengan echo $jumlah_pesan berarti memanggil nilai mulai dari 0 sebanyak 4 kali dan dengan echo $jumlah_pesan berarti memanggil nilai mulai dari 0 sebanyak 3 kali  Hasilnya adalah \u201c7\u201d    Implementasi Prosedur dan Fungsi :  tambah_pesan_1 = Prosedur\ntambah_pesan_2 = Fungsi", 
            "title": "Contoh Case 3"
        }, 
        {
            "location": "/menu/php/increment/#contoh-case-4", 
            "text": "Source Code          ? php  $jumlah_pesan   =   0 ;  function   tambah_pesan_1 (){ \n     $GLOBALS [ jumlah_pesan ]   +=   1 ;  }  function   tambah_pesan_2 (){ \n     return   1 ;  }  tambah_pesan_1 ();  tambah_pesan_1 ();  tambah_pesan_1 ();  tambah_pesan_1 ();  $jumlah_pesan   +=   tambah_pesan_2 ();  $jumlah_pesan   +=   tambah_pesan_2 ();  $jumlah_pesan   +=   tambah_pesan_2 ();  echo   $jumlah_pesan  ?     Output                                                       Implementasi Increment :  tambah_pesan_1 () sebanyak 4 kali dan penambahan tambah_pesan_2 () sebanyak 3 kali dengan echo $jumlah_pesan berarti memanggil nilai mulai dari 0 sebanyak 4 kali dan dengan echo $jumlah_pesan berarti memanggil nilai mulai dari 0 sebanyak 3 kali  Hasilnya adalah \u201c7\u201d    Implementasi Prosedur dan Fungsi :  tambah_pesan_1 = Prosedur\ntambah_pesan_2 = Fungsi", 
            "title": "Contoh Case 4"
        }, 
        {
            "location": "/menu/php/increment/#contoh-case-5", 
            "text": "Source Code  ? php  $jumlah_pesan   =   0 ;  function   tambah_pesan_1 (){ \n     $GLOBALS [ jumlah_pesan ]   +=   1 ;  }  function   tambah_pesan_2 (){ \n         $GLOBALS [ jumlah_pesan ]   +=   1 ; \n     return   1 ;  }  tambah_pesan_1 ();  tambah_pesan_1 ();  tambah_pesan_1 ();  tambah_pesan_1 ();  tambah_pesan_2 ();  tambah_pesan_2 ();  tambah_pesan_2 ();  echo   $jumlah_pesan  ?     Output       Implementasi Increment :  tambah_pesan_1 () sebanyak 4 kali dan penambahan tambah_pesan_2 () sebanyak 3 kali dengan echo $jumlah_pesan berarti memanggil nilai mulai dari 0 sebanyak 4 kali dan dengan echo $jumlah_pesan berarti memanggil nilai mulai dari 0 sebanyak 3 kali  Hasilnya adalah \u201c7\u201d    Implementasi Prosedur dan Fungsi :  tambah_pesan_1 = Prosedur\ntambah_pesan_2 = Fungsi", 
            "title": "Contoh Case 5"
        }, 
        {
            "location": "/menu/php/psr/", 
            "text": "PSR\n\n\n\n\nPenjelasan\n\n\n1. PSR-1 (Basic Coding Standard) \u201cDasar Coding Standar\u201d\n\n\nBertujuan memberikan standardisasi element-element kode PHP secara garis besar. Tujuannya adalah supaya kode-kode yang ditulis dengan PHP, memiliki kesamaan struktur.\n\n\n2. PSR-2 (Coding Style Guide) \u201cPanduan Gaya Penulisan\u201d\n\n\nPSR ini penambahan PSR-1 dan seperangkat aturan mengenai bagaimana memformat kode PHP\n\n\n3. PSR-3 (Logger Interface) \u201cAntarmuka Logger\u201d\n\n\nPeraturan PSR-3 untuk logging, dan secara khusus memaparkan sembilan metode untuk tata cara menulis log pada library framework. Hal ini untuk membuat pemangkasan universal untuk semua kerangka, yang berarti akan mempermudah ketika ingin menerapkan logging dalam framework yang sebelumnya tidak mempunyai fungsi tersebut.\n\n\n4. PSR-4 (Improved Autoloading) \u201cPeningkatan Autoloading\u201d\n\n\nSebagai extention untuk PSR-0, PSR-4 menambahkan metode peningkatan autoloading, dan juga menjelaskan persyaratan path file dari autoloader interoperable.\n\n\n5. PSR-5 (PHPDoc Standard) \u201cDokumen Standar PHP\u201d\n   \n\n\nTujuan utama dari PSR ini adalah untuk memberikan definisi yang lengkap dan formal standar PHPdoc. PSR ini menyimpang dari pendahulunya, de facto PHPdoc Standard terkait dengan phpDocumentor 1.x, untuk memberikan dukungan untuk fitur baru dalam bahasa PHP dan untuk mengatasi beberapa kekurangan dari pendahulunya.\n\n\n6. PSR-6 (Caching Interface) \u201cAntarmuka yg tersembunyi\u201d\n \n\n\nTujuan dari PSR ini adalah untuk memungkinkan pengembang untuk membuat cache-menyadari perpustakaan yang dapat diintegrasikan ke dalam kerangka kerja dan sistem yang ada tanpa perlu untuk pengembangan kustom.\n\n\n7. PSR-7 (HTTP Message Interface) \u201cPesan Antarmuka HTTP\u201d\n   \n\n\nIni menggambarkan antarmuka umum untuk mewakili pesan HTTP seperti yang dijelaskan dalam RFC 7230 dan RFC 7231, dan URI untuk digunakan dengan pesan HTTP seperti yang dijelaskan dalam RFC 3986.", 
            "title": "PSR"
        }, 
        {
            "location": "/menu/php/psr/#psr", 
            "text": "", 
            "title": "PSR"
        }, 
        {
            "location": "/menu/php/psr/#penjelasan", 
            "text": "1. PSR-1 (Basic Coding Standard) \u201cDasar Coding Standar\u201d  Bertujuan memberikan standardisasi element-element kode PHP secara garis besar. Tujuannya adalah supaya kode-kode yang ditulis dengan PHP, memiliki kesamaan struktur.  2. PSR-2 (Coding Style Guide) \u201cPanduan Gaya Penulisan\u201d  PSR ini penambahan PSR-1 dan seperangkat aturan mengenai bagaimana memformat kode PHP  3. PSR-3 (Logger Interface) \u201cAntarmuka Logger\u201d  Peraturan PSR-3 untuk logging, dan secara khusus memaparkan sembilan metode untuk tata cara menulis log pada library framework. Hal ini untuk membuat pemangkasan universal untuk semua kerangka, yang berarti akan mempermudah ketika ingin menerapkan logging dalam framework yang sebelumnya tidak mempunyai fungsi tersebut.  4. PSR-4 (Improved Autoloading) \u201cPeningkatan Autoloading\u201d  Sebagai extention untuk PSR-0, PSR-4 menambahkan metode peningkatan autoloading, dan juga menjelaskan persyaratan path file dari autoloader interoperable.  5. PSR-5 (PHPDoc Standard) \u201cDokumen Standar PHP\u201d      Tujuan utama dari PSR ini adalah untuk memberikan definisi yang lengkap dan formal standar PHPdoc. PSR ini menyimpang dari pendahulunya, de facto PHPdoc Standard terkait dengan phpDocumentor 1.x, untuk memberikan dukungan untuk fitur baru dalam bahasa PHP dan untuk mengatasi beberapa kekurangan dari pendahulunya.  6. PSR-6 (Caching Interface) \u201cAntarmuka yg tersembunyi\u201d    Tujuan dari PSR ini adalah untuk memungkinkan pengembang untuk membuat cache-menyadari perpustakaan yang dapat diintegrasikan ke dalam kerangka kerja dan sistem yang ada tanpa perlu untuk pengembangan kustom.  7. PSR-7 (HTTP Message Interface) \u201cPesan Antarmuka HTTP\u201d      Ini menggambarkan antarmuka umum untuk mewakili pesan HTTP seperti yang dijelaskan dalam RFC 7230 dan RFC 7231, dan URI untuk digunakan dengan pesan HTTP seperti yang dijelaskan dalam RFC 3986.", 
            "title": "Penjelasan"
        }, 
        {
            "location": "/menu/php/looping/looping/", 
            "text": "Looping\n\n\n\n\nA. Penjelasan\n\n\nPerulangan data atau yang biasa disebut dengan \u201clooping\u201d adalah proses yang dilakukan secara berulang-ulang sampai batas yang ditentukan.\n\n\nMacam-macam looping :\n\n\n\n\n\n\n\n\nLooping\n\n\n\n\n\n\n\n\n\n\n\n\nfor\n\n\n\n\n\n\n\n\nwhile\n\n\n\n\n\n\n\n\ndo while\n\n\n\n\n\n\n\n\nforeach\n\n\n\n\n\n\n\n\n\n\na. FOR\n\n\nPerulangan suatu baris kode.\n\n\nb. WHILE\n\n\nPerulangan dalam suatu kondisi yang bernilai TRUE untuk kondisi perulangan dimana banyaknya perulangan tidak dapat dipastikan pada saat penulisan program.\n\n\nc. DO WHILE\n\n\nPerulangan while dan do-while pada dasarnya hampir sama. Perbedaan terletak pada \u2019lokasi\u2019 pengecekan kondisi perulangan. Namun pada perulangan do-while, pengecekan kondisi akan dilakukan di akhir perulangan, sehingga walaupun kondisi adalah FALSE, perulangan akan tetap berjalan minimal 1 kali.\n\n\nd. FOREACH\n\n\nPerulangan foreach merupakan perulangan khusus untuk pembacaan nilai array. \nSetiap array memiliki pasangan key dan value. Key adalah \u2018posisi\u2019 dariarray, dan value adalah \u2018isi\u2019 dari array.\n\n\n\n\nB. Implementasi\n\n\nContoh Case\n\n\n\n\nSoal dan Penyelesaian :\n\n\n\n\n \n\n\n1. Penyelesaian\n\n\nSoal1_input.php\n\n\nhtml\n\n\nhead\n\n    \ntitle\nSoal 1\n/title\n\n\n/head\n\n\nbody\n\n\nform\n \naction=\nSoal1_proses.php\n \nmethod=\npost\n\n    Masukkan Angka 1 - 10: \ninput\n \ntype=\ntext\n \nname=\nangka\nbr\n\n    \ninput\n \ntype=\nsubmit\n\n\n/form\n\n\n/body\n\n\n/html\n\n\n\n\n\n\nSoal1_proses.php\n\n\nhtml\n\n\nhead\n\n    \ntitle\n/title\n\n\n/head\n\n\nbody\n\n\n\n?php\n \n\n$nilai\n=\n$_POST\n[\nangka\n];\n\n\n\nfor\n \n(\n$i\n=\n0\n;\n \n$i\n$nilai\n;\n \n$i\n++\n)\n\n\n{\n\n    \nfor\n \n(\n$j\n=\n0\n;\n \n$j\n \n$nilai\n;\n \n$j\n++\n)\n\n    \n{\n\n        \necho\n \n*\n;\n\n    \n}\n\n\necho\n \nbr /\n;\n\n\n}\n\n\n?\nbr\n\n\n\n/body\n\n\n/html\n\n\n\n\n\n\n\n\nOutput\n\n\n\n\nForm Input              \n\n\n \n\n\nForm Proses \n\n\n \n\n\n3. Penyelesaian \n\n\nform\n \nmethod\n=\npost\n\n\nInput\n \n:\n \ninput\n \ntype\n=\ntext\n \nname\n=\nkalimat\n\n\ninput\n \ntype\n=\nsubmit\n \nvalue\n=\nProses\nbr\n\n\n/form\n\n\n\n?\nphp\n\n\n\nfunction\n \nurutkan\n(\n$a\n,\n \n$b\n)\n \n{\n \n  \nif\n(\nord\n(\n$a\n)\n \n==\n  \nord\n(\n$b\n))\n\n  \n{\n \n     \nreturn\n \n0\n;\n\n  \n}\n \n  \nreturn\n \n(\nord\n(\n$a\n)\n \n \nord\n(\n$b\n))\n \n?\n \n-\n1\n : \n1\n;\n\n\n}\n\n\n\n$kalimat\n \n=\n \n$_POST\n[\nkalimat\n];\n\n\n$listChar\n \n=\n \nstr_split\n(\n$kalimat\n);\n\n\nusort\n(\n$listChar\n,\nurutkan\n);\n\n\n\nforeach\n \n(\n$listChar\n \nas\n \n$char\n)\n \n{\n\n   \necho\n \n$char\n;\n\n\n}\n\n\n\n?\n\n\n\n\n\n\n\n\nOutput\n\n\n\n\nForm Input Proses\n\n\n\n\n  \n\n\n4. Penyelesaian \n\n\nform\n \naction=\nsoal4_inputproses.php\n \nmethod=\nGET\n\n\ntr\n\n    \ntd\nInput\n/td\n\n    \ntd\n:\n/td\n\n    \ntd\ninput\n \ntype=\ntext\n \nname=\nteks\n \nvalue=\n?php\n \necho\n \n$_GET\n[\nteks\n];\n \n?\n/td\n\n\n/tr\nbr\n\n\ntd\n \ncolspan=\n2\n \nalign=\ncenter\ninput\n \ntype=\nsubmit\n \nname=\nsubmit\n \nvalue=\nProses\n/td\n\n\n/tr\n\n\n/form\n\n\n\n?php\n\n\nif\n \n(\n$_GET\n[\nsubmit\n]\n==\nProses\n)\n\n\n    \n//$kalimat=\nLintang Kawuryan\n;\n\n    \n$a\n=\nstrlen\n(\n$_GET\n[\nteks\n]);\n\n\n    \nfor\n(\n$i\n=\n0\n;\n$i\n=\n$a\n;\n$i\n++\n)\n\n    \n{\n\n        \nif\n(\n$_GET\n[\nteks\n][\n$i\n]\n==\na\n)\n\n        \n{\n\n            \n$voc\n=\n$voc\n+\n1\n;\n\n        \n}\n\n        \nelse\n\n        \n{\n\n            \ncontinue\n;\n\n        \n}\n\n    \n}\n\n\n    \necho\n \nInput : \n$_GET[teks]\n;\n\n    \necho\n \n/br\n Jumlah huruf a : \n$voc\n;\n\n\n\n?\n\n\n\n\n\n\n5. Penyelesaian\n\n\nform\n \nmethod\n=\npost\n\n\nInput\n \n:\n \ninput\n \ntype\n=\ntext\n \nname\n=\nkalimat\n\n\ninput\n \ntype\n=\nsubmit\n \nvalue\n=\nProses\nbr\n\n\n/form\n\n\n\n?\nphp\n\n\n\nfunction\n \nurutkan\n(\n$a\n,\n \n$b\n)\n \n{\n \n  \nif\n(\nord\n(\n$a\n)\n \n==\n  \nord\n(\n$b\n))\n\n  \n{\n \n     \nreturn\n \n0\n;\n\n  \n}\n \n  \nreturn\n \n(\nord\n(\n$a\n)\n \n \nord\n(\n$b\n))\n \n?\n \n-\n1\n : \n1\n;\n\n\n}\n\n\n\n$kalimat\n \n=\n \n$_POST\n[\nkalimat\n];\n\n\n$listChar\n \n=\n \nstr_split\n(\n$kalimat\n);\n\n\nusort\n(\n$listChar\n,\nurutkan\n);\n\n\n\nforeach\n \n(\n$listChar\n \nas\n \n$char\n)\n \n{\n\n   \necho\n \n$char\n;\n\n\n}\n\n\n\n?\n\n\n\n\n\n\n\n\nOutput\n\n\n\n\nForm Input\n\n\n\n\nForm Proses\n\n\n\n\n6. Penyelesaian\n\n\ntable\n\n\nform\n \naction=\nsoal6_inputproses.php\n \nmethod=\nGET\n\n    \ntr\n\n        \ntd\nKalimat\n/td\n\n        \ntd\n:\n/td\n\n        \ntd\ninput\n \ntype=\ntext\n \nname=\nteks\n \nvalue=\n?php\n \necho\n \n$_GET\n[\nteks\n];\n?\n/td\n\n    \n/tr\nbr\n\n    \ntr\n\n        \ntd\n \ncolspan=\n2\n \nalign=\ncenter\ninput\n \ntype=\nsubmit\n \nname=\nsubmit\n \nvalue=\nProses\n/td\n\n    \n/tr\n\n\n/form\n\n\n/table\n\n\n\n?php\n\n\nif\n \n(\n$_GET\n[\nsubmit\n]\n==\nProses\n)\n\n\n{\n\n    \n$hasil\n=\n(\n$_GEt\n[\nteks\n]);\n\n    \n//perulangan dan proses\n\n\n    \n$pisah\n=\nexplode\n(\n \n,\n \n$hasil\n);\n\n    \nforeach\n \n(\n$pisah\n \nas\n \n$data\n)\n \n{\n\n        \necho\n \nstrtoupper\n(\nsubstr\n(\n$data\n,\n \n0\n,\n \n1\n));\n\n        \necho\n \nsubstr\n(\n$data\n,\n \n1\n,\n \n20\n)\n.\n \n \n;\n\n    \n}\n\n\n}\n\n\n?", 
            "title": "Home"
        }, 
        {
            "location": "/menu/php/looping/looping/#looping", 
            "text": "", 
            "title": "Looping"
        }, 
        {
            "location": "/menu/php/looping/looping/#a-penjelasan", 
            "text": "Perulangan data atau yang biasa disebut dengan \u201clooping\u201d adalah proses yang dilakukan secara berulang-ulang sampai batas yang ditentukan.  Macam-macam looping :     Looping       for     while     do while     foreach      a. FOR  Perulangan suatu baris kode.  b. WHILE  Perulangan dalam suatu kondisi yang bernilai TRUE untuk kondisi perulangan dimana banyaknya perulangan tidak dapat dipastikan pada saat penulisan program.  c. DO WHILE  Perulangan while dan do-while pada dasarnya hampir sama. Perbedaan terletak pada \u2019lokasi\u2019 pengecekan kondisi perulangan. Namun pada perulangan do-while, pengecekan kondisi akan dilakukan di akhir perulangan, sehingga walaupun kondisi adalah FALSE, perulangan akan tetap berjalan minimal 1 kali.  d. FOREACH  Perulangan foreach merupakan perulangan khusus untuk pembacaan nilai array. \nSetiap array memiliki pasangan key dan value. Key adalah \u2018posisi\u2019 dariarray, dan value adalah \u2018isi\u2019 dari array.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/looping/looping/#b-implementasi", 
            "text": "", 
            "title": "B. Implementasi"
        }, 
        {
            "location": "/menu/php/looping/looping/#contoh-case", 
            "text": "Soal dan Penyelesaian :      1. Penyelesaian  Soal1_input.php  html  head \n     title Soal 1 /title  /head  body  form   action= Soal1_proses.php   method= post \n    Masukkan Angka 1 - 10:  input   type= text   name= angka br \n     input   type= submit  /form  /body  /html   Soal1_proses.php  html  head \n     title /title  /head  body  ?php   $nilai = $_POST [ angka ];  for   ( $i = 0 ;   $i $nilai ;   $i ++ )  { \n     for   ( $j = 0 ;   $j   $nilai ;   $j ++ ) \n     { \n         echo   * ; \n     }  echo   br / ;  }  ? br  /body  /html    Output   Form Input                   Form Proses      3. Penyelesaian   form   method = post  Input   :   input   type = text   name = kalimat  input   type = submit   value = Proses br  /form  ? php  function   urutkan ( $a ,   $b )   {  \n   if ( ord ( $a )   ==    ord ( $b )) \n   {  \n      return   0 ; \n   }  \n   return   ( ord ( $a )     ord ( $b ))   ?   - 1  :  1 ;  }  $kalimat   =   $_POST [ kalimat ];  $listChar   =   str_split ( $kalimat );  usort ( $listChar , urutkan );  foreach   ( $listChar   as   $char )   { \n    echo   $char ;  }  ?    Output   Form Input Proses       4. Penyelesaian   form   action= soal4_inputproses.php   method= GET  tr \n     td Input /td \n     td : /td \n     td input   type= text   name= teks   value= ?php   echo   $_GET [ teks ];   ? /td  /tr br  td   colspan= 2   align= center input   type= submit   name= submit   value= Proses /td  /tr  /form  ?php  if   ( $_GET [ submit ] == Proses ) \n\n     //$kalimat= Lintang Kawuryan ; \n     $a = strlen ( $_GET [ teks ]); \n\n     for ( $i = 0 ; $i = $a ; $i ++ ) \n     { \n         if ( $_GET [ teks ][ $i ] == a ) \n         { \n             $voc = $voc + 1 ; \n         } \n         else \n         { \n             continue ; \n         } \n     } \n\n     echo   Input :  $_GET[teks] ; \n     echo   /br  Jumlah huruf a :  $voc ;  ?   5. Penyelesaian  form   method = post  Input   :   input   type = text   name = kalimat  input   type = submit   value = Proses br  /form  ? php  function   urutkan ( $a ,   $b )   {  \n   if ( ord ( $a )   ==    ord ( $b )) \n   {  \n      return   0 ; \n   }  \n   return   ( ord ( $a )     ord ( $b ))   ?   - 1  :  1 ;  }  $kalimat   =   $_POST [ kalimat ];  $listChar   =   str_split ( $kalimat );  usort ( $listChar , urutkan );  foreach   ( $listChar   as   $char )   { \n    echo   $char ;  }  ?    Output   Form Input   Form Proses   6. Penyelesaian  table  form   action= soal6_inputproses.php   method= GET \n     tr \n         td Kalimat /td \n         td : /td \n         td input   type= text   name= teks   value= ?php   echo   $_GET [ teks ]; ? /td \n     /tr br \n     tr \n         td   colspan= 2   align= center input   type= submit   name= submit   value= Proses /td \n     /tr  /form  /table  ?php  if   ( $_GET [ submit ] == Proses )  { \n     $hasil = ( $_GEt [ teks ]); \n     //perulangan dan proses \n\n     $pisah = explode (   ,   $hasil ); \n     foreach   ( $pisah   as   $data )   { \n         echo   strtoupper ( substr ( $data ,   0 ,   1 )); \n         echo   substr ( $data ,   1 ,   20 ) .     ; \n     }  }  ?", 
            "title": "Contoh Case"
        }, 
        {
            "location": "/menu/php/looping/for/", 
            "text": "For\n\n\n\n\nA. Penjelasan\n\n\nPerulangan suatu baris kode\n\n\n\n\nB. Bentuk Syntax Umum\n\n\nfor (Kondisi_awal, kondisi, counter) \n{\n statement-yang-diulang;\n}\n\n\n\n\n\n\n\nC. Implementasi\n\n\nContoh Case\n\n\n1. Perulangan For\n\n\n?php\n\n\necho\nPengulangan dengan menggunakan for\nbr\n\n\nform method=\n\\\nPOST\n\\\n action=\n\\\nkirim.php\n\\\n\n\nBeri nilai Anda:\nbr\n;\n\n\nFor\n(\n$a\n=\n10\n;\n$a\n=\n100\n;\n$a\n+=\n10\n)\n\n\n{\n\n  \necho\ninput type=\n\\\nradio\n\\\n value=\n\\\n$a\\\n \nname\n=\n\\\nR1\n\\\n$a\nbr\n;\n\n\n}\n\n\n?\n\n\ninput\n \ntype=\nsubmit\n \nvalue=\nPILIH\n \nname=\npilih\n\n\n/form\n\n\n\n\n\n\n\n\nOutput", 
            "title": "For"
        }, 
        {
            "location": "/menu/php/looping/for/#for", 
            "text": "", 
            "title": "For"
        }, 
        {
            "location": "/menu/php/looping/for/#a-penjelasan", 
            "text": "Perulangan suatu baris kode", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/looping/for/#b-bentuk-syntax-umum", 
            "text": "for (Kondisi_awal, kondisi, counter) \n{\n statement-yang-diulang;\n}", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/looping/for/#c-implementasi", 
            "text": "", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/looping/for/#contoh-case", 
            "text": "1. Perulangan For  ?php  echo Pengulangan dengan menggunakan for br  form method= \\ POST \\  action= \\ kirim.php \\  Beri nilai Anda: br ;  For ( $a = 10 ; $a = 100 ; $a += 10 )  { \n   echo input type= \\ radio \\  value= \\ $a\\   name = \\ R1 \\ $a br ;  }  ?  input   type= submit   value= PILIH   name= pilih  /form    Output", 
            "title": "Contoh Case"
        }, 
        {
            "location": "/menu/php/looping/while/", 
            "text": "While\n\n\n\n\nA. Penjelasan\n\n\nPerulangan dalam suatu kondisi yang bernilai TRUE untuk kondisi perulangan dimana banyaknya perulangan tidak dapat dipastikan pada saat penulisan program.\n\n\n\n\nB. Bentuk Syntax Umum\n\n\nwhile (kondisi) \n{\n statement-yang-diulang;\n counter;\n}\n\n\n\n\n\n\n\nC. Implementasi\n\n\nContoh Case\n\n\n1. Perulangan While\n\n\n?php\n\n\necho\nOperasi menggunakan while.\n;\n\n\n$a\n=\n1\n;\n\n\nWhile\n(\n$a\n \n=\n \n8\n)\n\n    \n{\n\n        \necho\nbr\nCetak ke : \n$a\n \n;\n\n        \n$a\n++\n;\n\n    \n}\n\n\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "While"
        }, 
        {
            "location": "/menu/php/looping/while/#while", 
            "text": "", 
            "title": "While"
        }, 
        {
            "location": "/menu/php/looping/while/#a-penjelasan", 
            "text": "Perulangan dalam suatu kondisi yang bernilai TRUE untuk kondisi perulangan dimana banyaknya perulangan tidak dapat dipastikan pada saat penulisan program.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/looping/while/#b-bentuk-syntax-umum", 
            "text": "while (kondisi) \n{\n statement-yang-diulang;\n counter;\n}", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/looping/while/#c-implementasi", 
            "text": "", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/looping/while/#contoh-case", 
            "text": "1. Perulangan While  ?php  echo Operasi menggunakan while. ;  $a = 1 ;  While ( $a   =   8 ) \n     { \n         echo br Cetak ke :  $a   ; \n         $a ++ ; \n     }  ?    Output", 
            "title": "Contoh Case"
        }, 
        {
            "location": "/menu/php/looping/doWhile/", 
            "text": "Do While\n\n\n\n\nA. Penjelasan\n\n\nPerulangan while dan do-while pada dasarnya hampir sama. Perbedaan terletak pada \u2019lokasi\u2019 pengecekan kondisi perulangan. Namun pada perulangan do-while, pengecekan kondisi akan dilakukan di akhir perulangan, sehingga walaupun kondisi adalah FALSE, perulangan akan tetap berjalan minimal 1 kali.\n\n\n\n\nB. Bentuk Syntax Umum\n\n\ndo \n{\n statement-yang-diulang;\n counter;\n} while (kondisi);\n\n\n\n\n\n\n\nC. Implementasi\n\n\nContoh Case\n\n\n1. Perulangan Do While\n\n\n?php\n\n\n$a\n=\n1\n;\n\n\nDo\n\n\n{\necho\nDicetak dengan dowhile \n$a\n \nbr\n;\n\n\n$a\n++\n;\n\n\n}\nwhile\n(\n$a\n \n=\n  \n8\n)\n\n\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Do While"
        }, 
        {
            "location": "/menu/php/looping/doWhile/#do-while", 
            "text": "", 
            "title": "Do While"
        }, 
        {
            "location": "/menu/php/looping/doWhile/#a-penjelasan", 
            "text": "Perulangan while dan do-while pada dasarnya hampir sama. Perbedaan terletak pada \u2019lokasi\u2019 pengecekan kondisi perulangan. Namun pada perulangan do-while, pengecekan kondisi akan dilakukan di akhir perulangan, sehingga walaupun kondisi adalah FALSE, perulangan akan tetap berjalan minimal 1 kali.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/looping/doWhile/#b-bentuk-syntax-umum", 
            "text": "do \n{\n statement-yang-diulang;\n counter;\n} while (kondisi);", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/looping/doWhile/#c-implementasi", 
            "text": "", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/looping/doWhile/#contoh-case", 
            "text": "1. Perulangan Do While  ?php  $a = 1 ;  Do  { echo Dicetak dengan dowhile  $a   br ;  $a ++ ;  } while ( $a   =    8 )  ?    Output", 
            "title": "Contoh Case"
        }, 
        {
            "location": "/menu/php/looping/foreach/", 
            "text": "Foreach\n\n\n\n\nA. Penjelasan\n\n\nPerulangan foreach merupakan perulangan khusus untuk pembacaan nilai array. \nSetiap array memiliki pasangan key dan value. Key adalah \u2018posisi\u2019 dariarray, dan value adalah \u2018isi\u2019 dari array.\n\n\n\n\nB. Bentuk Syntax Umum\n\n\nforeach ($nama_array as $key =\n $value)\n{\n    statement ($key...$value...)\n}\n\n\n\n\n\n\n\nC. Implementasi\n\n\nContoh Case\n\n\n1. Perulangan Foreach\n\n\n?php\n\n\n$nama\n \n=\n \narray\n(\n\n        \n1\n=\nAndri\n,\n\n        \n6\n=\nJoko\n,\n\n        \n12\n=\nSukma\n,\n\n        \n45\n=\nRina\n,\n\n        \n55\n=\nSari\n);\n\n\n\nforeach\n \n(\n$nama\n \nas\n \n$kunci\n \n=\n$isi\n)\n\n\n{\n\n   \necho\n \nUrutan ke-\n$kunci\n adalah \n$isi\n;\n\n   \necho\n \nbr /\n;\n\n\n}\n\n\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Foreach"
        }, 
        {
            "location": "/menu/php/looping/foreach/#foreach", 
            "text": "", 
            "title": "Foreach"
        }, 
        {
            "location": "/menu/php/looping/foreach/#a-penjelasan", 
            "text": "Perulangan foreach merupakan perulangan khusus untuk pembacaan nilai array. \nSetiap array memiliki pasangan key dan value. Key adalah \u2018posisi\u2019 dariarray, dan value adalah \u2018isi\u2019 dari array.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/looping/foreach/#b-bentuk-syntax-umum", 
            "text": "foreach ($nama_array as $key =  $value)\n{\n    statement ($key...$value...)\n}", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/looping/foreach/#c-implementasi", 
            "text": "", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/looping/foreach/#contoh-case", 
            "text": "1. Perulangan Foreach  ?php  $nama   =   array ( \n         1 = Andri , \n         6 = Joko , \n         12 = Sukma , \n         45 = Rina , \n         55 = Sari );  foreach   ( $nama   as   $kunci   = $isi )  { \n    echo   Urutan ke- $kunci  adalah  $isi ; \n    echo   br / ;  }  ?    Output", 
            "title": "Contoh Case"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp/", 
            "text": "PHP\n\n\n\n\nA. Keyword PHP\n\n\n\n\n\n\n\n\nFungsi\n\n\nKegunaan\n\n\n\n\n\n\n\n\n\n\nwhile\n\n\nDigunakan untuk bila jumlah perulangannya belum diketahui\n\n\n\n\n\n\ndo while\n\n\nDigunakan untuk menjalankan suatu pernyataan lalu diuji\n\n\n\n\n\n\n\n\napakah kondisi sudah bernilai benar,tapi jika bernilai salah\n\n\n\n\n\n\n\n\nmaka pernyataan tidak dijalankan\n\n\n\n\n\n\nfor\n\n\nDigunakan untuk melaksanakan pernyataan berulang kali\n\n\n\n\n\n\n\n\nterhadap sejumlah nilai yang telah ditetapkan\n\n\n\n\n\n\nforeach\n\n\nDigunakan untuk berbagai keperluan baik untuk backend maupun\n\n\n\n\n\n\n\n\nfrontend, pada frontend, foreach digunakan salahsatunya untuk\n\n\n\n\n\n\n\n\nmembuat element dropdown select\n\n\n\n\n\n\narray\n\n\nBerfungsi untuk menyimpan banyak data dalam satu variabel\n\n\n\n\n\n\nbreak\n\n\nDigunakan untuk menghentikan proses yang dilakukan oleh perintah php\n\n\n\n\n\n\ncontinue\n\n\nDigunakan untuk menghentikan proses yang dilakukan oleh perintah php\n\n\n\n\n\n\nif\n\n\ndigunakan untuk mengeksekusi beberapa kode hanya jika kondisi tertentu\n\n\n\n\n\n\n\n\nadalah benar\n\n\n\n\n\n\nif else\n\n\nDigunakan untuk mengeksekusi beberapa kode jika kondisi benar dan kode\n\n\n\n\n\n\n\n\nlain jika kondisi salah\n\n\n\n\n\n\nif elseif else\n\n\nDigunakan untuk memilih salah satu dari banyak blok kode yang akan\n\n\n\n\n\n\n\n\ndieksekusi\n\n\n\n\n\n\nswitch\n\n\nBerfungsi untuk memeriksa suatu variabel, lalu menjalankan perintah-\n\n\n\n\n\n\n\n\nperintah yang sesuai dengan kondisi yang mungkin terjadi untuk variabel\n\n\n\n\n\n\n\n\ntersebut\n\n\n\n\n\n\necho\n\n\nBerfungsi untuk menampilkan satu atau lebih data string kedalam internet\n\n\n\n\n\n\n\n\nbrowser\n\n\n\n\n\n\nprint\n\n\nBerfungsi untuk print menampilkan data tunggal (hanya satu data) kedalam\n\n\n\n\n\n\n\n\ninternet browser\n\n\n\n\n\n\nfunction\n\n\nBerfungsi untuk menyelesaikan sebuah tugas tertentu, dan  merupakan\n\n\n\n\n\n\n\n\nbagian  dari program utama\n\n\n\n\n\n\nclass\n\n\nBerfungsi untuk hanya untuk membuat kerangka dasar\n\n\n\n\n\n\npublic\n\n\nBerfungsi untuk ketika sebuah property atau method dinyatakan sebagai\n\n\n\n\n\n\n\n\npublic maka seluruh kode program di luar class bisa mengaksesnya,\n\n\n\n\n\n\n\n\ntermasuk class turunan\n\n\n\n\n\n\nprivate\n\n\nBerfungsi jika sebuah property atau method di-set sebagai private,\n\n\n\n\n\n\n\n\nmaka satu-satunya yang bisa mengakses adalah class itu sendiri itu\n\n\n\n\n\n\nprotected\n\n\nBerfungsi jika sebuah property atau method dinyatakan sebagai protected,\n\n\n\n\n\n\n\n\nberarti property atau method tersebut tidak bisa diakses dari luar class,\n\n\n\n\n\n\n\n\nnamun bisa diakses oleh class itu sendiri atau turunan class tersebut\n\n\n\n\n\n\nstatic\n\n\nBerfungsi jika kita ingin menghitung berapa kali sebuah fungsi dipanggil\n\n\n\n\n\n\nreturn\n\n\nBerfungsi sebagai perintah khusus untuk fungsi, dimana kata return\n\n\n\n\n\n\n\n\nmenginstruksikan kepada PHP bahwa pemrosesan fungsi telah selesai\n\n\n\n\n\n\nextends\n\n\nBerfungsi untuk membuat suatu class baru dari class yang sudah ada\n\n\n\n\n\n\ntry\n\n\nBerfungsi untuk berfungsi untuk melihat apakah function yang dieksekusi\n\n\n\n\n\n\n\n\nterjadi kesalahan atau error atau tidak\n\n\n\n\n\n\ncatch\n\n\nBerfungsi untuk menunjukan error yang ingin kita beritahukan\n\n\n\n\n\n\ninclude\n\n\nBerfungsi untuk suatu perintah atau fungsi di dalam pemrograman PHP untuk\n\n\n\n\n\n\n\n\nmenyisipkan sebuah file PHP ke dalam file PHP lainnya, tapi jika salah\n\n\n\n\n\n\n\n\npeletakan lokasi maka file akan tetap dijalankan denan mengabaikan error\n\n\n\n\n\n\nrequire\n\n\nBerfungsi untuk suatu perintah atau fungsi di dalam pemrograman PHP untuk\n\n\n\n\n\n\n\n\nmenyisipkan sebuah file PHP ke dalam file PHP lainnya, tapi jika salah\n\n\n\n\n\n\n\n\npeletakan lokasi maka isi dari file tidak akan dilanjutkan dan akan\n\n\n\n\n\n\n\n\ndihentikan penyisipannya pada letak error\n\n\n\n\n\n\nrequire_once\n\n\nBerfungsi untuk penyisipan hanya dipanggil sekali saja\n\n\n\n\n\n\nisset\n\n\nBerfungsi untuk menyatakan variabel sudah diset atau tidak. Jika variabel\n\n\n\n\n\n\n\n\nsudah diset makan variavel akan mengembalikan nilai true, sebaliknya akan\n\n\n\n\n\n\n\n\nbernilai false\n\n\n\n\n\n\nunset\n\n\nBerfungsi meng-unsetvariabel, dan membebaskan memory yang sudah digunakan\n\n\n\n\n\n\nand\n\n\nBerfungsi jika kedua nilai bernilai sama\n\n\n\n\n\n\nor\n\n\nBerfungsi jika salah satu dari kedua nilai bernilai benar", 
            "title": "Home"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp/#php", 
            "text": "", 
            "title": "PHP"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp/#a-keyword-php", 
            "text": "Fungsi  Kegunaan      while  Digunakan untuk bila jumlah perulangannya belum diketahui    do while  Digunakan untuk menjalankan suatu pernyataan lalu diuji     apakah kondisi sudah bernilai benar,tapi jika bernilai salah     maka pernyataan tidak dijalankan    for  Digunakan untuk melaksanakan pernyataan berulang kali     terhadap sejumlah nilai yang telah ditetapkan    foreach  Digunakan untuk berbagai keperluan baik untuk backend maupun     frontend, pada frontend, foreach digunakan salahsatunya untuk     membuat element dropdown select    array  Berfungsi untuk menyimpan banyak data dalam satu variabel    break  Digunakan untuk menghentikan proses yang dilakukan oleh perintah php    continue  Digunakan untuk menghentikan proses yang dilakukan oleh perintah php    if  digunakan untuk mengeksekusi beberapa kode hanya jika kondisi tertentu     adalah benar    if else  Digunakan untuk mengeksekusi beberapa kode jika kondisi benar dan kode     lain jika kondisi salah    if elseif else  Digunakan untuk memilih salah satu dari banyak blok kode yang akan     dieksekusi    switch  Berfungsi untuk memeriksa suatu variabel, lalu menjalankan perintah-     perintah yang sesuai dengan kondisi yang mungkin terjadi untuk variabel     tersebut    echo  Berfungsi untuk menampilkan satu atau lebih data string kedalam internet     browser    print  Berfungsi untuk print menampilkan data tunggal (hanya satu data) kedalam     internet browser    function  Berfungsi untuk menyelesaikan sebuah tugas tertentu, dan  merupakan     bagian  dari program utama    class  Berfungsi untuk hanya untuk membuat kerangka dasar    public  Berfungsi untuk ketika sebuah property atau method dinyatakan sebagai     public maka seluruh kode program di luar class bisa mengaksesnya,     termasuk class turunan    private  Berfungsi jika sebuah property atau method di-set sebagai private,     maka satu-satunya yang bisa mengakses adalah class itu sendiri itu    protected  Berfungsi jika sebuah property atau method dinyatakan sebagai protected,     berarti property atau method tersebut tidak bisa diakses dari luar class,     namun bisa diakses oleh class itu sendiri atau turunan class tersebut    static  Berfungsi jika kita ingin menghitung berapa kali sebuah fungsi dipanggil    return  Berfungsi sebagai perintah khusus untuk fungsi, dimana kata return     menginstruksikan kepada PHP bahwa pemrosesan fungsi telah selesai    extends  Berfungsi untuk membuat suatu class baru dari class yang sudah ada    try  Berfungsi untuk berfungsi untuk melihat apakah function yang dieksekusi     terjadi kesalahan atau error atau tidak    catch  Berfungsi untuk menunjukan error yang ingin kita beritahukan    include  Berfungsi untuk suatu perintah atau fungsi di dalam pemrograman PHP untuk     menyisipkan sebuah file PHP ke dalam file PHP lainnya, tapi jika salah     peletakan lokasi maka file akan tetap dijalankan denan mengabaikan error    require  Berfungsi untuk suatu perintah atau fungsi di dalam pemrograman PHP untuk     menyisipkan sebuah file PHP ke dalam file PHP lainnya, tapi jika salah     peletakan lokasi maka isi dari file tidak akan dilanjutkan dan akan     dihentikan penyisipannya pada letak error    require_once  Berfungsi untuk penyisipan hanya dipanggil sekali saja    isset  Berfungsi untuk menyatakan variabel sudah diset atau tidak. Jika variabel     sudah diset makan variavel akan mengembalikan nilai true, sebaliknya akan     bernilai false    unset  Berfungsi meng-unsetvariabel, dan membebaskan memory yang sudah digunakan    and  Berfungsi jika kedua nilai bernilai sama    or  Berfungsi jika salah satu dari kedua nilai bernilai benar", 
            "title": "A. Keyword PHP"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_and/", 
            "text": "Keyword PHP And\n\n\n\n\nA. Penjelasan\n\n\nAnd yaitu akan menghasilkan nilai benar jika kedua kondisi pembanding bernilai benar,dan akan bernilai salah jika salah satu pembanding bernilai salah / nol\n\n\nB. Bentuk Syntax Umum\n\n\n$a and $b = TRUE Jika keduanya $ a dan $ b adalah TRUE.\n\n\n\n\n\nC. Implementasi\n\n\n?php\n\n    \necho\n \nbr\n;\n\n    \n$data1\n \n=\n \ntrue\n;\n\n    \n$data2\n \n=\n \ntrue\n;\n\n    \n$data3\n \n=\n \nfalse\n;\n\n    \necho\n \n(\n\\$\ndata1 = True\nBR\n);\n\n    \necho\n \n(\n\\$\ndata2 = True\nBR\n);\n\n    \necho\n \n(\n\\$\ndata3 = False\nBR\nBR\n);\n\n    \n$logika\n \n=\n \n$data1\n \n \n$data2\n;\n\n    \necho\n \n(\n\\$\nlogika = \n\\$\ndata1 \n \n\\$\ndata2 \nBR\n)\n  \n;\n\n    \nprintf\n \n(\n \n(sehingga nilai \n\\$\nlogika = %d) \nBR\nBR\n,\n \n$logika\n);\n\n    \n$logika\n \n=\n \n$data1\n \n||\n \n$data3\n;\n\n    \necho\n \n(\n\\$\nlogika = \n\\$\ndata1 || \n\\$\ndata3 \nBR\n)\n   \n;\n\n    \nprintf\n \n(\n \n (sehingga nilai \n\\$\nlogika = %d) \nBR\nBR\n,\n \n$logika\n);\n\n    \n$logika\n \n=\n \n$data2\n \nXor\n \n$data1\n;\n\n    \necho\n \n(\n\\$\nlogika = \n\\$\ndata2 Xor  \n\\$\ndata1 \nBR\n)\n  \n;\n\n    \nprintf\n \n(\n (karena kedua kondisi sama, maka nilai \n\\$\nlogika = %d) \nBR\nBR\n,\n      \n    \n$logika\n);\n\n    \n$data1\n \n=\n \n!\n$data\n;\n\n    \necho\n \n(\n! \n\\$\ndata1 \nBR\n);\n\n    \nprintf\n \n(\n (setelah nilai \n\\$\ndata1 dikenai logika NOT (!), sehingga nilai    \n\n\n    \n\\$\ndata1 = %d)\n,\n \n$data1\n);\n\n\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "And"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_and/#keyword-php-and", 
            "text": "", 
            "title": "Keyword PHP And"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_and/#a-penjelasan", 
            "text": "And yaitu akan menghasilkan nilai benar jika kedua kondisi pembanding bernilai benar,dan akan bernilai salah jika salah satu pembanding bernilai salah / nol", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_and/#b-bentuk-syntax-umum", 
            "text": "$a and $b = TRUE Jika keduanya $ a dan $ b adalah TRUE.", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_and/#c-implementasi", 
            "text": "?php \n     echo   br ; \n     $data1   =   true ; \n     $data2   =   true ; \n     $data3   =   false ; \n     echo   ( \\$ data1 = True BR ); \n     echo   ( \\$ data2 = True BR ); \n     echo   ( \\$ data3 = False BR BR ); \n     $logika   =   $data1     $data2 ; \n     echo   ( \\$ logika =  \\$ data1    \\$ data2  BR )    ; \n     printf   (   (sehingga nilai  \\$ logika = %d)  BR BR ,   $logika ); \n     $logika   =   $data1   ||   $data3 ; \n     echo   ( \\$ logika =  \\$ data1 ||  \\$ data3  BR )     ; \n     printf   (    (sehingga nilai  \\$ logika = %d)  BR BR ,   $logika ); \n     $logika   =   $data2   Xor   $data1 ; \n     echo   ( \\$ logika =  \\$ data2 Xor   \\$ data1  BR )    ; \n     printf   (  (karena kedua kondisi sama, maka nilai  \\$ logika = %d)  BR BR ,       \n     $logika ); \n     $data1   =   ! $data ; \n     echo   ( !  \\$ data1  BR ); \n     printf   (  (setelah nilai  \\$ data1 dikenai logika NOT (!), sehingga nilai           \\$ data1 = %d) ,   $data1 );  ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_array/", 
            "text": "Keyword PHP Array\n\n\n\n\nA. Penjelasan\n\n\nArray merupakan suatu struktur data yang dapat menyimpan banyak nilai dalam sebuah variabel.Tipe data array dapat menyimpan satu atau lebih data dalam variabel tunggal, sesuai dengan fungsinya, tipe data array sangat berguna untuk menyimpan banyak data dalam satu variabel.\n\n\nB. Bentuk Syntax Umum\n\n\n    array(\n        key  =\n value,\n        key2 =\n value2,\n        key3 =\n value3,\n        ...\n    )\n\n\n\n\n\nC. Implementasi\n\n\nContoh Case\n\n\n   \n?php\n\n            \n//membuat variabel $buah bertipe array, index/key tidak ditentukan\n\n            \n$buah\n[]\n \n=\n \nAnggur\n;\n\n            \n$buah\n[]\n \n=\n \nRambutan\n;\n\n            \n$buah\n[]\n \n=\n \nPepaya\n;\n\n            \n$buah\n[]\n \n=\n \nPisang\n;\n\n            \necho\n \n$buah\n[\n1\n];\n\n           \n//Hasilnya Rambutan\n\n            \necho\n \np\n;\n\n            \nfor\n(\n$i\n=\n0\n;\n$i\ncount\n(\n$buah\n);\n$i\n++\n)\n\n           \n{\n\n           \necho\n \nbuah #\n$i\n: \n.\n$buah\n[\n$i\n]\n.\nbr\n;\n\n           \n}\n\n    \n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Array"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_array/#keyword-php-array", 
            "text": "", 
            "title": "Keyword PHP Array"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_array/#a-penjelasan", 
            "text": "Array merupakan suatu struktur data yang dapat menyimpan banyak nilai dalam sebuah variabel.Tipe data array dapat menyimpan satu atau lebih data dalam variabel tunggal, sesuai dengan fungsinya, tipe data array sangat berguna untuk menyimpan banyak data dalam satu variabel.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_array/#b-bentuk-syntax-umum", 
            "text": "array(\n        key  =  value,\n        key2 =  value2,\n        key3 =  value3,\n        ...\n    )", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_array/#c-implementasi", 
            "text": "", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_array/#contoh-case", 
            "text": "?php \n             //membuat variabel $buah bertipe array, index/key tidak ditentukan \n             $buah []   =   Anggur ; \n             $buah []   =   Rambutan ; \n             $buah []   =   Pepaya ; \n             $buah []   =   Pisang ; \n             echo   $buah [ 1 ]; \n            //Hasilnya Rambutan \n             echo   p ; \n             for ( $i = 0 ; $i count ( $buah ); $i ++ ) \n            { \n            echo   buah # $i :  . $buah [ $i ] . br ; \n            } \n     ?    Output", 
            "title": "Contoh Case"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_break/", 
            "text": "Keyword PHP Break\n\n\n\n\nA. Penjelasan\n\n\nBreak berfungsi sebagai perintah kepada web server untuk menghentikan  perulangan secara premature,yaitu menghentikan perulangan diluar dari yang direncanakan.Fungsi break dalam php digunakan untuk menghentikan proses yang dilakukan oleh perintah php  : for, foreach, while, do-while atau switch.\n\n\nB. Bentuk Syntax Umum\n\n\n   while (text expression) {\n               //codes\n        if (condition for break)\n    {\n        break;\n    }\n        //codes\n    }\n\n\n\n\n\nC. Implementasi\n\n\n   \n?php\n\n               \n$Mahasiswa\n=\n \narray\n(\nAndi\n,\nZulfan\n,\nRahmi\n,\nDodi\n,\nDoni\n);\n\n\n               \nforeach\n \n(\n$Mahasiswa\n \nas\n \n$value\n)\n\n               \n{\n\n               \nif\n(\n$value\n==\nRahmi\n)\n\n               \n{\n\n               \nbreak\n;\n\n               \n}\n    \n               \necho\n \n$value\n;\n\n               \necho\n \nbr /\n;\n\n               \n}\n\n   \n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Break"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_break/#keyword-php-break", 
            "text": "", 
            "title": "Keyword PHP Break"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_break/#a-penjelasan", 
            "text": "Break berfungsi sebagai perintah kepada web server untuk menghentikan  perulangan secara premature,yaitu menghentikan perulangan diluar dari yang direncanakan.Fungsi break dalam php digunakan untuk menghentikan proses yang dilakukan oleh perintah php  : for, foreach, while, do-while atau switch.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_break/#b-bentuk-syntax-umum", 
            "text": "while (text expression) {\n               //codes\n        if (condition for break)\n    {\n        break;\n    }\n        //codes\n    }", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_break/#c-implementasi", 
            "text": "?php \n                $Mahasiswa =   array ( Andi , Zulfan , Rahmi , Dodi , Doni ); \n\n                foreach   ( $Mahasiswa   as   $value ) \n                { \n                if ( $value == Rahmi ) \n                { \n                break ; \n                }     \n                echo   $value ; \n                echo   br / ; \n                } \n    ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_catch/", 
            "text": "Keyword PHP Catch\n\n\n\n\nA. Penjelasan\n\n\nCatch yaitu berfungsi untuk melihat apakah function yang dieksekusi terjadi kesalahan atau error atau tidak. jika terjadi kesalahan maka akan di catch.Dan  catch akan  menunjukan error yang ingin kita beritahukan.\n\n\nB. Bentuk Syntax Umum\n\n\n   try {\n\n\n\n\n\n} catch (ExceptionType name) {\n\n\n} catch (ExceptionType name) {\n\n\n}\n\n\nC. Implementasi\n\n\n?php\n\n\ntry\n \n{\n\n\n$tes_angka\n \n=\n \n4\n;\n\n\n\nif\n(\n$tes_angka\n \n \n3\n)\n \n{\n\n\nthrow\n \nnew\n \nException\n(\nAngka yang dimasukkan tidak boleh lebih besar dari 3\n);\n\n\n};\n\n\n\n//Jika throw dijalankan, maka tulisan berikut tidak ditampilkan\n\n\necho\n \nJika kamu melihat pesan ini artinya angka yang dimasukkan adalah 3 atau lebih kecil dari 3\n;\n\n\n}\n \ncatch\n(\nException\n \n$e\n)\n \n{\n\n\necho\n \nPesan: \n \n.\n \n$e\n-\ngetMessage\n();\n\n\n};\n\n\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Catch"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_catch/#keyword-php-catch", 
            "text": "", 
            "title": "Keyword PHP Catch"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_catch/#a-penjelasan", 
            "text": "Catch yaitu berfungsi untuk melihat apakah function yang dieksekusi terjadi kesalahan atau error atau tidak. jika terjadi kesalahan maka akan di catch.Dan  catch akan  menunjukan error yang ingin kita beritahukan.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_catch/#b-bentuk-syntax-umum", 
            "text": "try {  } catch (ExceptionType name) {  } catch (ExceptionType name) {  }", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_catch/#c-implementasi", 
            "text": "?php  try   {  $tes_angka   =   4 ;  if ( $tes_angka     3 )   {  throw   new   Exception ( Angka yang dimasukkan tidak boleh lebih besar dari 3 );  };  //Jika throw dijalankan, maka tulisan berikut tidak ditampilkan  echo   Jika kamu melihat pesan ini artinya angka yang dimasukkan adalah 3 atau lebih kecil dari 3 ;  }   catch ( Exception   $e )   {  echo   Pesan:    .   $e - getMessage ();  };  ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_class/", 
            "text": "Keyword PHP Class\n\n\n\n\nA. Penjelasan\n\n\nDefinisi kelas dasar dimulai dengan kata kunci kelas, diikuti oleh nama kelas, diikuti oleh sepasang kurung kurawal yang menyertakan definisi properti dan metode yang termasuk dalam kelas.\n\n\nB. Bentuk Syntax Umum\n\n\nclass\n \nnama_kelas\n{\n\n\n\n}\n\n\n\n\n\n\nC. Implementasi\n\n\n?\nphp\n\n\nclass\n \nA\n\n\n{\n\n    \nfunction\n \nfoo\n()\n\n    \n{\n\n        \nif\n \n(\nisset\n(\n$this\n))\n \n{\n\n            \necho\n \n$this is defined (\n;\n\n            \necho\n \nget_class\n(\n$this\n);\n\n            \necho\n \n)\\n\n;\n\n        \n}\n \nelse\n \n{\n\n            \necho\n \n\\$this is not defined.\\n\n;\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\nclass\n \nB\n\n\n{\n\n    \nfunction\n \nbar\n()\n\n    \n{\n\n        \nA\n::\nfoo\n();\n\n    \n}\n\n\n}\n\n\n$a\n \n=\n \nnew\n \nA\n();\n\n\n$a\n-\nfoo\n();\n\n\n\nA\n::\nfoo\n();\n\n\n$b\n \n=\n \nnew\n \nB\n();\n\n\n$b\n-\nbar\n();\n\n\n\nB\n::\nbar\n();\n\n\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Class"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_class/#keyword-php-class", 
            "text": "", 
            "title": "Keyword PHP Class"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_class/#a-penjelasan", 
            "text": "Definisi kelas dasar dimulai dengan kata kunci kelas, diikuti oleh nama kelas, diikuti oleh sepasang kurung kurawal yang menyertakan definisi properti dan metode yang termasuk dalam kelas.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_class/#b-bentuk-syntax-umum", 
            "text": "class   nama_kelas {  }", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_class/#c-implementasi", 
            "text": "? php  class   A  { \n     function   foo () \n     { \n         if   ( isset ( $this ))   { \n             echo   $this is defined ( ; \n             echo   get_class ( $this ); \n             echo   )\\n ; \n         }   else   { \n             echo   \\$this is not defined.\\n ; \n         } \n     }  }  class   B  { \n     function   bar () \n     { \n         A :: foo (); \n     }  }  $a   =   new   A ();  $a - foo ();  A :: foo ();  $b   =   new   B ();  $b - bar ();  B :: bar ();  ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_continue/", 
            "text": "Keyword PHP Continue\n\n\n\n\nA. Penjelasan\n\n\nContinue berfungsi untuk menghentikan perulangan untuk 1 iterasi saja kemudian proses berikutnya akan dilanjutkan.\n\n\nB. Bentuk Syntax Umum\n\n\n  jump-statement:\n\n\n\n\n\ncontinue;\n\n\nC. Implementasi\n\n\n \n?php\n\n              \nfor\n(\n$i\n \n=\n \n0\n;\n \n$\n1\n5\n;\n \n$i\n++\n){\n\n              \nif\n(\n$i\n \n==\n \n2\n){\n\n              \ncontinue\n;\n\n              \n}\n\n              \necho\n(\nLoop Selesai\n);\n\n \n?\n\n\n\n\n\n\nD. Output\n\n\n  Nilai i : 0\n  Nilai i : 1\n  Nilai i : 3\n  Nilai i : 4\n  Loop Selesai", 
            "title": "Continue"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_continue/#keyword-php-continue", 
            "text": "", 
            "title": "Keyword PHP Continue"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_continue/#a-penjelasan", 
            "text": "Continue berfungsi untuk menghentikan perulangan untuk 1 iterasi saja kemudian proses berikutnya akan dilanjutkan.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_continue/#b-bentuk-syntax-umum", 
            "text": "jump-statement:  continue;", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_continue/#c-implementasi", 
            "text": "?php \n               for ( $i   =   0 ;   $ 1 5 ;   $i ++ ){ \n               if ( $i   ==   2 ){ \n               continue ; \n               } \n               echo ( Loop Selesai ); \n  ?", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_continue/#d-output", 
            "text": "Nilai i : 0\n  Nilai i : 1\n  Nilai i : 3\n  Nilai i : 4\n  Loop Selesai", 
            "title": "D. Output"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_doWhile/", 
            "text": "Keyword PHP Do While\n\n\n\n\nA. Penjelasan\n\n\nDo While digunakan untuk menjalankan suatu pernyataan lalu diuji apakah kondisi sudah bernilai benar, tapi jika bernilai salah maka pernyataan tidak dijalankan. Pada dasarnya perulangan do...while sama saja dengan perulangan while, hanya saja pada proses perulangan dengan while, seleksi berada di while yang letaknya di atas sementara pada perulangan do...while, seleksi while berada di bawah batas perulangan.Jadi dengan menggunakan struktur do...while sekurang-kurangnya akan terjadi satu kali perulangan.\n\n\nB. Bentuk Syntax Umum\n\n\n     do {\n      code to be executed;\n     } while (condition is true);\n\n\n\n\n\nC. Implementasi\n\n\n    \n?php\n\n    \n$a\n=\n1\n;\n\n    \ndo\n \n    \n{\necho\nDicetak dengan dowhile \n$a\n \nbr\n;\n\n    \n$a\n++\n;\n\n    \n}\nwhile\n(\n$a\n \n=\n  \n8\n)\n\n    \n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Do While"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_doWhile/#keyword-php-do-while", 
            "text": "", 
            "title": "Keyword PHP Do While"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_doWhile/#a-penjelasan", 
            "text": "Do While digunakan untuk menjalankan suatu pernyataan lalu diuji apakah kondisi sudah bernilai benar, tapi jika bernilai salah maka pernyataan tidak dijalankan. Pada dasarnya perulangan do...while sama saja dengan perulangan while, hanya saja pada proses perulangan dengan while, seleksi berada di while yang letaknya di atas sementara pada perulangan do...while, seleksi while berada di bawah batas perulangan.Jadi dengan menggunakan struktur do...while sekurang-kurangnya akan terjadi satu kali perulangan.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_doWhile/#b-bentuk-syntax-umum", 
            "text": "do {\n      code to be executed;\n     } while (condition is true);", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_doWhile/#c-implementasi", 
            "text": "?php \n     $a = 1 ; \n     do  \n     { echo Dicetak dengan dowhile  $a   br ; \n     $a ++ ; \n     } while ( $a   =    8 ) \n     ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_echo/", 
            "text": "Keyword PHP Echo\n\n\n\n\nA. Penjelasan\n\n\nEcho berfungsi untuk menampilkan satu atau lebih data string kedalam internet browser.Penggunaan fungsi echo() ini terkait erat dengan penggunaan variabel dengan tipe data string. Strings merupakan tipe data berupa karakter. Semua karakter dapat dimasukkan ke dalam tipe strings, termasuk angka, huruf, maupun karakter-karakter khusus seperti +, -, %, $, \n, dan lain-lain. Sedangkan sebuah variabel ditandai \ndengan tanda $ di depannya.\n\n\nB. Bentuk Syntax Umum\n\n\n             echo(string);\n             echo string\n             echo \n$string\n;\n\n\n\n\n\nC. Implementasi\n\n\n \n?php\n\n            \n$var1\n \n=\n \nWorld Web Design Q\n;\n\n            \necho\n \nAku Belajar PHP di \n$var1\n;\n\n \n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Echo"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_echo/#keyword-php-echo", 
            "text": "", 
            "title": "Keyword PHP Echo"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_echo/#a-penjelasan", 
            "text": "Echo berfungsi untuk menampilkan satu atau lebih data string kedalam internet browser.Penggunaan fungsi echo() ini terkait erat dengan penggunaan variabel dengan tipe data string. Strings merupakan tipe data berupa karakter. Semua karakter dapat dimasukkan ke dalam tipe strings, termasuk angka, huruf, maupun karakter-karakter khusus seperti +, -, %, $,  , dan lain-lain. Sedangkan sebuah variabel ditandai \ndengan tanda $ di depannya.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_echo/#b-bentuk-syntax-umum", 
            "text": "echo(string);\n             echo string\n             echo  $string ;", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_echo/#c-implementasi", 
            "text": "?php \n             $var1   =   World Web Design Q ; \n             echo   Aku Belajar PHP di  $var1 ; \n  ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_extends/", 
            "text": "Keyword PHP Extends\n\n\n\n\nA. Penjelasan\n\n\nExtends yaitu syntax yang digunakan untuk membuat pewarisan sifat pada class (inheritance).\n\n\nB. Bentuk Syntax Umum\n\n\nC. Implementasi\n\n\n?\nphp\n\n\n/* class turunan */\n\n\nclass\n \nHarga\n \nextends\n \nMobil\n \n{\n\n    \npublic\n \n$harga\n;\n   \n    \nfunction\n \nsetHarga\n(\n$harga\n){\n\n        \n$this\n-\nharga\n \n=\n \n$harga\n;\n\n    \n}\n   \n    \nfunction\n \ngetHarga\n(){\n\n        \nreturn\n \n$this\n-\nharga\n;\n\n    \n}\n\n\n}\n\n\n?\n\n\n\n?\nphp\n\n\n/* mengeksekusi Object */\n\n\n$product\n \n=\n \nnew\n \nHarga\n;\n\n\n$product\n-\nsetMerk\n(\nToyota\n);\n\n\n$product\n-\nsetHarga\n(\nRp 150 juta\n);\n\n\n\necho\n \nMerk  : \n.\n$product\n-\ngetMerk\n().\nbr /\n;\n\n\necho\n \nHarga : \n.\n$product\n-\ngetHarga\n();\n\n\n\n?\n\n\n\n?\nphp\n\n\n/* parent class */\n\n\nclass\n \nMobil\n \n{\n\n    \npublic\n \n$merk\n;\n   \n    \nfunction\n \nsetMerk\n(\n$merk\n){\n\n        \n$this\n-\nmerk\n \n=\n \n$merk\n;\n\n    \n}\n   \n    \nfunction\n \ngetMerk\n(){\n\n        \nreturn\n \n$this\n-\nmerk\n;\n\n    \n}\n\n\n}\n\n\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Extends"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_extends/#keyword-php-extends", 
            "text": "", 
            "title": "Keyword PHP Extends"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_extends/#a-penjelasan", 
            "text": "Extends yaitu syntax yang digunakan untuk membuat pewarisan sifat pada class (inheritance).", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_extends/#b-bentuk-syntax-umum", 
            "text": "", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_extends/#c-implementasi", 
            "text": "? php  /* class turunan */  class   Harga   extends   Mobil   { \n     public   $harga ;    \n     function   setHarga ( $harga ){ \n         $this - harga   =   $harga ; \n     }    \n     function   getHarga (){ \n         return   $this - harga ; \n     }  }  ?  ? php  /* mengeksekusi Object */  $product   =   new   Harga ;  $product - setMerk ( Toyota );  $product - setHarga ( Rp 150 juta );  echo   Merk  :  . $product - getMerk (). br / ;  echo   Harga :  . $product - getHarga ();  ?  ? php  /* parent class */  class   Mobil   { \n     public   $merk ;    \n     function   setMerk ( $merk ){ \n         $this - merk   =   $merk ; \n     }    \n     function   getMerk (){ \n         return   $this - merk ; \n     }  }  ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_for/", 
            "text": "Keyword PHP For\n\n\n\n\nA. Penjelasan\n\n\nFor merupakan salah satu bentuk fungsi perulangan, digunakan untuk melaksanakan pernyataan berulang kali terhadap sejumlah nilai yang telah ditetapkan (jumlah putaran harus ditetapkan terllebih dahulu).  \n\n\nB. Bentuk Syntax Umum\n\n\n    for (init counter; test counter; increment counter) {\n    code to be executed;\n    }\n\n\n\n\n\nC. Implementasi\n\n\n      \n?php\n \n      \nfor\n \n(\n$a\n=\n1\n;\n$a\n=\n \n10\n;\n$x\n++\n)\n \n{\n\n      \necho\n \nThe number is\n.\n \n$a\n.\nbr\n;\n\n      \n}\n \n      \n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "For"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_for/#keyword-php-for", 
            "text": "", 
            "title": "Keyword PHP For"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_for/#a-penjelasan", 
            "text": "For merupakan salah satu bentuk fungsi perulangan, digunakan untuk melaksanakan pernyataan berulang kali terhadap sejumlah nilai yang telah ditetapkan (jumlah putaran harus ditetapkan terllebih dahulu).", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_for/#b-bentuk-syntax-umum", 
            "text": "for (init counter; test counter; increment counter) {\n    code to be executed;\n    }", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_for/#c-implementasi", 
            "text": "?php  \n       for   ( $a = 1 ; $a =   10 ; $x ++ )   { \n       echo   The number is .   $a . br ; \n       }  \n       ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_foreach/", 
            "text": "Keyword PHP Foreach\n\n\n\n\nA. Penjelasan\n\n\nForeach merupakan perintah yang melakukan aksi perulangan data kondisi array yang telah dimasukkan ke dalam variabel yang sudah kita buat.\n\n\nB. Bentuk Syntax Umum\n\n\n    foreach ($array as $value) {\n    code to be executed;\n   }\n\n\n\n\n\nC. Implementasi\n\n\n   \n?php\n \n      \n$a\n=\narray\n(\nmangga\n,\nstrawberry\n,\npisang\n,\napel\n,\njeruk\n);\n\n      \nforeach\n \n(\n$a\n \nas\n \n$hasil\n){\n\n          \necho\n \n$hasil\n.\nbr\n;\n\n      \n}\n \n      \n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Foreach"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_foreach/#keyword-php-foreach", 
            "text": "", 
            "title": "Keyword PHP Foreach"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_foreach/#a-penjelasan", 
            "text": "Foreach merupakan perintah yang melakukan aksi perulangan data kondisi array yang telah dimasukkan ke dalam variabel yang sudah kita buat.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_foreach/#b-bentuk-syntax-umum", 
            "text": "foreach ($array as $value) {\n    code to be executed;\n   }", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_foreach/#c-implementasi", 
            "text": "?php  \n       $a = array ( mangga , strawberry , pisang , apel , jeruk ); \n       foreach   ( $a   as   $hasil ){ \n           echo   $hasil . br ; \n       }  \n       ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_function/", 
            "text": "Keyword PHP Function\n\n\n\n\nA. Penjelasan\n\n\nFunction yaitu kode program yang dirancang untuk menyelesaikan sebuah tugas tertentu, dan  merupakan bagian dari program utama. Kita dapat membuat fungsi sendiri, atau menggunakan fungsi yang dibuat oleh programmer lain.Argumen fungsi ditulis dalam  tanda kurung dan dapat berupa tipe data apapun baik string, array, object,boelan, dsb.., selain itu argumen juga dapat dikosongkan.\n\n\nB. Bentuk Syntax Umum\n\n\n         function nama_fungsi ($parameter1, $parameter2)\n         {\n          // kode program fungsi\n         return $nilai_akhir\n         }\n\n\n\n\n\nC. Implementasi\n\n\n \n?php\n\n        \n//pemanggilan fungsi\n\n          \necho\n \nLuas Lingkaran dengan jari-jari 7cm = \n.\nluas_lingkaran\n(\n7\n)\n.\ncm\n;\n\n\n        \n//pembuatan fungsi\n\n          \nfunction\n \nluas_lingkaran\n(\n$jari2\n)\n\n        \n{\n\n        \nreturn\n \nM_PI\n*\n$jari2\n*\n$jari2\n;\n\n        \n}\n\n \n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Function"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_function/#keyword-php-function", 
            "text": "", 
            "title": "Keyword PHP Function"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_function/#a-penjelasan", 
            "text": "Function yaitu kode program yang dirancang untuk menyelesaikan sebuah tugas tertentu, dan  merupakan bagian dari program utama. Kita dapat membuat fungsi sendiri, atau menggunakan fungsi yang dibuat oleh programmer lain.Argumen fungsi ditulis dalam  tanda kurung dan dapat berupa tipe data apapun baik string, array, object,boelan, dsb.., selain itu argumen juga dapat dikosongkan.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_function/#b-bentuk-syntax-umum", 
            "text": "function nama_fungsi ($parameter1, $parameter2)\n         {\n          // kode program fungsi\n         return $nilai_akhir\n         }", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_function/#c-implementasi", 
            "text": "?php \n         //pemanggilan fungsi \n           echo   Luas Lingkaran dengan jari-jari 7cm =  . luas_lingkaran ( 7 ) . cm ; \n\n         //pembuatan fungsi \n           function   luas_lingkaran ( $jari2 ) \n         { \n         return   M_PI * $jari2 * $jari2 ; \n         } \n  ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_if/", 
            "text": "Keyword PHP IF\n\n\n\n\nA. Penjelasan\n\n\nIf digunakan untuk mengeksekusi beberapa kode hanya jika kondisi tertentu adalah benar.\n\n\nB. Bentuk Syntax Umum\n\n\nif(syarat) {\nstatement\n}\n\n\n\n\n\nC. Implementasi\n\n\n?php\n\n    \n$hasilpenjumlahan\n=\n1\n+\n2\n;\n\n    \nif\n(\n$hasilpenjumlahan\n==\n3\n)\n \n{\n\n    \necho\n \nhasil benar\n;\n\n    \n}\n\n    \n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "If"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_if/#keyword-php-if", 
            "text": "", 
            "title": "Keyword PHP IF"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_if/#a-penjelasan", 
            "text": "If digunakan untuk mengeksekusi beberapa kode hanya jika kondisi tertentu adalah benar.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_if/#b-bentuk-syntax-umum", 
            "text": "if(syarat) {\nstatement\n}", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_if/#c-implementasi", 
            "text": "?php \n     $hasilpenjumlahan = 1 + 2 ; \n     if ( $hasilpenjumlahan == 3 )   { \n     echo   hasil benar ; \n     } \n     ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_ifElse/", 
            "text": "Keyword PHP If Else\n\n\n\n\nA. Penjelasan\n\n\nIf Else digunakan untuk mengeksekusi beberapa kode jika kondisi benar dan kode lain jika kondisi salah.\n\n\nB. Bentuk Syntax Umum\n\n\nif (condition)\ncode to be executed if condition is true;\nelse\ncode to be executed if condition is false;\n\n\n\n\n\nC. Implementasi\n\n\n?php\n\n\n$nilai\n=\n75\n;\n\n\n\nif\n(\n$nilai\n=\n55\n){\n\n    \n$nilai_huruf\n=\nD\n;\n\n\n}\nelseif\n(\n$nilai\n=\n65\n){\n\n    \n$nilai_huruf\n=\nC\n;\n\n\n}\nelseif\n(\n$nilai\n=\n80\n){\n\n    \n$nilai_huruf\n=\nB\n;\n\n\n}\nelseif\n(\n$nilai\n=\n100\n){\n\n    \n$nilai_huruf\n=\nA\n;\n\n\n}\nelse\n{\n\n    \n$nilai_huruf\n=\nTidak Valid\n;\n\n\n}\n\n\n\necho\nNilai : \n$nilai_huruf\n;\n\n\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "If else"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_ifElse/#keyword-php-if-else", 
            "text": "", 
            "title": "Keyword PHP If Else"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_ifElse/#a-penjelasan", 
            "text": "If Else digunakan untuk mengeksekusi beberapa kode jika kondisi benar dan kode lain jika kondisi salah.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_ifElse/#b-bentuk-syntax-umum", 
            "text": "if (condition)\ncode to be executed if condition is true;\nelse\ncode to be executed if condition is false;", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_ifElse/#c-implementasi", 
            "text": "?php  $nilai = 75 ;  if ( $nilai = 55 ){ \n     $nilai_huruf = D ;  } elseif ( $nilai = 65 ){ \n     $nilai_huruf = C ;  } elseif ( $nilai = 80 ){ \n     $nilai_huruf = B ;  } elseif ( $nilai = 100 ){ \n     $nilai_huruf = A ;  } else { \n     $nilai_huruf = Tidak Valid ;  }  echo Nilai :  $nilai_huruf ;  ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_ifElseifElse/", 
            "text": "Keyword PHP If Elseif Else\n\n\n\n\nA. Penjelasan\n\n\nIf..Elseif..Else digunakan untuk memilih salah satu dari banyak blok kode yang akan dieksekusi.\n\n\nB. Bentuk Syntax Umum\n\n\nif (condition)\ncode to be executed if condition is true;\nelseif (condition)\ncode to be executed if condition is true;\nelse\ncode to be executed if condition is false;\n\n\n\n\n\nC. Implementasi\n\n\n?php\n\n\n$nilai\n=\n75\n;\n\n\n\nif\n(\n$nilai\n=\n55\n){\n\n    \n$nilai_huruf\n=\nD\n;\n\n\n}\nelseif\n(\n$nilai\n=\n65\n){\n\n    \n$nilai_huruf\n=\nC\n;\n\n\n}\nelseif\n(\n$nilai\n=\n80\n){\n\n    \n$nilai_huruf\n=\nB\n;\n\n\n}\nelseif\n(\n$nilai\n=\n100\n){\n\n    \n$nilai_huruf\n=\nA\n;\n\n\n}\nelse\n{\n\n    \n$nilai_huruf\n=\nTidak Valid\n;\n\n\n}\n\n\n\necho\nNilai : \n$nilai_huruf\n;\n\n\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "If elseif else"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_ifElseifElse/#keyword-php-if-elseif-else", 
            "text": "", 
            "title": "Keyword PHP If Elseif Else"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_ifElseifElse/#a-penjelasan", 
            "text": "If..Elseif..Else digunakan untuk memilih salah satu dari banyak blok kode yang akan dieksekusi.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_ifElseifElse/#b-bentuk-syntax-umum", 
            "text": "if (condition)\ncode to be executed if condition is true;\nelseif (condition)\ncode to be executed if condition is true;\nelse\ncode to be executed if condition is false;", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_ifElseifElse/#c-implementasi", 
            "text": "?php  $nilai = 75 ;  if ( $nilai = 55 ){ \n     $nilai_huruf = D ;  } elseif ( $nilai = 65 ){ \n     $nilai_huruf = C ;  } elseif ( $nilai = 80 ){ \n     $nilai_huruf = B ;  } elseif ( $nilai = 100 ){ \n     $nilai_huruf = A ;  } else { \n     $nilai_huruf = Tidak Valid ;  }  echo Nilai :  $nilai_huruf ;  ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_include/", 
            "text": "Keyword PHP Include\n\n\n\n\nA. Penjelasan\n\n\nPerintah ini digunakan untuk menggabungkan suatu script PHP atau file dengan script pemanggilnya. Perintah include() akan memanggil selalu \nakan melakukan evaluasi kembali script yang ada yang dispesifikasikan dalam perintah tersebut.\n\n\nB. Bentuk Syntax Umum\n\n\n?php\n\n\n// Bentuk fungsi\n\n\ninclude\n \n(\nincludes/header.php\n);\n\n\n\n// Bentuk statement\n\n\ninclude\n \nincludes/header.html\n;\n\n\n\n\n\n\nC. Implementasi\n\n\n1. Buat file header.php\n\n     \n!DOCTYPE html\n\n\nhtml\n\n\nhead\n\n \nmeta\n \ncharset=\nutf-8\n\n \ntitle\nContoh Require dan Include\n/title\n\n \nh1\nini header.php\n/h1\n\n \nstyle\n \ntype=\ntext/css\n\n  body{\n   background-color:#eee;\n   text-align:center;\n   font-family:Calibri;\n   font-size:18px;\n  } \n \n/style\n\n\n/head\n\n\nbody\n\n\n2. Buat file footer.php\n\n    \nfooter\n\n  \nh1\nIni adalah file footer.php\n/h1\n\n \n/footer\n\n\n/body\n\n\n/html\n\n\n3. Buat file include.php\n\n    \n?php\n \ninclude\n \nheader.php\n;\n?\n\n\nhr/\n\n\n!-- ini isi dari file include.php --\n\n \nh1\nIni Adalah Isi\n/h1\n\n \np\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam nulla turpis, pulvinar eu dui gravida, mattis blandit odio. Aliquam      sit amet ex ullamcorper, consectetur ipsum quis, mattis tortor.\n/p\n\n\nhr/\n\n\n!-- ini file footer.php --\n\n\n?php\n \ninclude\n \nfooter.php\n;\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Include"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_include/#keyword-php-include", 
            "text": "", 
            "title": "Keyword PHP Include"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_include/#a-penjelasan", 
            "text": "Perintah ini digunakan untuk menggabungkan suatu script PHP atau file dengan script pemanggilnya. Perintah include() akan memanggil selalu \nakan melakukan evaluasi kembali script yang ada yang dispesifikasikan dalam perintah tersebut.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_include/#b-bentuk-syntax-umum", 
            "text": "?php  // Bentuk fungsi  include   ( includes/header.php );  // Bentuk statement  include   includes/header.html ;", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_include/#c-implementasi", 
            "text": "1. Buat file header.php\n\n      !DOCTYPE html  html  head \n  meta   charset= utf-8 \n  title Contoh Require dan Include /title \n  h1 ini header.php /h1 \n  style   type= text/css \n  body{\n   background-color:#eee;\n   text-align:center;\n   font-family:Calibri;\n   font-size:18px;\n  } \n  /style  /head  body \n\n2. Buat file footer.php\n\n     footer \n   h1 Ini adalah file footer.php /h1 \n  /footer  /body  /html \n\n3. Buat file include.php\n\n     ?php   include   header.php ; ?  hr/  !-- ini isi dari file include.php -- \n  h1 Ini Adalah Isi /h1 \n  p Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam nulla turpis, pulvinar eu dui gravida, mattis blandit odio. Aliquam      sit amet ex ullamcorper, consectetur ipsum quis, mattis tortor. /p  hr/  !-- ini file footer.php --  ?php   include   footer.php ; ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_isset/", 
            "text": "Keyword PHP Isset\n\n\n\n\nA. Penjelasan\n\n\nIsset digunakan untuk menyatakan variabel yang sudah diset ataupun tidak. Jika variabel sudah diset maka variavel akan mengembalikan nilai true, sebaliknya akan bernilai false(memesan tempat di memori)\n\n\nB. Bentuk Syntax Umum\n\n\nC. Implementasi\n\n\n?php\n \n \n//memeriksa suatu varible ada atau tidak  \n\n \n$orang\n \n=\n \n;\n  \n \nif\n \n(\nisset\n(\n$orang\n)){\n  \n      \necho\n \nVariabel ada isi nya gan\n;\n  \n      \n}\nelse\n{\n  \n       \necho\n \n Variabel Nggak ada isi nya\n;\n  \n       \n}\n  \n \n// fungsi isset mengecek ada variable nya gan  \n\n \n// coba ganti $orang yg di dalem kurung ganti $orangx  \n\n \n// nilai yg jadi FALSE (false itu yg bawah)  \n\n \n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Isset"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_isset/#keyword-php-isset", 
            "text": "", 
            "title": "Keyword PHP Isset"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_isset/#a-penjelasan", 
            "text": "Isset digunakan untuk menyatakan variabel yang sudah diset ataupun tidak. Jika variabel sudah diset maka variavel akan mengembalikan nilai true, sebaliknya akan bernilai false(memesan tempat di memori)", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_isset/#b-bentuk-syntax-umum", 
            "text": "", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_isset/#c-implementasi", 
            "text": "?php  \n  //memeriksa suatu varible ada atau tidak   \n  $orang   =   ;   \n  if   ( isset ( $orang )){   \n       echo   Variabel ada isi nya gan ;   \n       } else {   \n        echo    Variabel Nggak ada isi nya ;   \n        }   \n  // fungsi isset mengecek ada variable nya gan   \n  // coba ganti $orang yg di dalem kurung ganti $orangx   \n  // nilai yg jadi FALSE (false itu yg bawah)   \n  ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_or/", 
            "text": "Keyword PHP Isset\n\n\n\n\nA. Penjelasan\n\n\nOR akan menghasilkan nilai benar jika kedua kondisi pembanding bernilai benar, juga akan bernilai benar meskipun salah satu pembanding bernilai benar / satu\n\n\nB. Bentuk Syntax Umum\n\n\n$a or $b = BENAR jika salah satu $a atau $b adalah TRUE.\n\n\n\n\n\nC. Implementasi\n\n\n?php\n\n    \necho\n \nbr\n;\n\n    \n$data1\n \n=\n \ntrue\n;\n\n    \n$data2\n \n=\n \ntrue\n;\n\n    \n$data3\n \n=\n \nfalse\n;\n\n    \necho\n \n(\n\\$\ndata1 = True\nBR\n);\n\n    \necho\n \n(\n\\$\ndata2 = True\nBR\n);\n\n    \necho\n \n(\n\\$\ndata3 = False\nBR\nBR\n);\n\n    \n$logika\n \n=\n \n$data1\n \n \n$data2\n;\n\n    \necho\n \n(\n\\$\nlogika = \n\\$\ndata1 \n \n\\$\ndata2 \nBR\n)\n  \n;\n\n    \nprintf\n \n(\n \n(sehingga nilai \n\\$\nlogika = %d) \nBR\nBR\n,\n \n$logika\n);\n\n    \n$logika\n \n=\n \n$data1\n \n||\n \n$data3\n;\n\n    \necho\n \n(\n\\$\nlogika = \n\\$\ndata1 || \n\\$\ndata3 \nBR\n)\n   \n;\n\n    \nprintf\n \n(\n \n (sehingga nilai \n\\$\nlogika = %d) \nBR\nBR\n,\n \n$logika\n);\n\n    \n$logika\n \n=\n \n$data2\n \nXor\n \n$data1\n;\n\n    \necho\n \n(\n\\$\nlogika = \n\\$\ndata2 Xor  \n\\$\ndata1 \nBR\n)\n  \n;\n\n    \nprintf\n \n(\n (karena kedua kondisi sama, maka nilai \n\\$\nlogika = %d) \nBR\nBR\n,\n      \n    \n$logika\n);\n\n    \n$data1\n \n=\n \n!\n$data\n;\n\n    \necho\n \n(\n! \n\\$\ndata1 \nBR\n);\n\n    \nprintf\n \n(\n (setelah nilai \n\\$\ndata1 dikenai logika NOT (!), sehingga nilai    \n\n\n    \n\\$\ndata1 = %d)\n,\n \n$data1\n);\n\n\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Or"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_or/#keyword-php-isset", 
            "text": "", 
            "title": "Keyword PHP Isset"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_or/#a-penjelasan", 
            "text": "OR akan menghasilkan nilai benar jika kedua kondisi pembanding bernilai benar, juga akan bernilai benar meskipun salah satu pembanding bernilai benar / satu", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_or/#b-bentuk-syntax-umum", 
            "text": "$a or $b = BENAR jika salah satu $a atau $b adalah TRUE.", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_or/#c-implementasi", 
            "text": "?php \n     echo   br ; \n     $data1   =   true ; \n     $data2   =   true ; \n     $data3   =   false ; \n     echo   ( \\$ data1 = True BR ); \n     echo   ( \\$ data2 = True BR ); \n     echo   ( \\$ data3 = False BR BR ); \n     $logika   =   $data1     $data2 ; \n     echo   ( \\$ logika =  \\$ data1    \\$ data2  BR )    ; \n     printf   (   (sehingga nilai  \\$ logika = %d)  BR BR ,   $logika ); \n     $logika   =   $data1   ||   $data3 ; \n     echo   ( \\$ logika =  \\$ data1 ||  \\$ data3  BR )     ; \n     printf   (    (sehingga nilai  \\$ logika = %d)  BR BR ,   $logika ); \n     $logika   =   $data2   Xor   $data1 ; \n     echo   ( \\$ logika =  \\$ data2 Xor   \\$ data1  BR )    ; \n     printf   (  (karena kedua kondisi sama, maka nilai  \\$ logika = %d)  BR BR ,       \n     $logika ); \n     $data1   =   ! $data ; \n     echo   ( !  \\$ data1  BR ); \n     printf   (  (setelah nilai  \\$ data1 dikenai logika NOT (!), sehingga nilai           \\$ data1 = %d) ,   $data1 );  ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_print/", 
            "text": "Keyword PHP Print\n\n\n\n\nA. Penjelasan\n\n\nPrint memiliki fungsi yang sama dengan echo, namun print hanya mampu menampilkan data tunggal (hanya satu data).\n\n\nB. Bentuk Syntax Umum\n\n\nC. Implementasi\n\n\n?php\n\n\nprint\n \n(\nSelamat datang,samapai jumpa \n/br\n);\n\n\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Print"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_print/#keyword-php-print", 
            "text": "", 
            "title": "Keyword PHP Print"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_print/#a-penjelasan", 
            "text": "Print memiliki fungsi yang sama dengan echo, namun print hanya mampu menampilkan data tunggal (hanya satu data).", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_print/#b-bentuk-syntax-umum", 
            "text": "", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_print/#c-implementasi", 
            "text": "?php  print   ( Selamat datang,samapai jumpa  /br );  ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_private/", 
            "text": "Keyword PHP Private\n\n\n\n\nA. Penjelasan\n\n\nKetika sebuah property atau method dinyatakan private maka tidak dapat diakses diluar class dan tidak dapat diakses oleh class turunan hanya bisa mengakses class itu sendiri\n\n\nB. Bentuk Syntax Umum\n\n\nC. Implementasi\n\n\n?\nphp\n\n\n\n// buat class komputer\n\n\nclass\n \nkomputer\n \n{\n\n\n   \n// property dengan hak akses protected\n\n   \nprivate\n \n$jenis_processor\n \n=\n \nIntel Core i7-4790 3.6Ghz\n;\n\n\n   \npublic\n \nfunction\n \ntampilkan_processor() {\n\n     \nreturn\n \n$this\n-\njenis_processor\n;\n\n   \n}\n\n\n}\n\n\n\n// buat class laptop\n\n\nclass\n \nlaptop\n \nextends\n \nkomputer\n{\n\n\n   \npublic\n \nfunction\n \ntampilkan_processor() {\n\n     \nreturn\n \n$this\n-\njenis_processor\n;\n\n   \n}\n\n\n}\n\n\n\n// buat objek dari class laptop (instansiasi)\n\n\n$komputer_baru\n \n=\n \nnew\n \nkomputer\n();\n\n\n$laptop_baru\n \n=\n \nnew\n \nlaptop\n();\n\n\n\n// jalankan method dari class komputer\n\n\necho\n \n$komputer_baru\n-\ntampilkan_processor\n();\n \n// \nIntel Core i7-4790 3.6Ghz\n\n\n\n// jalankan method dari class laptop (error)\n\n\necho\n \n$laptop_baru\n-\ntampilkan_processor\n();\n\n\n// Notice: Undefined property: laptop::$jenis_processor\n\n\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Private"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_private/#keyword-php-private", 
            "text": "", 
            "title": "Keyword PHP Private"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_private/#a-penjelasan", 
            "text": "Ketika sebuah property atau method dinyatakan private maka tidak dapat diakses diluar class dan tidak dapat diakses oleh class turunan hanya bisa mengakses class itu sendiri", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_private/#b-bentuk-syntax-umum", 
            "text": "", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_private/#c-implementasi", 
            "text": "? php  // buat class komputer  class   komputer   { \n\n    // property dengan hak akses protected \n    private   $jenis_processor   =   Intel Core i7-4790 3.6Ghz ; \n\n    public   function   tampilkan_processor() { \n      return   $this - jenis_processor ; \n    }  }  // buat class laptop  class   laptop   extends   komputer { \n\n    public   function   tampilkan_processor() { \n      return   $this - jenis_processor ; \n    }  }  // buat objek dari class laptop (instansiasi)  $komputer_baru   =   new   komputer ();  $laptop_baru   =   new   laptop ();  // jalankan method dari class komputer  echo   $komputer_baru - tampilkan_processor ();   //  Intel Core i7-4790 3.6Ghz  // jalankan method dari class laptop (error)  echo   $laptop_baru - tampilkan_processor ();  // Notice: Undefined property: laptop::$jenis_processor  ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_protected/", 
            "text": "Keyword PHP Protected\n\n\n\n\nA. Penjelasan\n\n\nBerbeda dengan public, protected hanya memperbolehkan suatu property atau method yang dinyatakan protected diakses hanya di dalam class tersebut dan class turunannya\n\n\nB. Bentuk Syntax Umum\n\n\nC. Implementasi\n\n\n?\nphp\n\n\n\n// buat class komputer\n\n\nclass\n \nkomputer\n{\n\n\n   \n// property dengan hak akses protected\n\n   \nprotected\n \n$jenis_processor\n \n=\n \nIntel Core i7-4790 3.6Ghz\n;\n\n\n}\n\n\n\n// buat class laptop\n\n\nclass\n \nlaptop\n \nextends\n \nkomputer\n{\n\n   \npublic\n \nfunction\n \ntampilkan_processor() {\n\n     \nreturn\n \n$this\n-\njenis_processor\n;\n\n   \n}\n\n\n}\n\n\n\n// buat objek dari class laptop (instansiasi)\n\n\n$laptop_baru\n \n=\n \nnew\n \nlaptop\n();\n\n\n\n// jalankan method\n\n\necho\n \n$laptop_baru\n-\ntampilkan_processor\n();\n \n// \nIntel Core i7-4790 3.6Ghz\n\n\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Protected"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_protected/#keyword-php-protected", 
            "text": "", 
            "title": "Keyword PHP Protected"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_protected/#a-penjelasan", 
            "text": "Berbeda dengan public, protected hanya memperbolehkan suatu property atau method yang dinyatakan protected diakses hanya di dalam class tersebut dan class turunannya", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_protected/#b-bentuk-syntax-umum", 
            "text": "", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_protected/#c-implementasi", 
            "text": "? php  // buat class komputer  class   komputer { \n\n    // property dengan hak akses protected \n    protected   $jenis_processor   =   Intel Core i7-4790 3.6Ghz ;  }  // buat class laptop  class   laptop   extends   komputer { \n    public   function   tampilkan_processor() { \n      return   $this - jenis_processor ; \n    }  }  // buat objek dari class laptop (instansiasi)  $laptop_baru   =   new   laptop ();  // jalankan method  echo   $laptop_baru - tampilkan_processor ();   //  Intel Core i7-4790 3.6Ghz  ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_public/", 
            "text": "Keyword PHP Public\n\n\n\n\nA. Penjelasan\n\n\nKetika suatu property ataupun method dinyatakan public maka akan berlaku property ataupun method tersebut dapat diakses dari luar class dan dapat diakses oleh class turunan.\n\n\nB. Bentuk Syntax Umum\n\n\nC. Implementasi\n\n\n?\nphp\n\n\n\n// buat class laptop\n\n\nclass\n \nlaptop\n \n{\n\n\n   \n// buat public property\n\n   \npublic\n \n$pemilik\n;\n\n\n   \n// buat public method\n\n   \npublic\n \nfunction\n \nhidupkan_laptop() {\n\n     \nreturn\n \nHidupkan Laptop\n;\n\n   \n}\n\n\n}\n\n\n\n// buat objek dari class laptop (instansiasi)\n\n\n$laptop_anto\n \n=\n \nnew\n \nlaptop\n();\n\n\n\n// set property\n\n\n$laptop_anto\n-\npemilik\n=\nAnto\n;\n\n\n\n// tampilkan property\n\n\necho\n \n$laptop_anto\n-\npemilik\n;\n \n// Anto\n\n\n\n// tampilkan method\n\n\necho\n \n$laptop_anto\n-\nhidupkan_laptop\n();\n \n// \nHidupkan Laptop\n\n\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Public"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_public/#keyword-php-public", 
            "text": "", 
            "title": "Keyword PHP Public"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_public/#a-penjelasan", 
            "text": "Ketika suatu property ataupun method dinyatakan public maka akan berlaku property ataupun method tersebut dapat diakses dari luar class dan dapat diakses oleh class turunan.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_public/#b-bentuk-syntax-umum", 
            "text": "", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_public/#c-implementasi", 
            "text": "? php  // buat class laptop  class   laptop   { \n\n    // buat public property \n    public   $pemilik ; \n\n    // buat public method \n    public   function   hidupkan_laptop() { \n      return   Hidupkan Laptop ; \n    }  }  // buat objek dari class laptop (instansiasi)  $laptop_anto   =   new   laptop ();  // set property  $laptop_anto - pemilik = Anto ;  // tampilkan property  echo   $laptop_anto - pemilik ;   // Anto  // tampilkan method  echo   $laptop_anto - hidupkan_laptop ();   //  Hidupkan Laptop  ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_require/", 
            "text": "Keyword PHP Require\n\n\n\n\nA. Penjelasan\n\n\nPerintah ini digunakan untuk menggabungkan suatu script PHP atau teks dari file lain dengan script PHP yang memanggilnya. Script atau file\n\nyang digabung tidak harus berisi script atau kode program PHP. Apabila script atau file yang digabungkan itu berupa script PHP, maka PHP akan mengevaluasi dan menjalankannya.\n\n\nB. Bentuk Syntax Umum\n\n\n?php\n\n\n// Panggil file function looping.php\n\n\n//dengan require()\n\n\n\nrequire\n \n(\n_functtion_looping.php\n\n\n\n\n\n\nC. Implementasi\n\n\n 1. Buat file header.php\n\n     \n!DOCTYPE html\n\n\nhtml\n\n\nhead\n\n \nmeta\n \ncharset=\nutf-8\n\n \ntitle\nContoh Require dan Include\n/title\n\n \nh1\nini header.php\n/h1\n\n \nstyle\n \ntype=\ntext/css\n\n  body{\n   background-color:#eee;\n   text-align:center;\n   font-family:Calibri;\n   font-size:18px;\n  } \n \n/style\n\n\n/head\n\n\nbody\n\n\n2. Buat file footer.php\n\n    \nfooter\n\n  \nh1\nIni adalah file footer.php\n/h1\n\n \n/footer\n\n\n/body\n\n\n/html\n\n\n3. Buat file require.php\n\n        \n!-- ini file header.php --\n\n\n?php\n \nrequire\n(\nheader.php\n);\n?\n\n\nhr/\n\n\n!-- ini isi dari file require.php --\n\n \nh1\nIni Adalah Isi\n/h1\n\n \np\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam nulla turpis, pulvinar eu dui gravida, mattis blandit odio. Aliquam sit amet ex ullamcorper, consectetur ipsum quis, mattis tortor.\n/p\n\n\nhr/\n\n\n!-- ini file footer.php --\n\n\n?php\n \nrequire\n(\nfooter.php\n);\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Require"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_require/#keyword-php-require", 
            "text": "", 
            "title": "Keyword PHP Require"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_require/#a-penjelasan", 
            "text": "Perintah ini digunakan untuk menggabungkan suatu script PHP atau teks dari file lain dengan script PHP yang memanggilnya. Script atau file \nyang digabung tidak harus berisi script atau kode program PHP. Apabila script atau file yang digabungkan itu berupa script PHP, maka PHP akan mengevaluasi dan menjalankannya.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_require/#b-bentuk-syntax-umum", 
            "text": "?php  // Panggil file function looping.php  //dengan require()  require   ( _functtion_looping.php", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_require/#c-implementasi", 
            "text": "1. Buat file header.php\n\n      !DOCTYPE html  html  head \n  meta   charset= utf-8 \n  title Contoh Require dan Include /title \n  h1 ini header.php /h1 \n  style   type= text/css \n  body{\n   background-color:#eee;\n   text-align:center;\n   font-family:Calibri;\n   font-size:18px;\n  } \n  /style  /head  body \n\n2. Buat file footer.php\n\n     footer \n   h1 Ini adalah file footer.php /h1 \n  /footer  /body  /html \n\n3. Buat file require.php\n\n         !-- ini file header.php --  ?php   require ( header.php ); ?  hr/  !-- ini isi dari file require.php -- \n  h1 Ini Adalah Isi /h1 \n  p Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam nulla turpis, pulvinar eu dui gravida, mattis blandit odio. Aliquam sit amet ex ullamcorper, consectetur ipsum quis, mattis tortor. /p  hr/  !-- ini file footer.php --  ?php   require ( footer.php ); ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_requireOnce/", 
            "text": "Keyword PHP Require_Once\n\n\n\n\nA. Penjelasan\n\n\nPada prinsipnya require_once() sama dengan require() akan tetapi perbedaannya adalah dengan menggunakan require_once(), maka jika terjadi duplikasi nama atau pemanggilan suatu nama fungsi dapat dihindari. PHP dapat dipaksa untuk menggunakan nama fungsi yang telah ada sebelumnya pada include() atau require() yang pertama.\n\n\nB. Bentuk Syntax Umum\n\n\nrequire_once(\nnama_file_beserta_path\n);  \natau  \nrequire_once \nnama_file_beserta_path\n;\n\n\n\n\n\nC. Implementasi\n\n\n?php\n   \n \nrequire_once\n(\ncontoh_require_once.php\n);\n   \n \nrequire_once\n(\ncontoh_require_once.php\n);\n   \n \nrequire_once\n(\nfile_fiktif.php\n);\n   \n \necho\n \nscript dibawah file fiktif\n;\n  \n\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Require once"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_requireOnce/#keyword-php-require_once", 
            "text": "", 
            "title": "Keyword PHP Require_Once"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_requireOnce/#a-penjelasan", 
            "text": "Pada prinsipnya require_once() sama dengan require() akan tetapi perbedaannya adalah dengan menggunakan require_once(), maka jika terjadi duplikasi nama atau pemanggilan suatu nama fungsi dapat dihindari. PHP dapat dipaksa untuk menggunakan nama fungsi yang telah ada sebelumnya pada include() atau require() yang pertama.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_requireOnce/#b-bentuk-syntax-umum", 
            "text": "require_once( nama_file_beserta_path );  \natau  \nrequire_once  nama_file_beserta_path ;", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_requireOnce/#c-implementasi", 
            "text": "?php    \n  require_once ( contoh_require_once.php );    \n  require_once ( contoh_require_once.php );    \n  require_once ( file_fiktif.php );    \n  echo   script dibawah file fiktif ;    ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_return/", 
            "text": "Keyword PHP Return\n\n\n\n\nA. Penjelasan\n\n\nReturn yaitu perintah khusus untuk fungsi, dimana kata return menginstruksikan kepada PHP bahwa pemrosesan fungsi telah selesai.\n\n\nB. Bentuk Syntax Umum\n\n\nC. Implementasi\n\n\n?\nphp\n\n\n//pembuatan fungsi\n\n\nfunction\n \nperkalian\n(\n$angka1\n,\n \n$angka2\n)\n\n\n{\n\n   \n$a\n=\n \n$angka1\n;\n\n   \n$b\n=\n \n$angka2\n;\n\n   \n$hasil\n=\n \n$a\n*\n$b\n;\n\n   \nreturn\n \n$hasil\n;\n\n\n}\n\n\n\n//pemanggilan fungsi\n\n\n$hasil\n=\nperkalian\n(\n4\n,\n5\n);\n\n\necho\n \nPerkalian 4 x 5 adalah $hasil\n;\n\n\necho\n \nbr /\n;\n\n\necho\n \nPerkalian 7 x 2 adalah \n.\nperkalian\n(\n7\n,\n2\n);\n\n\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Return"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_return/#keyword-php-return", 
            "text": "", 
            "title": "Keyword PHP Return"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_return/#a-penjelasan", 
            "text": "Return yaitu perintah khusus untuk fungsi, dimana kata return menginstruksikan kepada PHP bahwa pemrosesan fungsi telah selesai.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_return/#b-bentuk-syntax-umum", 
            "text": "", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_return/#c-implementasi", 
            "text": "? php  //pembuatan fungsi  function   perkalian ( $angka1 ,   $angka2 )  { \n    $a =   $angka1 ; \n    $b =   $angka2 ; \n    $hasil =   $a * $b ; \n    return   $hasil ;  }  //pemanggilan fungsi  $hasil = perkalian ( 4 , 5 );  echo   Perkalian 4 x 5 adalah $hasil ;  echo   br / ;  echo   Perkalian 7 x 2 adalah  . perkalian ( 7 , 2 );  ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_static/", 
            "text": "Keyword PHP Static\n\n\n\n\nA. Penjelasan\n\n\nJika kita mendeklarasikan function atau variable sebagai static berarti kita tidak perlu membuat instance untuk mengakses function atau variable \ntersebut.Karena metode statis dapat dipanggil tanpa turunan dari objek yang dibuat, variabel pseudo-$ ini tidak tersedia di dalam metode yang dinyatakan statis.\n\n\nB. Bentuk Syntax Umum\n\n\n// static property\npublic static $harga_beli;\n\n// static method\npublic static function beli_laptop() {\n//...isi method\n}\n\n\n\n\n\nC. Implementasi\n\n\n    \n?\nphp\n\n\n// buat class laptop\n\n\nclass\n \nlaptop\n \n{\n\n   \npublic\n \n$merk\n;\n\n   \npublic\n \n$pemilik\n;\n\n\n   \n// static property\n\n   \npublic\n \nstatic\n \n$harga_beli\n;\n\n\n   \n//static method\n\n   \npublic\n \nstatic\n \nfunction\n \nbeli_laptop() {\n\n     \nreturn\n \nBeli Laptop\n;\n\n   \n}\n\n\n}\n\n\n\n// set static property\n\n\nlaptop\n::\n$harga_beli\n=\n4000000\n;\n\n\n\n// get static property\n\n\necho\n \nharga beli : Rp\n.\nlaptop\n::\n$harga_beli\n;\n\n\n\necho\n \nbr /\n;\n\n\n\n// panggil static method\n\n\necho\n \nlaptop\n::\nbeli_laptop\n();\n\n\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Static"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_static/#keyword-php-static", 
            "text": "", 
            "title": "Keyword PHP Static"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_static/#a-penjelasan", 
            "text": "Jika kita mendeklarasikan function atau variable sebagai static berarti kita tidak perlu membuat instance untuk mengakses function atau variable \ntersebut.Karena metode statis dapat dipanggil tanpa turunan dari objek yang dibuat, variabel pseudo-$ ini tidak tersedia di dalam metode yang dinyatakan statis.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_static/#b-bentuk-syntax-umum", 
            "text": "// static property\npublic static $harga_beli;\n\n// static method\npublic static function beli_laptop() {\n//...isi method\n}", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_static/#c-implementasi", 
            "text": "? php  // buat class laptop  class   laptop   { \n    public   $merk ; \n    public   $pemilik ; \n\n    // static property \n    public   static   $harga_beli ; \n\n    //static method \n    public   static   function   beli_laptop() { \n      return   Beli Laptop ; \n    }  }  // set static property  laptop :: $harga_beli = 4000000 ;  // get static property  echo   harga beli : Rp . laptop :: $harga_beli ;  echo   br / ;  // panggil static method  echo   laptop :: beli_laptop ();  ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_switch/", 
            "text": "Keyword PHP Switch\n\n\n\n\nA. Penjelasan\n\n\nSwitch yaitu sebuah stuktur percabangan yang akan memeriksa suatu variabel, lalu menjalankan perintah-perintah yang sesuai dengan kondisi yang mungkin terjadi untuk variabel tersebut.\n\n\nB. Bentuk Syntax Umum\n\n\n?php\n \n\nswitch\n \n(\nvariable\n)\n \n\n{\n \n    \ncase\n \nnilai1\n:\n \n        \n# pernyataan... \n\n        \nbreak\n;\n \n    \ncase\n \nnilai2\n:\n \n        \n# pernyataan... \n\n        \nbreak\n;\n \n    \ndefault\n:\n \n        \n# pernyataan... \n\n        \nbreak\n;\n \n\n}\n \n\n?\n\n\n\n\n\n\nC. Implementasi\n\n\n?php\n \n\n$angka\n \n=\n \n3\n;\n\n\nswitch\n \n(\n$angka\n)\n \n{\n\n    \ncase\n \n1\n:\n\n        \necho\n \nIsi variabel angka adalah satu\n;\n\n        \nbreak\n;\n\n    \ncase\n \n2\n:\n\n        \necho\n \nIsi variabel angka adalah dua\n;\n\n        \nbreak\n;\n\n    \ncase\n \n3\n:\n\n        \necho\n \nIsi variabel angka adalah tiga\n;\n\n        \nbreak\n;\n\n    \ncase\n \n4\n:\n\n        \necho\n \nIsi variabel angka adalah empat\n;\n\n        \nbreak\n;\n\n    \ncase\n \n5\n:\n\n        \necho\n \nIsi variabel angka adalah lima\n;\n\n        \nbreak\n;\n\n    \ncase\n \n6\n:\n\n        \necho\n \nIsi variabel angka adalah enam\n;\n\n        \nbreak\n;\n\n    \ndefault\n:\n\n        \necho\n \nIsi variabel tidak di temukan\n;\n\n        \nbreak\n;\n\n\n}\n\n\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Switch"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_switch/#keyword-php-switch", 
            "text": "", 
            "title": "Keyword PHP Switch"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_switch/#a-penjelasan", 
            "text": "Switch yaitu sebuah stuktur percabangan yang akan memeriksa suatu variabel, lalu menjalankan perintah-perintah yang sesuai dengan kondisi yang mungkin terjadi untuk variabel tersebut.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_switch/#b-bentuk-syntax-umum", 
            "text": "?php   switch   ( variable )   {  \n     case   nilai1 :  \n         # pernyataan...  \n         break ;  \n     case   nilai2 :  \n         # pernyataan...  \n         break ;  \n     default :  \n         # pernyataan...  \n         break ;   }   ?", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_switch/#c-implementasi", 
            "text": "?php   $angka   =   3 ;  switch   ( $angka )   { \n     case   1 : \n         echo   Isi variabel angka adalah satu ; \n         break ; \n     case   2 : \n         echo   Isi variabel angka adalah dua ; \n         break ; \n     case   3 : \n         echo   Isi variabel angka adalah tiga ; \n         break ; \n     case   4 : \n         echo   Isi variabel angka adalah empat ; \n         break ; \n     case   5 : \n         echo   Isi variabel angka adalah lima ; \n         break ; \n     case   6 : \n         echo   Isi variabel angka adalah enam ; \n         break ; \n     default : \n         echo   Isi variabel tidak di temukan ; \n         break ;  }  ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_try/", 
            "text": "Keyword PHP Try\n\n\n\n\nA. Penjelasan\n\n\nTry yaitu program yang akan dijalankan dan akan ditangkap eksepsinya jika terjadi kesalahan.\n\n\nB. Bentuk Syntax Umum\n\n\nC. Implementasi\n\n\n?php\n\n        \ntry\n \n{\n\n        \n$tes_angka\n \n=\n \n4\n;\n\n\n        \nif\n(\n$tes_angka\n \n \n3\n)\n \n{\n\n            \nthrow\n \nnew\n \nException\n(\nAngka yang dimasukkan tidak boleh lebih besar dari 3\n);\n\n        \n};\n\n\n        \n//Jika throw dijalankan, maka tulisan berikut tidak ditampilkan\n\n        \necho\n \nJika kamu melihat pesan ini artinya angka yang dimasukkan adalah 3 atau lebih kecil dari 3\n;\n\n        \n}\n \ncatch\n(\nException\n \n$e\n)\n \n{\n\n        \necho\n \nPesan: \n \n.\n \n$e\n-\ngetMessage\n();\n\n        \n};\n\n\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Try"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_try/#keyword-php-try", 
            "text": "", 
            "title": "Keyword PHP Try"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_try/#a-penjelasan", 
            "text": "Try yaitu program yang akan dijalankan dan akan ditangkap eksepsinya jika terjadi kesalahan.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_try/#b-bentuk-syntax-umum", 
            "text": "", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_try/#c-implementasi", 
            "text": "?php \n         try   { \n         $tes_angka   =   4 ; \n\n         if ( $tes_angka     3 )   { \n             throw   new   Exception ( Angka yang dimasukkan tidak boleh lebih besar dari 3 ); \n         }; \n\n         //Jika throw dijalankan, maka tulisan berikut tidak ditampilkan \n         echo   Jika kamu melihat pesan ini artinya angka yang dimasukkan adalah 3 atau lebih kecil dari 3 ; \n         }   catch ( Exception   $e )   { \n         echo   Pesan:    .   $e - getMessage (); \n         };  ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_unset/", 
            "text": "Keyword PHP Unset\n\n\n\n\nA. Penjelasan\n\n\nMerupakan kebalikan dari isset(), yaitu untuk meng-unsetvariabel,dan membebaskan memory yang sudah digunakan dan juga berguna untuk menghapus sebuah variable\n\n\nB. Bentuk Syntax Umum\n\n\nunset($variabel);\n\n\n\n\n\nC. Implementasi\n\n\n?php\n\n\n    \n$nama\n=\nFatma Zahrotun Nisak\n;\n\n\n    \nunset\n(\n$nama\n);\n\n\n    \necho\n \n$nama\n;\n\n\n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "Unset"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_unset/#keyword-php-unset", 
            "text": "", 
            "title": "Keyword PHP Unset"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_unset/#a-penjelasan", 
            "text": "Merupakan kebalikan dari isset(), yaitu untuk meng-unsetvariabel,dan membebaskan memory yang sudah digunakan dan juga berguna untuk menghapus sebuah variable", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_unset/#b-bentuk-syntax-umum", 
            "text": "unset($variabel);", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_unset/#c-implementasi", 
            "text": "?php \n\n     $nama = Fatma Zahrotun Nisak ; \n\n     unset ( $nama ); \n\n     echo   $nama ;  ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_while/", 
            "text": "Keyword PHP While\n\n\n\n\nA. Penjelasan\n\n\nPerulangan while banyak digunakan pada program yang terstruktur. Perulangan ini banyak digunakan bila jumlah perulangannya belum diketahui.  \n\nProses perulangan akan terus berlanjut selama kondisinya bernilai benar (true) dan akan berhenti bila kondisinya bernilai salah atau batas yang ditentukan telah terpenuhi.\n\n\nB. Bentuk Syntax Umum\n\n\n    while (condition is true) {\n        code to be executed;\n    }\n\n\n\n\n\nC. Implementasi\n\n\n   \n?php\n\n    \necho\nOperasi menggunakan while.\n;\n\n    \n$a\n=\n1\n;\n\n    \nWhile\n(\n$a\n \n=\n \n8\n)\n\n    \n{\n\n        \necho\nbr\nCetak ke : \n$a\n \n;\n\n        \n$a\n++\n;\n\n    \n}\n\n    \n?\n\n\n\n\n\n\n\n\nOutput", 
            "title": "While"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_while/#keyword-php-while", 
            "text": "", 
            "title": "Keyword PHP While"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_while/#a-penjelasan", 
            "text": "Perulangan while banyak digunakan pada program yang terstruktur. Perulangan ini banyak digunakan bila jumlah perulangannya belum diketahui.   \nProses perulangan akan terus berlanjut selama kondisinya bernilai benar (true) dan akan berhenti bila kondisinya bernilai salah atau batas yang ditentukan telah terpenuhi.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_while/#b-bentuk-syntax-umum", 
            "text": "while (condition is true) {\n        code to be executed;\n    }", 
            "title": "B. Bentuk Syntax Umum"
        }, 
        {
            "location": "/menu/php/keyword_php/keywordPhp_while/#c-implementasi", 
            "text": "?php \n     echo Operasi menggunakan while. ; \n     $a = 1 ; \n     While ( $a   =   8 ) \n     { \n         echo br Cetak ke :  $a   ; \n         $a ++ ; \n     } \n     ?    Output", 
            "title": "C. Implementasi"
        }, 
        {
            "location": "/menu/php/oop/oop/", 
            "text": "OOP\n\n\n\n\nA. Penjelasan\n\n\na. Class \n\n\nMerupakan model yang berisi kumpulan attribute dan method dalam suatu unit untuk suatu tujuan tertentu. Method dalam sebuah class dapat merubah attribute yang dimiliki oleh class tersebut. Sebuah class merupakan dasar dari modularitas dan struktur dalam pemrograman berorientasi object.\n\nClass (Kelas) adalah sebuah konsep yang memperluas dari struktur data, seperti struktur data, mereka dapat berisi data anggota, tetapi mereka juga dapat mengandung fungsi sebagai anggota. Sebuah objek adalah Instansiasi kelas. Dalam hal variabel, kelas akan menjadi tipe, dan objek akan variabel. Kelas didefinisikan baik menggunakan kata kunci class atau kata kunci struct , dengan sintaks berikut.\nDimana class_name adalah identifier yang valid untuk kelas, object_names adalah daftar nama opsional dari objek dari kelas ini. Tubuh deklarasi dapat berisi anggota, yang dapat menjadi data atau deklarasi fungsi, dan specifier akses opsional.\n\n\n\n\nContoh Class :\n    Class manusia memiliki attribute berat, tinggi, usia kemudian memiliki method makan, minum, tidur. \n\n\n\n\nb. Inheritance \n\n\nInheritance merupakan pewarisan atribut dan method dari sebuah class ke class lainnya. Class yang mewarisi disebut superclass dan Class yang diwarisi disebut subclass. Adapun inheritance sendiri adalah pewarisan sifat. \n\n\n\n\nContoh Inheritance :\n    Terdapat class sepeda dan sepeda gunung, sepeda balap, sepeda motor. Sepeda termasuk superclass.\u00a0 Sepeda gunung, sepeda balap, sepeda motor termasuk subclass. Hal ini dikarenakan sepeda gunung, sepeda balap, dan sepeda motor  memiliki variabel dan method yang dimiliki oleh sepeda.\n\n\n\n\nc. Encapsulation \n\n\nMerupakan proses untuk menutupi semua detail dari sebuah object yang tidak menyokong karakteristik khas dari object.\u00a0Artinya, data property dan method-method dari object hasil abstraksi dibungkus oleh struktur class agar terlindungi. Rincian implementasi internal suatu object dibuat tersembunyi sehingga tidak bisa diketahui dan diakses oleh object lain.\u00a0Object lain hanya bisa berkomunikasi dengan object tersebut melalui antarmuka (interface) yang disediakan oleh object tersebut.\n\n\nd. Polymorphism :\n\n\nMerupakan konsep yang memungkinkan digunakannya suatu interface yang sama untuk memerintah suatu object agar melakukan suatu tindakan yang mungkin secara prinsip sama tetapi secara proses berbeda.\n\n\n\n\nContoh Polymorphism :\n    Bila sebuah burung menerima pesan \u201cgerak cepat\u201d, dia akan menggerakan sayapnya dan terbang. Bila seekor singa menerima pesan yang sama, dia akan menggerakkan kakinya dan berlari. Keduanya menjawab sebuah pesan yang sama, namun yang sesuai dengan kemampuan hewan tersebut. Ini disebut polimorfisme karena sebuah variabel tungal dalam program dapat memegang berbagai jenis objek yang berbeda selagi program berjalan, dan teks program yang sama dapat memanggil beberapa metode yang berbeda di saat yang berbeda dalam pemanggilan yang sama.\n\n\n\n\nB. Implementasi\n\n\n?\nphp\n\n\n\n// interface =\n penerapan polyform\n\n\n// new =\n penerapan object\n\n\n// extends =\n inherent\n\n\n\ninterface\n  \nBangunRuang\n\n\n{\n\n   \npublic\n \nfunction\n \ngetLuas\n();\n\n\n}\n\n\n\nclass\n \nabstract\n \nBidang\n\n\n{\n\n   \npublic\n \nfunction\n \ngetNama\n()\n\n   \n{\n\n       \nreturn\n \nBidang\n;\n\n   \n}\n\n\n}\n\n\n\nclass\n \nLingkaran\n \nextends\n \nBidang\n \nimplements\n \nBangunRuang\n\n\n{\n\n\n   \npublic\n \nfunction\n \ngetNama\n()\n\n   \n{\n\n       \nreturn\n \nlingkaran\n;\n\n   \n}\n\n\n   \nprotected\n \nfunction\n \nrumusLuasLingkaran\n()\n\n   \n{\n\n\n   \n}\n\n\n}\n\n\n\nclass\n \nPersegi\n \nextends\n \nBidang\n \nimplements\n \nBangunRuang\n\n\n{\n\n   \npublic\n \nfunction\n \nrumusLuasPersegi\n()\n\n   \n{\n\n\n   \n}\n\n\n}\n\n\n\nclass\n \nPenghitungLuas\n()\n\n\n{\n\n   \npublic\n \nfunction\n \nhitung\n(\nBangunRuang\n \n$bangunRuang\n)\n\n   \n{\n\n       \nreturn\n \n$bangunRuang\n-\ngetLuas\n();\n\n   \n}\n\n\n}\n\n\n\n$lingkaran\n \n=\n \nnew\n \nLingkaran\n();\n\n\n\n\n\nclass\n \nPrinter\n\n\n{\n\n   \npublic\n \nfunction\n \ncetak\n(\nFormatData\n \n$formatData\n)\n\n   \n{\n\n       \nformatDataA\n();\n\n       \nformatDataB\n\n       \n$formatData\n-\ncetak\n();\n\n\n   \n}\n\n\n}\n\n\n?", 
            "title": "Home"
        }, 
        {
            "location": "/menu/php/oop/oop/#oop", 
            "text": "", 
            "title": "OOP"
        }, 
        {
            "location": "/menu/php/oop/oop/#a-penjelasan", 
            "text": "a. Class   Merupakan model yang berisi kumpulan attribute dan method dalam suatu unit untuk suatu tujuan tertentu. Method dalam sebuah class dapat merubah attribute yang dimiliki oleh class tersebut. Sebuah class merupakan dasar dari modularitas dan struktur dalam pemrograman berorientasi object. \nClass (Kelas) adalah sebuah konsep yang memperluas dari struktur data, seperti struktur data, mereka dapat berisi data anggota, tetapi mereka juga dapat mengandung fungsi sebagai anggota. Sebuah objek adalah Instansiasi kelas. Dalam hal variabel, kelas akan menjadi tipe, dan objek akan variabel. Kelas didefinisikan baik menggunakan kata kunci class atau kata kunci struct , dengan sintaks berikut.\nDimana class_name adalah identifier yang valid untuk kelas, object_names adalah daftar nama opsional dari objek dari kelas ini. Tubuh deklarasi dapat berisi anggota, yang dapat menjadi data atau deklarasi fungsi, dan specifier akses opsional.   Contoh Class :\n    Class manusia memiliki attribute berat, tinggi, usia kemudian memiliki method makan, minum, tidur.    b. Inheritance   Inheritance merupakan pewarisan atribut dan method dari sebuah class ke class lainnya. Class yang mewarisi disebut superclass dan Class yang diwarisi disebut subclass. Adapun inheritance sendiri adalah pewarisan sifat.    Contoh Inheritance :\n    Terdapat class sepeda dan sepeda gunung, sepeda balap, sepeda motor. Sepeda termasuk superclass.\u00a0 Sepeda gunung, sepeda balap, sepeda motor termasuk subclass. Hal ini dikarenakan sepeda gunung, sepeda balap, dan sepeda motor  memiliki variabel dan method yang dimiliki oleh sepeda.   c. Encapsulation   Merupakan proses untuk menutupi semua detail dari sebuah object yang tidak menyokong karakteristik khas dari object.\u00a0Artinya, data property dan method-method dari object hasil abstraksi dibungkus oleh struktur class agar terlindungi. Rincian implementasi internal suatu object dibuat tersembunyi sehingga tidak bisa diketahui dan diakses oleh object lain.\u00a0Object lain hanya bisa berkomunikasi dengan object tersebut melalui antarmuka (interface) yang disediakan oleh object tersebut.  d. Polymorphism :  Merupakan konsep yang memungkinkan digunakannya suatu interface yang sama untuk memerintah suatu object agar melakukan suatu tindakan yang mungkin secara prinsip sama tetapi secara proses berbeda.   Contoh Polymorphism :\n    Bila sebuah burung menerima pesan \u201cgerak cepat\u201d, dia akan menggerakan sayapnya dan terbang. Bila seekor singa menerima pesan yang sama, dia akan menggerakkan kakinya dan berlari. Keduanya menjawab sebuah pesan yang sama, namun yang sesuai dengan kemampuan hewan tersebut. Ini disebut polimorfisme karena sebuah variabel tungal dalam program dapat memegang berbagai jenis objek yang berbeda selagi program berjalan, dan teks program yang sama dapat memanggil beberapa metode yang berbeda di saat yang berbeda dalam pemanggilan yang sama.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/php/oop/oop/#b-implementasi", 
            "text": "? php  // interface =  penerapan polyform  // new =  penerapan object  // extends =  inherent  interface    BangunRuang  { \n    public   function   getLuas ();  }  class   abstract   Bidang  { \n    public   function   getNama () \n    { \n        return   Bidang ; \n    }  }  class   Lingkaran   extends   Bidang   implements   BangunRuang  { \n\n    public   function   getNama () \n    { \n        return   lingkaran ; \n    } \n\n    protected   function   rumusLuasLingkaran () \n    { \n\n    }  }  class   Persegi   extends   Bidang   implements   BangunRuang  { \n    public   function   rumusLuasPersegi () \n    { \n\n    }  }  class   PenghitungLuas ()  { \n    public   function   hitung ( BangunRuang   $bangunRuang ) \n    { \n        return   $bangunRuang - getLuas (); \n    }  }  $lingkaran   =   new   Lingkaran ();  class   Printer  { \n    public   function   cetak ( FormatData   $formatData ) \n    { \n        formatDataA (); \n        formatDataB \n        $formatData - cetak (); \n\n    }  }  ?", 
            "title": "B. Implementasi"
        }, 
        {
            "location": "/menu/dokumen_generator/dokumenGenerator/", 
            "text": "Dokumen Generator\n\n\n\n\nPenjelasan\n\n\nDokumen Generator adalah Generator dokumentasi adalah alat pemrograman yang menghasilkan dokumentasi perangkat lunak yang ditujukan untuk pemrogram (dokumentasi API) atau pengguna akhir (End-user Guide), atau keduanya, dari satu set file kode sumber yang dikomentari secara khusus, dan dalam beberapa kasus\n\n\na. Pembuatan dokumen dapat dibagi dalam beberapa jenis dokumen:\n\n\n\n\nSemua Dokumen Otomatis\n\n\nDokumen yang tidak bisa diproduksi secara otomatis\n\n\nDokumen dibuat berdasarkan cetakan teks yang telah ditentukan\n\n\nFormulir untuk situs web\n\n\n\n\nb. Macam-macam dokumen generator\n\n\n\n\nMkdocs\n\n\nSphinx", 
            "title": "Home"
        }, 
        {
            "location": "/menu/dokumen_generator/dokumenGenerator/#dokumen-generator", 
            "text": "", 
            "title": "Dokumen Generator"
        }, 
        {
            "location": "/menu/dokumen_generator/dokumenGenerator/#penjelasan", 
            "text": "Dokumen Generator adalah Generator dokumentasi adalah alat pemrograman yang menghasilkan dokumentasi perangkat lunak yang ditujukan untuk pemrogram (dokumentasi API) atau pengguna akhir (End-user Guide), atau keduanya, dari satu set file kode sumber yang dikomentari secara khusus, dan dalam beberapa kasus  a. Pembuatan dokumen dapat dibagi dalam beberapa jenis dokumen:   Semua Dokumen Otomatis  Dokumen yang tidak bisa diproduksi secara otomatis  Dokumen dibuat berdasarkan cetakan teks yang telah ditentukan  Formulir untuk situs web   b. Macam-macam dokumen generator   Mkdocs  Sphinx", 
            "title": "Penjelasan"
        }, 
        {
            "location": "/menu/dokumen_generator/mkdocs/", 
            "text": "MkDocs\n\n\n\n\nA. Penjelasan\n\n\nMkDocs adalah generator situs statis yang cepat, sederhana dan benar-benar cantik yang diarahkan untuk membuat dokumentasi proyek. File sumber dokumentasi ditulis dalam penurunan harga, dan dikonfigurasi dengan file konfigurasi YAML tunggal. MkDocs membangun situs HTML statis yang bisa Anda host di halaman GitHub, Amazon S3, atau tempat lain yang Anda pilih.\n\n\na. Memiliki Tema yang bagus\n\n\nAda beberapa tema bagus yang tersedia untuk MkDocs. Pilih antara tema bawaan: mkdocs dan readthedocs, pilih salah satu tema pihak ke-3 dalam wiki MkDocs, atau buat sendiri.\n\n\nb. Pratinjau situs Anda saat Anda bekerja\n\n\nBuilt-in dev-server memungkinkan Anda untuk melihat pratinjau dokumentasi Anda saat Anda menuliskannya. Ini bahkan akan otomatis memuat ulang dan menyegarkan browser Anda setiap kali Anda menyimpan perubahan Anda.\n\n\nc. Mudah untuk menyesuaikan\n\n\nDapatkan dokumentasi proyek Anda sesuai dengan keinginan Anda dengan menyesuaikan tema.\n\n\n\n\nB. Tutorial Installasi\n\n\nInstall Python\n\n\nDownload python di https://www.python.org/ dan setelah itu di instal. MkDocs mendukung python versi 2.6, 2.7, 3.3, 3.4, 3.5 dan pypy\n\n\nNote :\n\n\nJika menginstal Python di Windows, pastikan untuk mencentang kotak yang telah ditambahkan Python ke PATH Anda jika penginstal menawarkan opsi semacam itu (biasanya dinonaktifkan secara default).\n\n\n \n\n\nKetikkan pada CMD (Command Prompt) untuk mengetahui versi dari python dan versi dari pip jika telah terinstal\n\n\n$ python --version\nPython \n2\n.7.2\n$ pip --version\npip \n1\n.5.2\n\n\n\n\n\nInstall PIP\n\n\nJika menggunakan versi Python terbaru, pengelola paket Python, pip, kemungkinan besar terinstal secara default. Namun, Anda mungkin perlu meng-upgrade pip ke versi terakhir :\n\n\npip install --upgrade pip\n\n\n\n\n\nJika Anda perlu menginstal pip untuk pertama kalinya yaitu download get-pip.py. Kemudian jalankan perintah berikut untuk menginstalnya di CMD (Command Prompt)  :\n\n\npython get-pip.py\n\n\n\n\n\nInstall MkDocs\n\n\nInstal \u201cmkdocs\u201d menggunakan pip :\n\n\npip install mkdocs\n\n\n\n\n\nAnda sekarang harus memiliki perintah \u201cmkdocs\u201d yang terinstal di sistem Anda. Jalankan \u201cmkdocs\u201d\n\u201c--version\u201d untuk memeriksa semuanya berjalan baik.\n\n\n$ mkdocs --version\nmkdocs, version \n0\n.15.3\n\n\n\n\n\n\n\nC. Tutorial Penggunaan\n\n\nMembuat project baru\n\n\nMemulai dengan mudah\n\n\nmkdocs new my-project\ncd my-project\n\n\n\n\n\nTampilan untuk melihat proyek yang telah dibuat\n\n\n \n\n\nAda file konfigurasi tunggal bernama \u201cmkdocs.yml\u201d, dan sebuah folder bernama \u201cdocs\u201d yang berisi file sumber dokumentasi. Folder \u201cdocs\u201d hanya berisi satu halaman dokumentasi, bernama \u201cindex.md\u201d. MkDocs dilengkapi dengan built-in dev-server untuk melihat peninjauan dokumentasi saat mengerjakannya. Pastikan berada di direktori yang sama dengan file konfigurasi \u201cmkdocs.yml\u201d, kemudian jalankan server dengan menjalankan perintah serve mkdocs :\n\n\n$ mkdocs serve\n\n\n\n\n\n \n\n\nBuka http://127.0.0.1:8000/ di browser Anda, dan Anda akan melihat halaman muka default yang ditampilkan:\n\n\n \n\n\nDev-server juga mendukung auto-reloading, dan akan mendapatkan kembali dokumentasi Anda kapan pun ada sesuatu di file konfigurasi, direktori dokumentasi, atau perubahan direktori tema.\n\n\nBuka dokumen \u201cdocs / index.md\u201d di editor teks pilihan Anda, ganti judul awal ke \u201cMkLorum\u201d, dan simpan perubahan Anda. Browser akan otomatis dimuat ulang dan Anda harus segera melihat dokumentasi yang telah diperbarui.\n\n\nSekarang coba edit file konfigurasi: \u201cmkdocs.yml\u201d. Ubah pengaturan \u201csite_name\u201d ke \u201cMkLorum\u201d dan simpan file tersebut.\n\n\nsite_name\n:\n \nMkLorum\n\n\n\n\n\n\nBrowser harus segera memuat ulang, dan Anda akan melihat nama situs baru yang telah berlaku.\n\n\n \n\n\nMenambahkan Halaman\n\n\nSitus dokumentasi akan menyertakan beberapa header navigasi, Anda boleh untuk mengedit file konfigurasi dan menambahkan beberapa informasi tentang urutan, judul, dan nesting setiap halaman di header navigasi dengan menambahkan pengaturan \u201cpage\u201d :\n\n\nsite_name\n:\n \nMkLorum\n\n\npages\n:\n\n    \n-\n \nHome\n:\n \nindex\n.\nmd\n\n    \n-\n \nAbout\n:\n \nabout\n.\nmd\n\n\n\n\n\n\nSimpan perubahan Anda  dan sekarang Anda akan melihat bagian navigasi dengan item \u201cHome\u201d dan \u201cAbout\u201d item di sebelah kiri serta item \u201cSearch\u201d, \u201cPrevious\u201d, dan item \u201cNext\u201d di sebelah kanan.\n\n\n\n\nCobalah item menu dan navigasikan kembali antar halaman. Lalu klik \u201cSearch\u201d. Dialog pencarian akan muncul, memungkinkan Anda untuk mencari teks apapun pada halaman manapun. Perhatikan bahwa hasil pencarian mencakup setiap hasil kemunculannya istilah pencarian di situs dan link langsung ke bagian halaman di mana istilah pencarian muncul. Anda mendapatkan semua itu tanpa usaha atau konfigurasi dari pihak Anda!\n\n\n\n\nTema Dokumentasi\n\n\nSekarang ubah file konfigurasi untuk mengubah bagaimana dokumentasi ditampilkan dengan mengubah tema. Edit file mkdocs.yml dan tambahkan setting \u201ctheme\u201d :\n\n\nsite_name\n:\n \nMkLorum\n\n\npages\n:\n\n    \n-\n \nHome\n:\n \nindex\n.\nmd\n\n    \n-\n \nAbout\n:\n \nabout\n.\nmd\n\n\ntheme\n:\n \nreadthedocs\n\n\n\n\n\n\nSimpan perubahan, dan Anda akan melihat tema ReadTheDocs yang sedang digunakan.\n\n\n\n\nMengubah Ikon Favicon\n\n\nSecara default, MkDocs menggunakan \u201cikon favicon MkDocs\u201d. Untuk menggunakan ikon yang berbeda, buat subdirektori \u201cimg\u201d di \u201cdocs_dir\u201d dan salin file \u201cfavicon.ico\u201d kustom ke direktori itu. MkDocs akan mendeteksi dan menggunakan file tersebut secara otomatis sebagai ikon favicon Anda.\n\n\nMembangun Situs\n\n\nTerlihat bagus. Jika Anda siap untuk menyebarkan pass pertama dari dokumentasi \u201cMkLorum\u201d Anda. Pertama membangun dokumentasi :\n\n\nmkdocs build\n\n\n\n\n\nIni akan membuat direktori baru, bernama \u201dsite\u201d. Lihatlah di dalam direktori:\n\n\n$ ls site\n\n\n\n\n\n\n\nPerhatikan bahwa dokumentasi sumber telah dihasilkan sebagai dua file HTML yang bernama \u201cindex.html\u201d dan \u201cabout / index.html\u201d. Anda juga memiliki berbagai media lain yang telah disalin ke direktori \u201csite\u201d sebagai bagian dari tema dokumentasi. Bahkan memiliki file \u201csitemap.xml\u201d dan \u201cmkdocs / search_index.json\u201d.\nJika Anda menggunakan kontrol kode sumber seperti \u201cgit\u201d Anda mungkin tidak ingin memeriksa dokumentasi Anda ke dalam repositori. Tambahkan baris yang berisi \u201csitus /\u201d  ke file \u201c.gitignore\u201d Anda.\n\n\nJika menggunakan alat kontrol kode sumber lain, Anda pasti ingin memeriksanya tentang cara mengabaikan direktori tertentu.\n\n\nSetelah beberapa lama, file dapat dihapus dari dokumentasi namun tetap berada di direktori \u201csite\u201d. Untuk menghapus file basi tersebut, cukup jalankan \u201cmkdocs\u201d dengan tombol \u201c--clean\u201d \n\n\nmkdocs build --clean\n\n\n\n\n\nPerintah lainnya\n\n\nAda berbagai perintah dan pilihan lain yang tersedia. Untuk daftar perintah yang lengkap, gunakan \u201c--help\u201d flag :\n\n\nmkdocs --help\n\n\n\n\n\nUntuk melihat daftar opsi yang tersedia pada perintah yang diberikan, gunakan \u201c--help\u201d flag dengan perintah itu. Sebagai contoh, untuk mendapatkan daftar semua opsi yang tersedia untuk perintah \u201cbuild\u201d jalankan perintah berikut:\n\n\nMkdocs build --help\n\n\n\n\n\nMenyebarkan\n\n\nSitus dokumentasi yang baru saja dibuat hanya menggunakan file statis sehingga Anda bisa meng-hostnya dari mana saja. \u201cHalaman proyek GitHub\u201d dan \u201cAmazon S3\u201d mungkin pilihan hosting yang bagus, tergantung kebutuhan Anda. Upload konten dari seluruh direktori \u201csite\u201d ke mana pun Anda hosting situs web dan selesai. Untuk petunjuk khusus tentang sejumlah host umum, lihat halaman \u201cDeploying Docs Anda\u201d\n\n\nMendapatkan Bantuan\n\n\nUntuk mendapatkan bantuan dengan MkDocs, gunakan \u201cgrup diskusi\u201d, masalah GitHub atau kanal IRC MkDocs \u201c#mkdocs\u201d pada freenode.", 
            "title": "MkDocs"
        }, 
        {
            "location": "/menu/dokumen_generator/mkdocs/#mkdocs", 
            "text": "", 
            "title": "MkDocs"
        }, 
        {
            "location": "/menu/dokumen_generator/mkdocs/#a-penjelasan", 
            "text": "MkDocs adalah generator situs statis yang cepat, sederhana dan benar-benar cantik yang diarahkan untuk membuat dokumentasi proyek. File sumber dokumentasi ditulis dalam penurunan harga, dan dikonfigurasi dengan file konfigurasi YAML tunggal. MkDocs membangun situs HTML statis yang bisa Anda host di halaman GitHub, Amazon S3, atau tempat lain yang Anda pilih.  a. Memiliki Tema yang bagus  Ada beberapa tema bagus yang tersedia untuk MkDocs. Pilih antara tema bawaan: mkdocs dan readthedocs, pilih salah satu tema pihak ke-3 dalam wiki MkDocs, atau buat sendiri.  b. Pratinjau situs Anda saat Anda bekerja  Built-in dev-server memungkinkan Anda untuk melihat pratinjau dokumentasi Anda saat Anda menuliskannya. Ini bahkan akan otomatis memuat ulang dan menyegarkan browser Anda setiap kali Anda menyimpan perubahan Anda.  c. Mudah untuk menyesuaikan  Dapatkan dokumentasi proyek Anda sesuai dengan keinginan Anda dengan menyesuaikan tema.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/dokumen_generator/mkdocs/#b-tutorial-installasi", 
            "text": "", 
            "title": "B. Tutorial Installasi"
        }, 
        {
            "location": "/menu/dokumen_generator/mkdocs/#install-python", 
            "text": "Download python di https://www.python.org/ dan setelah itu di instal. MkDocs mendukung python versi 2.6, 2.7, 3.3, 3.4, 3.5 dan pypy  Note :  Jika menginstal Python di Windows, pastikan untuk mencentang kotak yang telah ditambahkan Python ke PATH Anda jika penginstal menawarkan opsi semacam itu (biasanya dinonaktifkan secara default).     Ketikkan pada CMD (Command Prompt) untuk mengetahui versi dari python dan versi dari pip jika telah terinstal  $ python --version\nPython  2 .7.2\n$ pip --version\npip  1 .5.2", 
            "title": "Install Python"
        }, 
        {
            "location": "/menu/dokumen_generator/mkdocs/#install-pip", 
            "text": "Jika menggunakan versi Python terbaru, pengelola paket Python, pip, kemungkinan besar terinstal secara default. Namun, Anda mungkin perlu meng-upgrade pip ke versi terakhir :  pip install --upgrade pip  Jika Anda perlu menginstal pip untuk pertama kalinya yaitu download get-pip.py. Kemudian jalankan perintah berikut untuk menginstalnya di CMD (Command Prompt)  :  python get-pip.py", 
            "title": "Install PIP"
        }, 
        {
            "location": "/menu/dokumen_generator/mkdocs/#install-mkdocs", 
            "text": "Instal \u201cmkdocs\u201d menggunakan pip :  pip install mkdocs  Anda sekarang harus memiliki perintah \u201cmkdocs\u201d yang terinstal di sistem Anda. Jalankan \u201cmkdocs\u201d\n\u201c--version\u201d untuk memeriksa semuanya berjalan baik.  $ mkdocs --version\nmkdocs, version  0 .15.3", 
            "title": "Install MkDocs"
        }, 
        {
            "location": "/menu/dokumen_generator/mkdocs/#c-tutorial-penggunaan", 
            "text": "", 
            "title": "C. Tutorial Penggunaan"
        }, 
        {
            "location": "/menu/dokumen_generator/mkdocs/#membuat-project-baru", 
            "text": "Memulai dengan mudah  mkdocs new my-project\ncd my-project  Tampilan untuk melihat proyek yang telah dibuat     Ada file konfigurasi tunggal bernama \u201cmkdocs.yml\u201d, dan sebuah folder bernama \u201cdocs\u201d yang berisi file sumber dokumentasi. Folder \u201cdocs\u201d hanya berisi satu halaman dokumentasi, bernama \u201cindex.md\u201d. MkDocs dilengkapi dengan built-in dev-server untuk melihat peninjauan dokumentasi saat mengerjakannya. Pastikan berada di direktori yang sama dengan file konfigurasi \u201cmkdocs.yml\u201d, kemudian jalankan server dengan menjalankan perintah serve mkdocs :  $ mkdocs serve     Buka http://127.0.0.1:8000/ di browser Anda, dan Anda akan melihat halaman muka default yang ditampilkan:     Dev-server juga mendukung auto-reloading, dan akan mendapatkan kembali dokumentasi Anda kapan pun ada sesuatu di file konfigurasi, direktori dokumentasi, atau perubahan direktori tema.  Buka dokumen \u201cdocs / index.md\u201d di editor teks pilihan Anda, ganti judul awal ke \u201cMkLorum\u201d, dan simpan perubahan Anda. Browser akan otomatis dimuat ulang dan Anda harus segera melihat dokumentasi yang telah diperbarui.  Sekarang coba edit file konfigurasi: \u201cmkdocs.yml\u201d. Ubah pengaturan \u201csite_name\u201d ke \u201cMkLorum\u201d dan simpan file tersebut.  site_name :   MkLorum   Browser harus segera memuat ulang, dan Anda akan melihat nama situs baru yang telah berlaku.", 
            "title": "Membuat project baru"
        }, 
        {
            "location": "/menu/dokumen_generator/mkdocs/#menambahkan-halaman", 
            "text": "Situs dokumentasi akan menyertakan beberapa header navigasi, Anda boleh untuk mengedit file konfigurasi dan menambahkan beberapa informasi tentang urutan, judul, dan nesting setiap halaman di header navigasi dengan menambahkan pengaturan \u201cpage\u201d :  site_name :   MkLorum  pages : \n     -   Home :   index . md \n     -   About :   about . md   Simpan perubahan Anda  dan sekarang Anda akan melihat bagian navigasi dengan item \u201cHome\u201d dan \u201cAbout\u201d item di sebelah kiri serta item \u201cSearch\u201d, \u201cPrevious\u201d, dan item \u201cNext\u201d di sebelah kanan.   Cobalah item menu dan navigasikan kembali antar halaman. Lalu klik \u201cSearch\u201d. Dialog pencarian akan muncul, memungkinkan Anda untuk mencari teks apapun pada halaman manapun. Perhatikan bahwa hasil pencarian mencakup setiap hasil kemunculannya istilah pencarian di situs dan link langsung ke bagian halaman di mana istilah pencarian muncul. Anda mendapatkan semua itu tanpa usaha atau konfigurasi dari pihak Anda!", 
            "title": "Menambahkan Halaman"
        }, 
        {
            "location": "/menu/dokumen_generator/mkdocs/#tema-dokumentasi", 
            "text": "Sekarang ubah file konfigurasi untuk mengubah bagaimana dokumentasi ditampilkan dengan mengubah tema. Edit file mkdocs.yml dan tambahkan setting \u201ctheme\u201d :  site_name :   MkLorum  pages : \n     -   Home :   index . md \n     -   About :   about . md  theme :   readthedocs   Simpan perubahan, dan Anda akan melihat tema ReadTheDocs yang sedang digunakan.", 
            "title": "Tema Dokumentasi"
        }, 
        {
            "location": "/menu/dokumen_generator/mkdocs/#mengubah-ikon-favicon", 
            "text": "Secara default, MkDocs menggunakan \u201cikon favicon MkDocs\u201d. Untuk menggunakan ikon yang berbeda, buat subdirektori \u201cimg\u201d di \u201cdocs_dir\u201d dan salin file \u201cfavicon.ico\u201d kustom ke direktori itu. MkDocs akan mendeteksi dan menggunakan file tersebut secara otomatis sebagai ikon favicon Anda.", 
            "title": "Mengubah Ikon Favicon"
        }, 
        {
            "location": "/menu/dokumen_generator/mkdocs/#membangun-situs", 
            "text": "Terlihat bagus. Jika Anda siap untuk menyebarkan pass pertama dari dokumentasi \u201cMkLorum\u201d Anda. Pertama membangun dokumentasi :  mkdocs build  Ini akan membuat direktori baru, bernama \u201dsite\u201d. Lihatlah di dalam direktori:  $ ls site   Perhatikan bahwa dokumentasi sumber telah dihasilkan sebagai dua file HTML yang bernama \u201cindex.html\u201d dan \u201cabout / index.html\u201d. Anda juga memiliki berbagai media lain yang telah disalin ke direktori \u201csite\u201d sebagai bagian dari tema dokumentasi. Bahkan memiliki file \u201csitemap.xml\u201d dan \u201cmkdocs / search_index.json\u201d.\nJika Anda menggunakan kontrol kode sumber seperti \u201cgit\u201d Anda mungkin tidak ingin memeriksa dokumentasi Anda ke dalam repositori. Tambahkan baris yang berisi \u201csitus /\u201d  ke file \u201c.gitignore\u201d Anda.  Jika menggunakan alat kontrol kode sumber lain, Anda pasti ingin memeriksanya tentang cara mengabaikan direktori tertentu.  Setelah beberapa lama, file dapat dihapus dari dokumentasi namun tetap berada di direktori \u201csite\u201d. Untuk menghapus file basi tersebut, cukup jalankan \u201cmkdocs\u201d dengan tombol \u201c--clean\u201d   mkdocs build --clean", 
            "title": "Membangun Situs"
        }, 
        {
            "location": "/menu/dokumen_generator/mkdocs/#perintah-lainnya", 
            "text": "Ada berbagai perintah dan pilihan lain yang tersedia. Untuk daftar perintah yang lengkap, gunakan \u201c--help\u201d flag :  mkdocs --help  Untuk melihat daftar opsi yang tersedia pada perintah yang diberikan, gunakan \u201c--help\u201d flag dengan perintah itu. Sebagai contoh, untuk mendapatkan daftar semua opsi yang tersedia untuk perintah \u201cbuild\u201d jalankan perintah berikut:  Mkdocs build --help", 
            "title": "Perintah lainnya"
        }, 
        {
            "location": "/menu/dokumen_generator/mkdocs/#menyebarkan", 
            "text": "Situs dokumentasi yang baru saja dibuat hanya menggunakan file statis sehingga Anda bisa meng-hostnya dari mana saja. \u201cHalaman proyek GitHub\u201d dan \u201cAmazon S3\u201d mungkin pilihan hosting yang bagus, tergantung kebutuhan Anda. Upload konten dari seluruh direktori \u201csite\u201d ke mana pun Anda hosting situs web dan selesai. Untuk petunjuk khusus tentang sejumlah host umum, lihat halaman \u201cDeploying Docs Anda\u201d", 
            "title": "Menyebarkan"
        }, 
        {
            "location": "/menu/dokumen_generator/mkdocs/#mendapatkan-bantuan", 
            "text": "Untuk mendapatkan bantuan dengan MkDocs, gunakan \u201cgrup diskusi\u201d, masalah GitHub atau kanal IRC MkDocs \u201c#mkdocs\u201d pada freenode.", 
            "title": "Mendapatkan Bantuan"
        }, 
        {
            "location": "/menu/web_server/webServer/", 
            "text": "Web Server\n\n\n\n\nA. Penjelasan\n\n\nMerupakan perangkat lunak (software) dalam server yang berfungsi untuk menerima permintaan (request) berupa halaman web melalui protokol HTTP dan atau HTTPS dari client yang lebih dikenal dengan nama browser, kemudian mengirimkan kembali (respon) hasil permintaan tersebut ke dalam bentuk halaman-halaman web yang pada umumnya berbentuk dokumen HTML.Pada pengembangan web tradisional, kita umumnya menggunakan sebuah web server seperti Apache HTTPD atau nginx sebagai penyalur konten statis seperti HTML, CSS, Javascript, maupun gambar. Untuk menambahkan aplikasi web kita kemudian menggunakan penghubung antar web server dengan program yang dikenal dengan nama CGI (Common Gateway Interface).\nCGI diimplementasikan pada web server sebagai antarmuka penghubung antara web server dengan program yang akan menghasilkan konten secara dinamis. Program-program CGI biasanya dikembangkan dalam bentuk script, meskipun dapat saja dikembangkan dalam bahasa apapun. Contoh dari bahasa pemrograman dan program yang hidup di dalam CGI adalah PHP.Berikut cara kerja CGI dan Web Server\n\n\na. Fungsi Web Server\n\n\nUntuk mentransfer atau memindahkan berkas yang diminta oleh pengguna melalui protokol komunikasi tertentu. Oleh karena dalam satu halaman web biasanya terdiri dari berbagai macam jenis berkas seperti gambar, video, teks, audio, file dan lain sebagainya, maka pemanfaatan web server berfungsi juga untuk mentransfer keseluruhan aspek pemberkasan dalam halaman tersebut, termasuk teks, gambar, video, audio, file dan sebagainya.\n\n\nPada saat anda ingin mengakses sebuah halaman website, biasanya anda mengetik halaman tersebut di browser seperti mozilla, chrome dan lain-lain. Setelah anda meminta (biasanya dengan menekan enter) untuk dapat mengakses halaman tersebut, browser akan melakukan permintaan ke web server. Disinilah web server berperan, web server akan mencarikan data yang diminta browser, lalu mengirimkan data tersebut ke browser atau menolaknya jika ternyata data yang diminta tidak ditemukan.\n\n\nb. Contoh Web Server\n\n\nBeberapa contoh web server yang paling banyak digunakan diantaranya adalah :\n\n\n\n\nApache\n\n\nApache Tomcat\n\n\nMicrosoft Internet Information Services (IIS)\n\n\nNginx\n\n\nLighttpd\n\n\nLitespeed\n\n\nZeus Web Server\n\n\n\n\nc. Fitur-fitur standar web server \n\n\nFitur - fitur standar web server :\n\n\n\n\nHTTP  (Hypertext Transfer Protocol) adalah protokol yang digunakan oleh web server dan web browser untuk dapat berkomunikasi antara satu sama lain.\n\n\nHTTPS (Hypertext Transfer Protocol Secure) adalah merupakan versi aman (secure) dari HTTP. Biasanya protokol HTTP menggunakan port 80 dan protokol HTTPS menggunakan port 443.\n\n\nLogging\n\n\nVirtual Hosting\n\n\nPengaturan Bandwidth\n\n\nOtektifikasi\n\n\nKompresi Konten\n\n\n\n\n\n\nB. Cara Kerja\n\n\n \n\n\nCara Kerja :\n\n\n\n\n\n\nClient mengakses suatu website berupa URL melalui web browser\n\n\n\n\n\n\nMengirim http request URL melalui internet dan mengirimkan domain ke DNS\n\n\n\n\n\n\nDNS menterjemahkan domain name ke alamat IP lalu mengirimkan \n\n\n\n\n\n\nDan terhubung ke web server melalui jaringan (intranet atau internet).\n\n\n\n\n\n\nWeb server menerima permintaan (request) dari client, dan\n\n\n\n\n\n\nWeb server Mengirimkan apa yang diminta oleh client (response).", 
            "title": "Home"
        }, 
        {
            "location": "/menu/web_server/webServer/#web-server", 
            "text": "", 
            "title": "Web Server"
        }, 
        {
            "location": "/menu/web_server/webServer/#a-penjelasan", 
            "text": "Merupakan perangkat lunak (software) dalam server yang berfungsi untuk menerima permintaan (request) berupa halaman web melalui protokol HTTP dan atau HTTPS dari client yang lebih dikenal dengan nama browser, kemudian mengirimkan kembali (respon) hasil permintaan tersebut ke dalam bentuk halaman-halaman web yang pada umumnya berbentuk dokumen HTML.Pada pengembangan web tradisional, kita umumnya menggunakan sebuah web server seperti Apache HTTPD atau nginx sebagai penyalur konten statis seperti HTML, CSS, Javascript, maupun gambar. Untuk menambahkan aplikasi web kita kemudian menggunakan penghubung antar web server dengan program yang dikenal dengan nama CGI (Common Gateway Interface).\nCGI diimplementasikan pada web server sebagai antarmuka penghubung antara web server dengan program yang akan menghasilkan konten secara dinamis. Program-program CGI biasanya dikembangkan dalam bentuk script, meskipun dapat saja dikembangkan dalam bahasa apapun. Contoh dari bahasa pemrograman dan program yang hidup di dalam CGI adalah PHP.Berikut cara kerja CGI dan Web Server  a. Fungsi Web Server  Untuk mentransfer atau memindahkan berkas yang diminta oleh pengguna melalui protokol komunikasi tertentu. Oleh karena dalam satu halaman web biasanya terdiri dari berbagai macam jenis berkas seperti gambar, video, teks, audio, file dan lain sebagainya, maka pemanfaatan web server berfungsi juga untuk mentransfer keseluruhan aspek pemberkasan dalam halaman tersebut, termasuk teks, gambar, video, audio, file dan sebagainya.  Pada saat anda ingin mengakses sebuah halaman website, biasanya anda mengetik halaman tersebut di browser seperti mozilla, chrome dan lain-lain. Setelah anda meminta (biasanya dengan menekan enter) untuk dapat mengakses halaman tersebut, browser akan melakukan permintaan ke web server. Disinilah web server berperan, web server akan mencarikan data yang diminta browser, lalu mengirimkan data tersebut ke browser atau menolaknya jika ternyata data yang diminta tidak ditemukan.  b. Contoh Web Server  Beberapa contoh web server yang paling banyak digunakan diantaranya adalah :   Apache  Apache Tomcat  Microsoft Internet Information Services (IIS)  Nginx  Lighttpd  Litespeed  Zeus Web Server   c. Fitur-fitur standar web server   Fitur - fitur standar web server :   HTTP  (Hypertext Transfer Protocol) adalah protokol yang digunakan oleh web server dan web browser untuk dapat berkomunikasi antara satu sama lain.  HTTPS (Hypertext Transfer Protocol Secure) adalah merupakan versi aman (secure) dari HTTP. Biasanya protokol HTTP menggunakan port 80 dan protokol HTTPS menggunakan port 443.  Logging  Virtual Hosting  Pengaturan Bandwidth  Otektifikasi  Kompresi Konten", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/web_server/webServer/#b-cara-kerja", 
            "text": "Cara Kerja :    Client mengakses suatu website berupa URL melalui web browser    Mengirim http request URL melalui internet dan mengirimkan domain ke DNS    DNS menterjemahkan domain name ke alamat IP lalu mengirimkan     Dan terhubung ke web server melalui jaringan (intranet atau internet).    Web server menerima permintaan (request) dari client, dan    Web server Mengirimkan apa yang diminta oleh client (response).", 
            "title": "B. Cara Kerja"
        }, 
        {
            "location": "/menu/web_server/apache/", 
            "text": "Installasi Apache, PHP\n\n\n\n\nA. Penjelasan\n\n\na. Apache\n\n\nApache adalah komponen server web dari paket perangkat lunak LAMP (Linux, Apache, MySQL, PHP/Perl/bahasa pemrograman Python). \n\n\nb. PHP\n\n\nPHP adalah singkatan dari \"PHP: Hypertext Prepocessor\", yaitu bahasa pemrograman yang digunakan secara luas untuk penanganan pembuatan dan pengembangan sebuah situs web dan bisa digunakan bersamaan dengan HTML.\n\n\n\n\nB. Tutorial Installasi\n\n\nInstall Apache\n\n\nTutorial install APACHE di Linux Ubuntu 16.04 desktop :\n\n\nApache tersedia di dalam repositori perangkat lunak default Ubuntu, jadi kami akan menginstalnya menggunakan alat manajemen paket konvensional.\n\n\nKami akan memulai dengan memperbarui indeks paket lokal untuk mencerminkan perubahan hulu terbaru. Setelah itu, kita bisa menginstal paket apache2:\n\n\n$ sudo apt-get update\n\n$ sudo apt-get install apache2\n\n\n\n\n\nSetelah mengkonfirmasikan instalasi, apt-get akan menginstal Apache dan semua dependensi yang dibutuhkan.\n\n\nInstall PHP\n\n\nTutorial install PHP di Linux Ubuntu 16.04 desktop :\n\n\n$ sudo apt-get install php\n\n$ sudo apt-get install libapache2-mod-php\n\n$ \ncd\n /var/www/\n\n$ sudo chown username:www-data . - R", 
            "title": "Apache"
        }, 
        {
            "location": "/menu/web_server/apache/#installasi-apache-php", 
            "text": "", 
            "title": "Installasi Apache, PHP"
        }, 
        {
            "location": "/menu/web_server/apache/#a-penjelasan", 
            "text": "a. Apache  Apache adalah komponen server web dari paket perangkat lunak LAMP (Linux, Apache, MySQL, PHP/Perl/bahasa pemrograman Python).   b. PHP  PHP adalah singkatan dari \"PHP: Hypertext Prepocessor\", yaitu bahasa pemrograman yang digunakan secara luas untuk penanganan pembuatan dan pengembangan sebuah situs web dan bisa digunakan bersamaan dengan HTML.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/web_server/apache/#b-tutorial-installasi", 
            "text": "", 
            "title": "B. Tutorial Installasi"
        }, 
        {
            "location": "/menu/web_server/apache/#install-apache", 
            "text": "Tutorial install APACHE di Linux Ubuntu 16.04 desktop :  Apache tersedia di dalam repositori perangkat lunak default Ubuntu, jadi kami akan menginstalnya menggunakan alat manajemen paket konvensional.  Kami akan memulai dengan memperbarui indeks paket lokal untuk mencerminkan perubahan hulu terbaru. Setelah itu, kita bisa menginstal paket apache2:  $ sudo apt-get update\n\n$ sudo apt-get install apache2  Setelah mengkonfirmasikan instalasi, apt-get akan menginstal Apache dan semua dependensi yang dibutuhkan.", 
            "title": "Install Apache"
        }, 
        {
            "location": "/menu/web_server/apache/#install-php", 
            "text": "Tutorial install PHP di Linux Ubuntu 16.04 desktop :  $ sudo apt-get install php\n\n$ sudo apt-get install libapache2-mod-php\n\n$  cd  /var/www/\n\n$ sudo chown username:www-data . - R", 
            "title": "Install PHP"
        }, 
        {
            "location": "/menu/web_server/website/", 
            "text": "Website\n\n\n\n\nPenjelasan\n\n\nWebsite atau situs dapat diartikan sebagai kumpulan halaman yang menampilkan informasi data teks, data gambar diam atau gerak, data animasi, suara, video dan atau gabungan dari semuanya, baik yang bersifat statis maupun dinamis yang membentuk satu rangkaian bangunan yang saling terkait dimana masing-masing dihubungkan dengan jaringan-jaringan halaman (hyperlink). Bersifat statis apabila isi informasi website tetap, jarang berubah, dan isi informasinya searah hanya dari pemilik website. Bersifat dinamis apabila isi informasi website selalu berubah-ubah, dan isi informasinya interaktif dua arah berasal dari pemilik serta pengguna website. Contoh website statis adalah berisi profil perusahaan, sedangkan website dinamis adalah seperti Friendster, Multiply, dll. Dalam sisi pengembangannya, website statis hanya bisa diupdate oleh pemiliknya saja, sedangkan website dinamis bisa diupdate oleh pengguna maupun pemilik.\n\n\nDalam mencari informasi dari internet, pengguna akan menuju ke sebuah alamat unik internet (misal: www.namawebsite.com) yang disebut nama domain (Domain Name/URL \u2013 Uniform Resource Locator) dan menemukan informasi berbentuk teks, gambar diam atau bergerak, animasi bergerak, suara ataupun video dalam sebuah media, yang disebut dengan website atau situs. Website ini dibuka melalui sebuah program penjelajah (Browser) yang berada di sebuah komputer. Program penjelajah yang bisa digunakan dalam komputer diantaranya: IE (Internet Explorer), Mozilla, Firefox, Netscape, Opera \n\n\na. Unsur-unsur dalam penyediaan website\nUntuk menyediakan sebuah website, maka harus tersedia unsur-unsur penunjangnya, adalah sebagai berikut:\n\n\n\n\n\n\nNama domain (Domain name/URL \u2013 Uniform Resource Locator)\nNama domain atau biasa disebut dengan Domain Name atau URL adalah alamat unik di dunia internet yang digunakan untuk mengidentifikasi sebuah website, atau dengan kata lain domain name adalah alamat yang digunakan untuk menemukan sebuah website pada dunia internet. Contoh : http://www.baliorange.net\nNama domain diperjualbelikan secara bebas di internet dengan status sewa tahunan. Setelah Nama Domain itu terbeli di salah satu penyedia jasa pendaftaran, maka pengguna disediakan sebuah kontrol panel untuk administrasinya. Jika pengguna lupa/tidak memperpanjang masa sewanya, maka nama domain itu akan di lepas lagi ketersediaannya untuk umum. Nama domain sendiri mempunyai identifikasi ekstensi/akhiran sesuai dengan kepentingan dan lokasi keberadaan website tersebut. Contoh nama domain ber-ekstensi internasional adalah com, net, org, info, biz, name, ws. Contoh nama domain ber-ekstensi lokasi Negara Indonesia adalah :\n\n\n\n\n.co.id : Untuk Badan Usaha yang mempunyai badan hukum sah\n\n\n.ac.id : Untuk Lembaga Pendidikan\n\n\n.go.id : Khusus untuk Lembaga Pemerintahan Republik Indonesia\n\n\n.mil.id : Khusus untuk Lembaga Militer Republik Indonesia\n\n\n.or.id : Untuk segala macam organisasi yand tidak termasuk dalam kategori \u201cac.id\u201d,\u201dco.id\u201d,\u201dgo.id\u201d,\u201dmil.id\u201d dan lain lain\n\n\n.war.net.id : untuk industri warung internet di Indonesia\n\n\n.sch.id : khusus untuk Lembaga Pendidikan yang menyelenggarakan pendidikan seperti SD, SMP dan atau SMU\n\n\n.web.id : Ditujukan bagi badan usaha, organisasi ataupun perseorangan yang melakukan kegiatannya di World Wide Web.\n\n\n\n\n\n\n\n\nRumah tempat website (Web hosting)\nWeb Hosting dapat diartikan sebagai ruangan yang terdapat dalam harddisk tempat menyimpan berbagai data, file-file, gambar, video, data email, statistik, database dan lain sebagainya yang akan ditampilkan di website. Besarnya data yang bisa dimasukkan tergantung dari besarnya web hosting yang disewa/dipunyai, semakin besar web hosting semakin besar pula data yang dapat dimasukkan dan ditampilkan dalam website.\nWeb Hosting juga diperoleh dengan menyewa. Pengguna akan memperoleh kontrol panel yang terproteksi dengan username dan password untuk administrasi websitenya. Besarnya hosting ditentukan ruangan harddisk dengan ukuran MB (Mega Byte) atau GB (Giga Byte). Lama penyewaan web hosting rata-rata dihitung per tahun. Penyewaan hosting dilakukan dari perusahaan-perusahaan penyewa web hosting yang banyak dijumpai baik di Indonesia maupun Luar Negeri. Lokasi peletakan pusat data (datacenter) web hosting bermacam-macam. Ada yang di Jakarta, Singapore, Inggris, Amerika, dll dengan harga sewa bervariasi.\n\n\n\n\n\n\nBahasa Program (Scripts Program).\nAdalah bahasa yang digunakan untuk menerjemahkan setiap perintah dalam website yang pada saat diakses. Jenis bahasa program sangat menentukan statis, dinamis atau interaktifnya sebuah website. Semakin banyak ragam bahasa program yang digunakan maka akan terlihat website semakin dinamis, dan interaktif serta terlihat bagus.\nBeragam bahasa program saat ini telah hadir untuk mendukung kualitas website. Jenis jenis bahasa program yang banyak dipakai para desainer website antara lain HTML, ASP, PHP, JSP, Java Scripts, Java applets, XML, Ajax dsb. Bahasa dasar yang dipakai setiap situs adalah HTML sedangkan PHP, ASP, JSP dan lainnya merupakan bahasa pendukung yang bertindak sebagai pengatur dinamis, dan interaktifnya situs.\nBahasa program ASP, PHP, JSP atau lainnya bisa dibuat sendiri. Bahasa program ini biasanya digunakan untuk membangun portal berita, artikel, forum diskusi, buku tamu, anggota organisasi, email, mailing list dan lain sebagainya yang memerlukan update setiap saat.\n\n\n\n\n\n\nDesain website.\nSetelah melakukan penyewaan domain name dan web hosting serta penguasaan bahasa program (scripts program), unsur website yang penting dan utama adalah desain. Desain website menentukan kualitas dan keindahan sebuah website. Desain sangat berpengaruh kepada penilaian pengunjung akan bagus tidaknya sebuah website.\nUntuk membuat website biasanya dapat dilakukan sendiri atau menyewa jasa website designer. Saat ini sangat banyak jasa web designer, terutama di kota-kota besar. Perlu diketahui bahwa kualitas situs sangat ditentukan oleh kualitas designer. Semakin banyak penguasaan web designer tentang beragam program/software pendukung pembuatan situs maka akan dihasilkan situs yang semakin berkualitas, demikian pula sebaliknya. Jasa web designer ini yang umumnya memerlukan biaya yang tertinggi dari seluruh biaya pembangunan situs dan semuanya itu tergantung kualitas designer. Program-program desain website salah satunya adalah Macromedia Firework, Adobe Photoshop, Adobe Dreamweaver, Microsoft Frontpage, dll.\n\n\n\n\n\n\nProgram transfer data ke pusat data.\nPara web designer mengerjakan website dikomputernya sendiri. Berbagai bahasa program, data informasi teks, gambar, video, dan suara telah menjadi file-file pendukung adanya website. File tersebut bisa dibuka menggunakan program penjelajah (browser) sehingga terlihatlah sebuah website utuh di dalam komputer sendiri (offline). Tetapi file-file tersebut perlu untuk diletakkan dirumah hosting versi online agar terakses ke seluruh dunia. Pengguna akan diberikan akses FTP (File Transfer Protocol) setelah memesan sebuah web hosting untuk memindahkan file-file website ke pusat data web hosting. Untuk dapat menggunakan FTP diperlukan sebuah program FTP, misalnya WS FTP, Smart FTP, Cute FTP, dll. Program FTP ini banyak ditemui di internet dengan status penggunaan gratis maupun harus membayar. Para web designer pun dapat menggunakan fasilitas FTP yang terintegrasi dengan program pembuat website, misal Adobe Dreamweaver.\n\n\n\n\n\n\nPublikasi website.\nKeberadaan website tidak ada gunanya dibangun tanpa dikunjungi atau dikenal oleh masyarakat atau pengunjung internet. Karena efektif tidaknya situs sangat tergantung dari besarnya pengunjung dan komentar yang masuk. Untuk mengenalkan situs kepada masyarakat memerlukan apa yang disebut publikasi atau promosi.\nPublikasi situs di masyarakat dapat dilakukan dengan berbagai cara seperti dengan pamlet-pamlet, selebaran, baliho, kartu nama dan lain sebagainya tapi cara ini bisa dikatakan masih kurang efektif dan sangat terbatas. Cara yang biasanya dilakukan dan paling efektif dengan tak terbatas ruang atau waktu adalah publikasi langsung di internet melalui search engine-search engine (mesin pencari, spt : Yahoo, Google, MSN, Search Indonesia, dsb).\nCara publikasi di search engine ada yang gratis dan ada pula yang membayar. Yang gratis biasanya terbatas dan cukup lama untuk bisa masuk dan dikenali di search engine terkenal seperti Yahoo atau Google. Cara efektif publikasi adalah dengan membayar, walaupun harus sedikit mengeluarkan akan tetapi situs cepat masuk ke search engine dan dikenal oleh pengunjung.\n\n\n\n\n\n\nb. Pemeliharaan Website\n\n\nUntuk mendukung kelanjutan dari situs diperlukan pemeliharaan setiap waktu sesuai yang diinginkan seperti penambahan informasi, berita, artikel, link, gambar atau lain sebagainya. Tanpa pemeliharaan yang baik situs akan terkesan membosankan atau monoton juga akan segera ditinggal pengunjung.\n\n\nPemeliharaan situs dapat dilakukan per periode tertentu seperti tiap hari, tiap minggu atau tiap bulan sekali secara rutin atau secara periodik saja tergantung kebutuhan (tidak rutin). Pemeliharaan rutin biasanya dipakai oleh situs-situs berita, penyedia artikel, organisasi atau lembaga pemerintah. Sedangkan pemeliharaan periodik bisanya untuk situs-situs pribadi, penjualan/e-commerce, dan lain sebagainya.\n\n\nc. PERPANJANGAN MASA SEWA DOMAIN NAME DAN WEB HOSTING.\n\n\nPerlu dipahami bahwa domain name dan web hosting berstatus sewa. Selama kedua hal itu dibayarkan masa sewa perpanjangannya, maka Anda berhak untuk memilikinya dan mempergunakannya. Banyak terjadi kasus kelupaan dalam memperpanjang masa sewanya, atau sulit untuk menghubungi pihak ketiga (web designer) sebagai perantara pendaftaran awal, maka akan berakibat fatal. Anda akan kehilangan domain name sebagai identitas dalam dunia internet. Pastikan Anda mengingat untuk memperpanjang masa sewanya. Arti penting domain name perlu Anda pahami.", 
            "title": "Website"
        }, 
        {
            "location": "/menu/web_server/website/#website", 
            "text": "", 
            "title": "Website"
        }, 
        {
            "location": "/menu/web_server/website/#penjelasan", 
            "text": "Website atau situs dapat diartikan sebagai kumpulan halaman yang menampilkan informasi data teks, data gambar diam atau gerak, data animasi, suara, video dan atau gabungan dari semuanya, baik yang bersifat statis maupun dinamis yang membentuk satu rangkaian bangunan yang saling terkait dimana masing-masing dihubungkan dengan jaringan-jaringan halaman (hyperlink). Bersifat statis apabila isi informasi website tetap, jarang berubah, dan isi informasinya searah hanya dari pemilik website. Bersifat dinamis apabila isi informasi website selalu berubah-ubah, dan isi informasinya interaktif dua arah berasal dari pemilik serta pengguna website. Contoh website statis adalah berisi profil perusahaan, sedangkan website dinamis adalah seperti Friendster, Multiply, dll. Dalam sisi pengembangannya, website statis hanya bisa diupdate oleh pemiliknya saja, sedangkan website dinamis bisa diupdate oleh pengguna maupun pemilik.  Dalam mencari informasi dari internet, pengguna akan menuju ke sebuah alamat unik internet (misal: www.namawebsite.com) yang disebut nama domain (Domain Name/URL \u2013 Uniform Resource Locator) dan menemukan informasi berbentuk teks, gambar diam atau bergerak, animasi bergerak, suara ataupun video dalam sebuah media, yang disebut dengan website atau situs. Website ini dibuka melalui sebuah program penjelajah (Browser) yang berada di sebuah komputer. Program penjelajah yang bisa digunakan dalam komputer diantaranya: IE (Internet Explorer), Mozilla, Firefox, Netscape, Opera   a. Unsur-unsur dalam penyediaan website\nUntuk menyediakan sebuah website, maka harus tersedia unsur-unsur penunjangnya, adalah sebagai berikut:    Nama domain (Domain name/URL \u2013 Uniform Resource Locator)\nNama domain atau biasa disebut dengan Domain Name atau URL adalah alamat unik di dunia internet yang digunakan untuk mengidentifikasi sebuah website, atau dengan kata lain domain name adalah alamat yang digunakan untuk menemukan sebuah website pada dunia internet. Contoh : http://www.baliorange.net\nNama domain diperjualbelikan secara bebas di internet dengan status sewa tahunan. Setelah Nama Domain itu terbeli di salah satu penyedia jasa pendaftaran, maka pengguna disediakan sebuah kontrol panel untuk administrasinya. Jika pengguna lupa/tidak memperpanjang masa sewanya, maka nama domain itu akan di lepas lagi ketersediaannya untuk umum. Nama domain sendiri mempunyai identifikasi ekstensi/akhiran sesuai dengan kepentingan dan lokasi keberadaan website tersebut. Contoh nama domain ber-ekstensi internasional adalah com, net, org, info, biz, name, ws. Contoh nama domain ber-ekstensi lokasi Negara Indonesia adalah :   .co.id : Untuk Badan Usaha yang mempunyai badan hukum sah  .ac.id : Untuk Lembaga Pendidikan  .go.id : Khusus untuk Lembaga Pemerintahan Republik Indonesia  .mil.id : Khusus untuk Lembaga Militer Republik Indonesia  .or.id : Untuk segala macam organisasi yand tidak termasuk dalam kategori \u201cac.id\u201d,\u201dco.id\u201d,\u201dgo.id\u201d,\u201dmil.id\u201d dan lain lain  .war.net.id : untuk industri warung internet di Indonesia  .sch.id : khusus untuk Lembaga Pendidikan yang menyelenggarakan pendidikan seperti SD, SMP dan atau SMU  .web.id : Ditujukan bagi badan usaha, organisasi ataupun perseorangan yang melakukan kegiatannya di World Wide Web.     Rumah tempat website (Web hosting)\nWeb Hosting dapat diartikan sebagai ruangan yang terdapat dalam harddisk tempat menyimpan berbagai data, file-file, gambar, video, data email, statistik, database dan lain sebagainya yang akan ditampilkan di website. Besarnya data yang bisa dimasukkan tergantung dari besarnya web hosting yang disewa/dipunyai, semakin besar web hosting semakin besar pula data yang dapat dimasukkan dan ditampilkan dalam website.\nWeb Hosting juga diperoleh dengan menyewa. Pengguna akan memperoleh kontrol panel yang terproteksi dengan username dan password untuk administrasi websitenya. Besarnya hosting ditentukan ruangan harddisk dengan ukuran MB (Mega Byte) atau GB (Giga Byte). Lama penyewaan web hosting rata-rata dihitung per tahun. Penyewaan hosting dilakukan dari perusahaan-perusahaan penyewa web hosting yang banyak dijumpai baik di Indonesia maupun Luar Negeri. Lokasi peletakan pusat data (datacenter) web hosting bermacam-macam. Ada yang di Jakarta, Singapore, Inggris, Amerika, dll dengan harga sewa bervariasi.    Bahasa Program (Scripts Program).\nAdalah bahasa yang digunakan untuk menerjemahkan setiap perintah dalam website yang pada saat diakses. Jenis bahasa program sangat menentukan statis, dinamis atau interaktifnya sebuah website. Semakin banyak ragam bahasa program yang digunakan maka akan terlihat website semakin dinamis, dan interaktif serta terlihat bagus.\nBeragam bahasa program saat ini telah hadir untuk mendukung kualitas website. Jenis jenis bahasa program yang banyak dipakai para desainer website antara lain HTML, ASP, PHP, JSP, Java Scripts, Java applets, XML, Ajax dsb. Bahasa dasar yang dipakai setiap situs adalah HTML sedangkan PHP, ASP, JSP dan lainnya merupakan bahasa pendukung yang bertindak sebagai pengatur dinamis, dan interaktifnya situs.\nBahasa program ASP, PHP, JSP atau lainnya bisa dibuat sendiri. Bahasa program ini biasanya digunakan untuk membangun portal berita, artikel, forum diskusi, buku tamu, anggota organisasi, email, mailing list dan lain sebagainya yang memerlukan update setiap saat.    Desain website.\nSetelah melakukan penyewaan domain name dan web hosting serta penguasaan bahasa program (scripts program), unsur website yang penting dan utama adalah desain. Desain website menentukan kualitas dan keindahan sebuah website. Desain sangat berpengaruh kepada penilaian pengunjung akan bagus tidaknya sebuah website.\nUntuk membuat website biasanya dapat dilakukan sendiri atau menyewa jasa website designer. Saat ini sangat banyak jasa web designer, terutama di kota-kota besar. Perlu diketahui bahwa kualitas situs sangat ditentukan oleh kualitas designer. Semakin banyak penguasaan web designer tentang beragam program/software pendukung pembuatan situs maka akan dihasilkan situs yang semakin berkualitas, demikian pula sebaliknya. Jasa web designer ini yang umumnya memerlukan biaya yang tertinggi dari seluruh biaya pembangunan situs dan semuanya itu tergantung kualitas designer. Program-program desain website salah satunya adalah Macromedia Firework, Adobe Photoshop, Adobe Dreamweaver, Microsoft Frontpage, dll.    Program transfer data ke pusat data.\nPara web designer mengerjakan website dikomputernya sendiri. Berbagai bahasa program, data informasi teks, gambar, video, dan suara telah menjadi file-file pendukung adanya website. File tersebut bisa dibuka menggunakan program penjelajah (browser) sehingga terlihatlah sebuah website utuh di dalam komputer sendiri (offline). Tetapi file-file tersebut perlu untuk diletakkan dirumah hosting versi online agar terakses ke seluruh dunia. Pengguna akan diberikan akses FTP (File Transfer Protocol) setelah memesan sebuah web hosting untuk memindahkan file-file website ke pusat data web hosting. Untuk dapat menggunakan FTP diperlukan sebuah program FTP, misalnya WS FTP, Smart FTP, Cute FTP, dll. Program FTP ini banyak ditemui di internet dengan status penggunaan gratis maupun harus membayar. Para web designer pun dapat menggunakan fasilitas FTP yang terintegrasi dengan program pembuat website, misal Adobe Dreamweaver.    Publikasi website.\nKeberadaan website tidak ada gunanya dibangun tanpa dikunjungi atau dikenal oleh masyarakat atau pengunjung internet. Karena efektif tidaknya situs sangat tergantung dari besarnya pengunjung dan komentar yang masuk. Untuk mengenalkan situs kepada masyarakat memerlukan apa yang disebut publikasi atau promosi.\nPublikasi situs di masyarakat dapat dilakukan dengan berbagai cara seperti dengan pamlet-pamlet, selebaran, baliho, kartu nama dan lain sebagainya tapi cara ini bisa dikatakan masih kurang efektif dan sangat terbatas. Cara yang biasanya dilakukan dan paling efektif dengan tak terbatas ruang atau waktu adalah publikasi langsung di internet melalui search engine-search engine (mesin pencari, spt : Yahoo, Google, MSN, Search Indonesia, dsb).\nCara publikasi di search engine ada yang gratis dan ada pula yang membayar. Yang gratis biasanya terbatas dan cukup lama untuk bisa masuk dan dikenali di search engine terkenal seperti Yahoo atau Google. Cara efektif publikasi adalah dengan membayar, walaupun harus sedikit mengeluarkan akan tetapi situs cepat masuk ke search engine dan dikenal oleh pengunjung.    b. Pemeliharaan Website  Untuk mendukung kelanjutan dari situs diperlukan pemeliharaan setiap waktu sesuai yang diinginkan seperti penambahan informasi, berita, artikel, link, gambar atau lain sebagainya. Tanpa pemeliharaan yang baik situs akan terkesan membosankan atau monoton juga akan segera ditinggal pengunjung.  Pemeliharaan situs dapat dilakukan per periode tertentu seperti tiap hari, tiap minggu atau tiap bulan sekali secara rutin atau secara periodik saja tergantung kebutuhan (tidak rutin). Pemeliharaan rutin biasanya dipakai oleh situs-situs berita, penyedia artikel, organisasi atau lembaga pemerintah. Sedangkan pemeliharaan periodik bisanya untuk situs-situs pribadi, penjualan/e-commerce, dan lain sebagainya.  c. PERPANJANGAN MASA SEWA DOMAIN NAME DAN WEB HOSTING.  Perlu dipahami bahwa domain name dan web hosting berstatus sewa. Selama kedua hal itu dibayarkan masa sewa perpanjangannya, maka Anda berhak untuk memilikinya dan mempergunakannya. Banyak terjadi kasus kelupaan dalam memperpanjang masa sewanya, atau sulit untuk menghubungi pihak ketiga (web designer) sebagai perantara pendaftaran awal, maka akan berakibat fatal. Anda akan kehilangan domain name sebagai identitas dalam dunia internet. Pastikan Anda mengingat untuk memperpanjang masa sewanya. Arti penting domain name perlu Anda pahami.", 
            "title": "Penjelasan"
        }, 
        {
            "location": "/menu/web_server/xampp/", 
            "text": "XAMPP\n\n\n\n\nA. Penjelasan\n\n\nXAMPP adalah perangkat lunak ( free software) bebas, yang mendukung untuk banyak sistem operasi, yang  merupakan kompilasi dari beberapa program.\nFungsi XAMPP sendiri adalah sebagai server yang berdiri sendiri (localhost), yang terdiri beberapa program antara lain : Apache HTTP Server, MySQL database, dan penerjemah bahasa yang ditulis dengan bahasa pemrograman PHP dan Perl.\n\n\na. Komponen- komponen XAMPP, yaitu :\n\n\n\n\nX : Program ini dapat dijalankan di banyak sistem operasi, seperti Windows, Linux, Mac OS, dan Solaris.\n\n\nA : Apache, server aplikasi Web. Apache tugas utama adalah untuk menghasilkan halaman web yang benar kepada pengguna terhadap kode PHP yang sudah dituliskan oleh pembuat halaman web. jika perlu kode PHP juga berdasarkan yang tertulis, dapat database diakses dulu (misalnya MySQL) untuk mendukung halaman web yang dihasilkan.\n\n\nM : MySQL, server aplikasi database. Pertumbuhannya disebut SQL singkatan dari Structured Query Language. SQL merupakan bahasa terstruktur yang difungsikan untuk mengolah database. MySQL dapat digunakan untuk membuat dan mengelola database dan isinya. Bisa juga memanfaatkan MySQL guna untuk menambahkan, mengubah, dan menghapus data dalam database.\n\n\nP : PHP, bahasa pemrograman web. Bahasa pemrograman PHP adalah bahasa pemrograman untuk membuat web yang server-side scripting. PHP digunakan untuk membuat halaman web dinamis. Sistem manajemen database yang sering digunakan dengan PHP adalah MySQL. namun PHP juga mendukung Pengelolaan sistem database Oracle, Microsoft Access, Interbase, d-base, PostgreSQL, dan sebagainya.\n\n\nP : Perl, bahasa pemrograman untuk semua tujuan, pertama kali dikembangkan oleh Larry Wall, mesin Unix. Perl dirilis pertama kali tanggal 18 Desember 1987 yang ditandai dengan keluarnya Perl 1. Pada versi-versi selanjutnya, Perl juga tersedia untuk berbagai sistem operasi Unix (SunOS, Linux, BSD, HP-UX), juga tersedia untuk sistem operasi seperti DOS, Windows, PowerPC, BeOS, VMS, EBCDIC, dan PocketPC.\n\n\n\n\n\n\nB. Cara Kerja\n\n\nUntuk menggunakan XAMPP kamu pastinya harus punya dulu aplikasinya. Aplikasi/Software web server lokal XAMPP ini dapat di unduh secara gratis di www.apachefriends.org. Ada banyak sekali versi XAMPP disana. Untuk mengembangkan sebuah situs web, XAMPP versi 5 mendukung bahasa pemrograman PHP 5 dengan database MySQL, sedangkan versi 7 mendukung bahasa pemrograman PHP terbaru, yaitu PHP 7 dengan database MySQLi.\n\n\n\n\n\n\nBeberapa halaman dari Web Server Lokal XAMPP\n\n\na. Control Panel\n\n\nHalaman ini seperti kunci. Untuk menghidupkan XAMPP, kamu harus membuka halaman Control Panel. Lalu nyalakan sistem operasi sesuai program yang ingin digunakan. Untuk mendesain halaman web, bisanya yang dihidupkan hanyalah Apache dan MySQL.\n\n\nb. Localhost\n\n\nIyap jadi ini adalah halaman untuk mengakses halaman web kita. Untuk mengetest apakah aplikasi sudah menyala, kamu tinggal mengakses halaman di browser dengan mengetik localhost pada Address Bar.\n\n\nc. Htdocs\n\n\nNah ini adalah halaman untuk membuat halaman webnya. Setelah kamu menginstal XAMPP, maka akan ada halaman htdocs ini yang berlokasi (My Computer -\n Local Disk(C) -\n xampp -\n htdocs). Untuk membuat halaman web, kamu harus membuat sebuah folder di htdocs, lalu isi folder tersebut dengan kode - kode halaman website. Untuk mengaksesnya, kamu hanya perlu membuka browser dan ketik localhost/(NAMA_FOLDER) pada address bar. Contohnya adalah halaman berikut ini :\n\n\nJadi disini saya mengakses halaman web yang berada di folder blog pada folder htdocs.\n\n\nBerikut ini adalah tampilan halamannya :\n\n\nd. PHPMYADMIN\n\n\nHalaman ini digunakan untuk membuat sebuah database yang berfungsi untuk menyimpan data dari halaman web. Jadi sebenarnya halaman seluruh isi dari halaman web disimpan dalam database. Lalu data dipanggil menggunakan Bahasa Pemrograman PHP sehingga dapat muncul di browser dan dimodifikasi. Untuk mengakses halaman PHPMYADMIN, kamu hanya perlu mengetik localhost/phpmyadmin pada browser.\n\n\nDi halaman phpmyadmin ini ada beberapa menu/tab. Fungsinya adalah sebagai berikut.\n\n\nTab Database : Untuk membuat database halaman web.\n\n\nTab SQL : Untuk membuat database menggunakan SQL. Jadi jika kamu sudah memiliki file berekstensi/format .sql, kamu tidak perlu repot membuat database. Cukup meletakan seluruh isi file ke halaman SQL.\n\n\nTab Status : Untuk menampilkan status dari aplikasi XAMPP.\n\n\nTab Users : Untuk mengedit nama pengguna dan password XAMPP. Ini digunakan untuk menghubungkan database ke halaman web.\n\n\nTab Export : Untuk mengunduh kode SQL pada database.\n\n\nTab Import : Untuk mengimpor kode SQL. Fungsinya sama seperti tab SQL, namun jika tab SQL mengharuskan isi file sql untuk menambah database, kamu memerlukan file berekstensi/format .sql nya. Lalu file diletakan di halaman Import.\n\n\nTab Settings : Untuk mengelola dan mengatur jalannya aplikasi\n\n\nDan lainnya...", 
            "title": "XAMPP"
        }, 
        {
            "location": "/menu/web_server/xampp/#xampp", 
            "text": "", 
            "title": "XAMPP"
        }, 
        {
            "location": "/menu/web_server/xampp/#a-penjelasan", 
            "text": "XAMPP adalah perangkat lunak ( free software) bebas, yang mendukung untuk banyak sistem operasi, yang  merupakan kompilasi dari beberapa program.\nFungsi XAMPP sendiri adalah sebagai server yang berdiri sendiri (localhost), yang terdiri beberapa program antara lain : Apache HTTP Server, MySQL database, dan penerjemah bahasa yang ditulis dengan bahasa pemrograman PHP dan Perl.  a. Komponen- komponen XAMPP, yaitu :   X : Program ini dapat dijalankan di banyak sistem operasi, seperti Windows, Linux, Mac OS, dan Solaris.  A : Apache, server aplikasi Web. Apache tugas utama adalah untuk menghasilkan halaman web yang benar kepada pengguna terhadap kode PHP yang sudah dituliskan oleh pembuat halaman web. jika perlu kode PHP juga berdasarkan yang tertulis, dapat database diakses dulu (misalnya MySQL) untuk mendukung halaman web yang dihasilkan.  M : MySQL, server aplikasi database. Pertumbuhannya disebut SQL singkatan dari Structured Query Language. SQL merupakan bahasa terstruktur yang difungsikan untuk mengolah database. MySQL dapat digunakan untuk membuat dan mengelola database dan isinya. Bisa juga memanfaatkan MySQL guna untuk menambahkan, mengubah, dan menghapus data dalam database.  P : PHP, bahasa pemrograman web. Bahasa pemrograman PHP adalah bahasa pemrograman untuk membuat web yang server-side scripting. PHP digunakan untuk membuat halaman web dinamis. Sistem manajemen database yang sering digunakan dengan PHP adalah MySQL. namun PHP juga mendukung Pengelolaan sistem database Oracle, Microsoft Access, Interbase, d-base, PostgreSQL, dan sebagainya.  P : Perl, bahasa pemrograman untuk semua tujuan, pertama kali dikembangkan oleh Larry Wall, mesin Unix. Perl dirilis pertama kali tanggal 18 Desember 1987 yang ditandai dengan keluarnya Perl 1. Pada versi-versi selanjutnya, Perl juga tersedia untuk berbagai sistem operasi Unix (SunOS, Linux, BSD, HP-UX), juga tersedia untuk sistem operasi seperti DOS, Windows, PowerPC, BeOS, VMS, EBCDIC, dan PocketPC.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/web_server/xampp/#b-cara-kerja", 
            "text": "Untuk menggunakan XAMPP kamu pastinya harus punya dulu aplikasinya. Aplikasi/Software web server lokal XAMPP ini dapat di unduh secara gratis di www.apachefriends.org. Ada banyak sekali versi XAMPP disana. Untuk mengembangkan sebuah situs web, XAMPP versi 5 mendukung bahasa pemrograman PHP 5 dengan database MySQL, sedangkan versi 7 mendukung bahasa pemrograman PHP terbaru, yaitu PHP 7 dengan database MySQLi.    Beberapa halaman dari Web Server Lokal XAMPP  a. Control Panel  Halaman ini seperti kunci. Untuk menghidupkan XAMPP, kamu harus membuka halaman Control Panel. Lalu nyalakan sistem operasi sesuai program yang ingin digunakan. Untuk mendesain halaman web, bisanya yang dihidupkan hanyalah Apache dan MySQL.  b. Localhost  Iyap jadi ini adalah halaman untuk mengakses halaman web kita. Untuk mengetest apakah aplikasi sudah menyala, kamu tinggal mengakses halaman di browser dengan mengetik localhost pada Address Bar.  c. Htdocs  Nah ini adalah halaman untuk membuat halaman webnya. Setelah kamu menginstal XAMPP, maka akan ada halaman htdocs ini yang berlokasi (My Computer -  Local Disk(C) -  xampp -  htdocs). Untuk membuat halaman web, kamu harus membuat sebuah folder di htdocs, lalu isi folder tersebut dengan kode - kode halaman website. Untuk mengaksesnya, kamu hanya perlu membuka browser dan ketik localhost/(NAMA_FOLDER) pada address bar. Contohnya adalah halaman berikut ini :  Jadi disini saya mengakses halaman web yang berada di folder blog pada folder htdocs.  Berikut ini adalah tampilan halamannya :  d. PHPMYADMIN  Halaman ini digunakan untuk membuat sebuah database yang berfungsi untuk menyimpan data dari halaman web. Jadi sebenarnya halaman seluruh isi dari halaman web disimpan dalam database. Lalu data dipanggil menggunakan Bahasa Pemrograman PHP sehingga dapat muncul di browser dan dimodifikasi. Untuk mengakses halaman PHPMYADMIN, kamu hanya perlu mengetik localhost/phpmyadmin pada browser.  Di halaman phpmyadmin ini ada beberapa menu/tab. Fungsinya adalah sebagai berikut.  Tab Database : Untuk membuat database halaman web.  Tab SQL : Untuk membuat database menggunakan SQL. Jadi jika kamu sudah memiliki file berekstensi/format .sql, kamu tidak perlu repot membuat database. Cukup meletakan seluruh isi file ke halaman SQL.  Tab Status : Untuk menampilkan status dari aplikasi XAMPP.  Tab Users : Untuk mengedit nama pengguna dan password XAMPP. Ini digunakan untuk menghubungkan database ke halaman web.  Tab Export : Untuk mengunduh kode SQL pada database.  Tab Import : Untuk mengimpor kode SQL. Fungsinya sama seperti tab SQL, namun jika tab SQL mengharuskan isi file sql untuk menambah database, kamu memerlukan file berekstensi/format .sql nya. Lalu file diletakan di halaman Import.  Tab Settings : Untuk mengelola dan mengatur jalannya aplikasi  Dan lainnya...", 
            "title": "B. Cara Kerja"
        }, 
        {
            "location": "/menu/virtual_box/virtualBox/", 
            "text": "Virtual Box\n\n\n\n\nA. Penjelasan\n\n\nVirtualBox adalah sebuah software yang berfungsi untuk metode pembelajaran dalam menginstall OS (Operating System) secara virtual. Jadi pada intinya anda jika ingin belajar menginstall PC tidak perlu membongkar dan install ulang, cukup menggunakan VirtualBox anda pun bisa menginstall OS ke dalam PC. Hanya saja sifatnya virtual, tetapi tidak akan jauh beda dengan yang aslinya. Kata virtualisasi juga merujuk ke kamus Oxford (Convert \"something\" to a computer-generated simulation of reality) yang artinya Mengubah atau mengkonversi ke bentuk simulasi dari bentuk yang real/nyata.\n\n\nOracle VM VirtualBox atau sering disebut dengan VirtualBox adalah perangkat lunak virtualisasi yang dapat digunakan untuk mengeksekusi sistem operasi \u201ctambahan\u201d di dalam sistem operasi \u201cutama\u201d. Sebagai contoh, jika seseorang mempunyai sistem operasi MS Windows yang terpasang di komputernya, maka yang bersangkutan dapat pula menjalankan sistem operasi lain yang diinginkan di dalam sistem operasi MS Windows tersebut.\nVirtualBox bebas didownload dan digunakan (lisensi GNU GPL versi 2) serta mendukung banyak jenis sistem operasi, baik untuk versi 32 bit maupun 64 bit, baik sebagai host, mulai sistem operasi Windows, Linux, Macintosh, dan Solaris, serta sebagai guest untuk lebih banyak sistem operasi, mulai dari Windows (NT 4.0, 2000, XP, 2003 Server, Vista, Windows 7, Windows 8), DOS/Windows 3.x, Linux (2.4, 2.6 dan 3.x), Solaris dan OpenSolaris, OS/2, sampai OpenBSD.: Cara Install \n\n\n\n\nB. Tutorial Installasi\n\n\nInstall Virtual Box\n\n\n\n\n\n\nInstalasi VirtualBox dapat menggunakan file instalasi (offline) atau secara online. Instalasi online hanya dapat dilakukan untuk hosts Linux. Untuk sistem operasi Windows (32 bit atau 64 bit), download file aplikasi VirtualBox di bagian VirtualBox for Windows hosts. Selanjutnya klik dua kali pada file aplikasi VirtualBox yang telah didownload tersebut. \n\n \n\n\n\n\n\n\nSelanjutnya muncul layar selamat datang dalam proses instalasi VirtualBox. Klik tombol Next untuk proses selanjutnya.\n\n \n\n\n\n\n\n\nDi bagian ini, kita dapat menentukan fitur apa yang akan diinstall atau tidak, mulai dari dukungan terhadap USB, jaringan sampai script Phyton untuk VirtualBox API. Di bagian ini kita juga dapat menentukan lokasi folder VirtualBox akan diinstall. Biarkan seluruh pengaturan folder dan fitur aplikasi yang akan diinstall. Klik tombol Next untuk proses selanjutnya.               \n\n\n \n\n\n\n\n\n\nDi bagian ini, kita dapat menentukan apakah cara akses VirtualBox secara cepat (shortcut) akan diinstall pada bagian desktop dan Quick Launch Bar. Aktifkan Register file associations agar file dengan ekstensi terkait VirtualBox dikenal oleh sistem operasi. Klik tombol Next untuk proses selanjutnya.\n\n \n\n\n\n\n\n\nSelanjutnya muncul pemberitahuan, bahwa dalam proses instalasi, interface atau kartu jaringan yang ada pada komputer akan dinonaktifkan untuk sementara waktu, namun akan diaktifkan kembali secara otomatis, dengan tambahan kartu jaringan virtual bawaan dari VirtualBox. Klik tombol Yes untuk melanjutkan proses instalasi.\n\n \n\n\n\n\n\n\nVirtualBox sudah memiliki informasi yang diperlukan dan siap untuk diinstall. Klik tombol Install untuk memulai proses instalasi VirtualBox.\n\n \n\n\n\n\n\n\nPada Windows 7 atau Windows 8, akan muncul layar pop-up User Account Control yang meminta konfirmasi apakah kita akan menginstall aplikasi VirtualBox ke dalam komputer. Klik tombol Yes untuk memulai proses instalasi.\n\n \n\n\n\n\n\n\nProses instalasi dan penyalinan file aplikasi VirtualBox sedang dilakukan.\n\n \n\n\n\n\n\n\nApabila dalam proses instalasi muncul pertanyaan terkait keamanan sistem, tandai kotak konfirmasi Always trust software from \"Oracle Corporation\" kemudian tekan tombol Install. Jika yang ditekan adalah tombol Dont Install maka proses instalasi akan dihentikan. Dan apabila kotak konfirmasi Always trust software from \"Oracle Corporation\" tidak diaktifkan, maka pertanyaan terkait keamanan akan muncul beberapa kali dan kita harus menekan tombol Install untuk menyelesaikan proses instalasi VirtualBox.\n\n \n\n\n\n\n\n\nLayar selanjutnya menginformasikan bahwa instalasi VirtualBox sudah selesai dilakukan. Klik tombol Finish untuk keluar dari proses instalasi dan menjalankan aplikasi VirtualBox.\n\n \n\n\n\n\n\n\nTampilan ruangan aplikasi VirtualBox yang baru diinstall.\n\n\n\n\n\n\n\nJika sudah ada sistem operasi guest yang diinstall, maka akan ditampilkan pada layar sebelah kiri. Indikator Running pada sistem operasi guest menandakan sistem operasi guest sedang aktif. Sementara bagian sebelah kanan merupakan informasi tentang sistem operasi guest yang dipilih.", 
            "title": "Home"
        }, 
        {
            "location": "/menu/virtual_box/virtualBox/#virtual-box", 
            "text": "", 
            "title": "Virtual Box"
        }, 
        {
            "location": "/menu/virtual_box/virtualBox/#a-penjelasan", 
            "text": "VirtualBox adalah sebuah software yang berfungsi untuk metode pembelajaran dalam menginstall OS (Operating System) secara virtual. Jadi pada intinya anda jika ingin belajar menginstall PC tidak perlu membongkar dan install ulang, cukup menggunakan VirtualBox anda pun bisa menginstall OS ke dalam PC. Hanya saja sifatnya virtual, tetapi tidak akan jauh beda dengan yang aslinya. Kata virtualisasi juga merujuk ke kamus Oxford (Convert \"something\" to a computer-generated simulation of reality) yang artinya Mengubah atau mengkonversi ke bentuk simulasi dari bentuk yang real/nyata.  Oracle VM VirtualBox atau sering disebut dengan VirtualBox adalah perangkat lunak virtualisasi yang dapat digunakan untuk mengeksekusi sistem operasi \u201ctambahan\u201d di dalam sistem operasi \u201cutama\u201d. Sebagai contoh, jika seseorang mempunyai sistem operasi MS Windows yang terpasang di komputernya, maka yang bersangkutan dapat pula menjalankan sistem operasi lain yang diinginkan di dalam sistem operasi MS Windows tersebut.\nVirtualBox bebas didownload dan digunakan (lisensi GNU GPL versi 2) serta mendukung banyak jenis sistem operasi, baik untuk versi 32 bit maupun 64 bit, baik sebagai host, mulai sistem operasi Windows, Linux, Macintosh, dan Solaris, serta sebagai guest untuk lebih banyak sistem operasi, mulai dari Windows (NT 4.0, 2000, XP, 2003 Server, Vista, Windows 7, Windows 8), DOS/Windows 3.x, Linux (2.4, 2.6 dan 3.x), Solaris dan OpenSolaris, OS/2, sampai OpenBSD.: Cara Install", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/virtual_box/virtualBox/#b-tutorial-installasi", 
            "text": "", 
            "title": "B. Tutorial Installasi"
        }, 
        {
            "location": "/menu/virtual_box/virtualBox/#install-virtual-box", 
            "text": "Instalasi VirtualBox dapat menggunakan file instalasi (offline) atau secara online. Instalasi online hanya dapat dilakukan untuk hosts Linux. Untuk sistem operasi Windows (32 bit atau 64 bit), download file aplikasi VirtualBox di bagian VirtualBox for Windows hosts. Selanjutnya klik dua kali pada file aplikasi VirtualBox yang telah didownload tersebut.       Selanjutnya muncul layar selamat datang dalam proses instalasi VirtualBox. Klik tombol Next untuk proses selanjutnya.      Di bagian ini, kita dapat menentukan fitur apa yang akan diinstall atau tidak, mulai dari dukungan terhadap USB, jaringan sampai script Phyton untuk VirtualBox API. Di bagian ini kita juga dapat menentukan lokasi folder VirtualBox akan diinstall. Biarkan seluruh pengaturan folder dan fitur aplikasi yang akan diinstall. Klik tombol Next untuk proses selanjutnya.                      Di bagian ini, kita dapat menentukan apakah cara akses VirtualBox secara cepat (shortcut) akan diinstall pada bagian desktop dan Quick Launch Bar. Aktifkan Register file associations agar file dengan ekstensi terkait VirtualBox dikenal oleh sistem operasi. Klik tombol Next untuk proses selanjutnya.      Selanjutnya muncul pemberitahuan, bahwa dalam proses instalasi, interface atau kartu jaringan yang ada pada komputer akan dinonaktifkan untuk sementara waktu, namun akan diaktifkan kembali secara otomatis, dengan tambahan kartu jaringan virtual bawaan dari VirtualBox. Klik tombol Yes untuk melanjutkan proses instalasi.      VirtualBox sudah memiliki informasi yang diperlukan dan siap untuk diinstall. Klik tombol Install untuk memulai proses instalasi VirtualBox.      Pada Windows 7 atau Windows 8, akan muncul layar pop-up User Account Control yang meminta konfirmasi apakah kita akan menginstall aplikasi VirtualBox ke dalam komputer. Klik tombol Yes untuk memulai proses instalasi.      Proses instalasi dan penyalinan file aplikasi VirtualBox sedang dilakukan.      Apabila dalam proses instalasi muncul pertanyaan terkait keamanan sistem, tandai kotak konfirmasi Always trust software from \"Oracle Corporation\" kemudian tekan tombol Install. Jika yang ditekan adalah tombol Dont Install maka proses instalasi akan dihentikan. Dan apabila kotak konfirmasi Always trust software from \"Oracle Corporation\" tidak diaktifkan, maka pertanyaan terkait keamanan akan muncul beberapa kali dan kita harus menekan tombol Install untuk menyelesaikan proses instalasi VirtualBox.      Layar selanjutnya menginformasikan bahwa instalasi VirtualBox sudah selesai dilakukan. Klik tombol Finish untuk keluar dari proses instalasi dan menjalankan aplikasi VirtualBox.      Tampilan ruangan aplikasi VirtualBox yang baru diinstall.    Jika sudah ada sistem operasi guest yang diinstall, maka akan ditampilkan pada layar sebelah kiri. Indikator Running pada sistem operasi guest menandakan sistem operasi guest sedang aktif. Sementara bagian sebelah kanan merupakan informasi tentang sistem operasi guest yang dipilih.", 
            "title": "Install Virtual Box"
        }, 
        {
            "location": "/menu/linux_ubuntu/linuxUbuntu/", 
            "text": "Linux Ubuntu\n\n\n\n\nA. Penjelasan\n\n\nUbuntu adalah salah satu distribusi Linux yang berbasiskan pada Debian dan memiliki interface desktop. \n\n\n\n\nB. Tutorial Installasi\n\n\nInstall Ubuntu di Virtual Box\n\n\nTutorial install Linux Ubuntu 16.04 desktop dengan virtual box :\n\n\n\n\n\n\nSetelah kita selesai menginstall Virtual Box,langkah selanjutnya adalah menginstall Linux Ubuntu pada Virtual Box.Klik icon New dan akan tampil seperti digambar.Ketikkan Linux pada Name dan pilih version Linux nya\n\n\n\n\n\n\n\nLangkah berikutnya mengatur ukuran memori dan klik next/lanjut.\n\n\n\n\n\n\n\nLalu pilih penyimpanan hardisk dan klik buat\n\n\n\n\n\n\n\nPilih tipe hard disk seperti pada gambar dan klik next/lanjut\n\n\n\n\n\n\n\nPada penyimpanan hard disk fisik pilih yang dialokasikan secara dinamik\n\n\n\n\n\n\n\nPilih ukuran berkas dan klik buat\n\n\n\n\n\n\n\nMemproses tampilan Ubuntu\n\n\n\n\n\n\n\nDan inilah tampilan Linux Ubuntu\n\n\n\n\n\n\n\nInstall Ubuntu di Windows\n\n\nTutorial install Linux Ubuntu 16.04 desktop dual boot dengan windows :\n\n\n\n\n\n\nSaat anda masih berada pada Desktop Windows 7, tugas anda adalah membuat ruang kosong pada Hardisk di partisi C/System untuk tempat instalasi OS Ubuntu, caranya ialah klik Start --\n Computer --\n Manage.                                                 \n\n\n\n\n\n\n\n\nSelanjutnya pilih Disk Management --\n klik kanan pada partisi System/C lalu pilih Shrink Volume...                                      \n\n\n\n\n\n\n\n\nSebagai Contoh, Saya mebuat ruang kosong dengan ukuran/kapasitas 8156MB atau sekitar 8GB, jika anda sudah menetapkan besar ukuran untuk ruang kosong yang anda akan gunakan, maka silahkan klik Shrink.                                                                                      \n\n\n\n\n\n\n\n\nSetelah proses pembuatan ruang kosong untuk installasi Ubuntu selesai, maka yang harus anda sediakan adalah CD/DVD ubuntu bisa juga menggunakan USB Flashdisk, tapi untuk USB Flashdisk, caranya sedikit berbeda dengan artikel yang saya tulis ini, mungkin anda bisa menyesuaikannya,untuk cara pembuatan anda bisa lihat di situs resmi ubuntu. untuk Membuat CD/DVD untuk USB Flashdisk atau jika anda belum memiliki file installernya bisa download aplikasi instalisasi menggunakan CD/DVD / USB Flashdisk . Jika CD/DVD /USB Flashdisk sudah tersedia, maka anda bisa melanjutkan dengan me-restart PC/Laptop anda. Jangan Lupa Masukkan CD/DVD ke room dan setting boot dari CD/DVD.\n\n\n\n\n\n\nJika anda behasil masuk, maka akan ada tampilan seperti gambar di bawah ini lalu pilih bahasa yang akan anda gunakan selama menginstall.       \n\n\n\n\n\n\nPilih Something Else dan Klik Continue\n\n\n\n\nSelanjutnya pilih Free Space dan klik add.. untuk membuat ruang swap\n\n\n\n\nTentukan size untuk ruang swap yang akan dibuat, sebagai contoh saya menggunakan 500/500MB. Pada pilihan Use as pilih Swap area --\n OK\n\n\n\n\nUntuk tahap selanjutnya, klik add lagi untuk membuat partisi ubuntu. untuk kali ini kita menggunakan semua sisa size pada ruang kosong. Dan untuk pilihan Use as pilih ext4 journaling file system, sedangkan untuk Mount point tambahkan / (garis miring). Jika semua tahap sudah selesai tekan OK\n\n\n\n\nUntuk tahap ini tinggal menekan tombol Install Now dan ikuti langkah-langkah install-nya hingga selesai.", 
            "title": "Home"
        }, 
        {
            "location": "/menu/linux_ubuntu/linuxUbuntu/#linux-ubuntu", 
            "text": "", 
            "title": "Linux Ubuntu"
        }, 
        {
            "location": "/menu/linux_ubuntu/linuxUbuntu/#a-penjelasan", 
            "text": "Ubuntu adalah salah satu distribusi Linux yang berbasiskan pada Debian dan memiliki interface desktop.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/linux_ubuntu/linuxUbuntu/#b-tutorial-installasi", 
            "text": "", 
            "title": "B. Tutorial Installasi"
        }, 
        {
            "location": "/menu/linux_ubuntu/linuxUbuntu/#install-ubuntu-di-virtual-box", 
            "text": "Tutorial install Linux Ubuntu 16.04 desktop dengan virtual box :    Setelah kita selesai menginstall Virtual Box,langkah selanjutnya adalah menginstall Linux Ubuntu pada Virtual Box.Klik icon New dan akan tampil seperti digambar.Ketikkan Linux pada Name dan pilih version Linux nya    Langkah berikutnya mengatur ukuran memori dan klik next/lanjut.    Lalu pilih penyimpanan hardisk dan klik buat    Pilih tipe hard disk seperti pada gambar dan klik next/lanjut    Pada penyimpanan hard disk fisik pilih yang dialokasikan secara dinamik    Pilih ukuran berkas dan klik buat    Memproses tampilan Ubuntu    Dan inilah tampilan Linux Ubuntu", 
            "title": "Install Ubuntu di Virtual Box"
        }, 
        {
            "location": "/menu/linux_ubuntu/linuxUbuntu/#install-ubuntu-di-windows", 
            "text": "Tutorial install Linux Ubuntu 16.04 desktop dual boot dengan windows :    Saat anda masih berada pada Desktop Windows 7, tugas anda adalah membuat ruang kosong pada Hardisk di partisi C/System untuk tempat instalasi OS Ubuntu, caranya ialah klik Start --  Computer --  Manage.                                                      Selanjutnya pilih Disk Management --  klik kanan pada partisi System/C lalu pilih Shrink Volume...                                           Sebagai Contoh, Saya mebuat ruang kosong dengan ukuran/kapasitas 8156MB atau sekitar 8GB, jika anda sudah menetapkan besar ukuran untuk ruang kosong yang anda akan gunakan, maka silahkan klik Shrink.                                                                                           Setelah proses pembuatan ruang kosong untuk installasi Ubuntu selesai, maka yang harus anda sediakan adalah CD/DVD ubuntu bisa juga menggunakan USB Flashdisk, tapi untuk USB Flashdisk, caranya sedikit berbeda dengan artikel yang saya tulis ini, mungkin anda bisa menyesuaikannya,untuk cara pembuatan anda bisa lihat di situs resmi ubuntu. untuk Membuat CD/DVD untuk USB Flashdisk atau jika anda belum memiliki file installernya bisa download aplikasi instalisasi menggunakan CD/DVD / USB Flashdisk . Jika CD/DVD /USB Flashdisk sudah tersedia, maka anda bisa melanjutkan dengan me-restart PC/Laptop anda. Jangan Lupa Masukkan CD/DVD ke room dan setting boot dari CD/DVD.    Jika anda behasil masuk, maka akan ada tampilan seperti gambar di bawah ini lalu pilih bahasa yang akan anda gunakan selama menginstall.           Pilih Something Else dan Klik Continue   Selanjutnya pilih Free Space dan klik add.. untuk membuat ruang swap   Tentukan size untuk ruang swap yang akan dibuat, sebagai contoh saya menggunakan 500/500MB. Pada pilihan Use as pilih Swap area --  OK   Untuk tahap selanjutnya, klik add lagi untuk membuat partisi ubuntu. untuk kali ini kita menggunakan semua sisa size pada ruang kosong. Dan untuk pilihan Use as pilih ext4 journaling file system, sedangkan untuk Mount point tambahkan / (garis miring). Jika semua tahap sudah selesai tekan OK   Untuk tahap ini tinggal menekan tombol Install Now dan ikuti langkah-langkah install-nya hingga selesai.", 
            "title": "Install Ubuntu di Windows"
        }, 
        {
            "location": "/menu/linux_ubuntu/commandLine/", 
            "text": "CommandLine\n\n\n\n\nA. Penjelasan\n\n\nUbuntu sangat terkenal dengan CLI-nya (Command Line Interface). CLI sendiri adalah antar muka yang tidak menyediakan grafik, baik berupa gambar-gambar, jendela-jendela ataupun animasi-animasi yang bisa memanjakan pengguna, melainkan hanya berupa teks yang harus diketikkan oleh pengguna. Jadi, apabila user ingin melakukan operasi dalam sistem operasi tersebut, misalnya melakukan copy,  rename,  cut, delete, dan sebagainya,  maka pengguna harus megetikkan perintah berupa teks dengan cara manual dan bukan dengan klik-klik seperti pada interface GUI (Graphic User Interface).\n\n\nPada Ubuntu versi Desktop sudah menggunakan interface grafik, namun juga disediakan sebuah aplikasi yang diperuntukkan bagi pengguna yang ingin menggunakan tampilan/interface CLI, baik hanya untuk belajar atau memang keahliannya menggunakan CLI, karena memang cukup banyak hal yang bisa dilakukan dengan interface CLI ini yang tidak bisa dilakukan pada interface GUI, terlebih pada Ubuntu versi Server yang semuanya harus dilakukan dengan mode teks, walaupun sebenarnya bisa diinstalkan mode grafiknya. Aplikasi pada Ubuntu Desktop yang bisa digunakan untuk menggunakan mode teks adalah Terminal, yang bisa diakses dengan mengklik Aplication \u2013\n Accessories \u2013\n Terminal.\n\n\n\n\nB. Tutorial Penggunaan\n\n\nPerintah dasar Command Line\n\n\nPerintah dasar Command Line di Linux Ubuntu 16.04 desktop dengan virtual box\n\n\nPerintah-perintah Dasar di Linux Ubuntu.Ubuntu sangat terkenal dengan CLI-nya (Command Line Interface). CLI sendiri adalah antar muka yang tidak menyediakan grafik, baik berupa gambar-gambar, jendela-jendela ataupun animasi-animasi yang bisa memanjakan pengguna, melainkan hanya berupa teks yang harus diketikkan oleh pengguna. Jadi, apabila user ingin melakukan operasi dalam sistem operasi tersebut, misalnya melakukan copy,  rename,  cut, delete, dan sebagainya,  maka pengguna harus megetikkan perintah berupa teks dengan cara manual dan bukan dengan klik-klik seperti pada interface GUI (Graphic User Interface).\n\n\n\n\n\n\nBerikut ini adalah beberapa perintah yang bisa digunakan di sistem operasi Ubuntu pada mode CLI, baik Desktop maupun Server, yang juga banyak untuk bisa digunakan pada distro yang lain. Pada contoh ini saya menggunakan Ubuntu Desktop 10.10.\n\n\n1. sudo su\n\n\nDigunakan untuk login sebagai root/pengguna tertinggi\n\n\nSintaks : sudo su\n\n\n2. login\n\n\nDigunakan untuk login sebagai user lain, namun harus menjadi root dulu untuk bisa menjalankan peirntah ini.\n\n\nSintaks : login namauser\n\n\nContoh : login adam\n\n\n3. cd\n\n\nDigunakan untuk berpindah direktori\n\n\nSintaks : cd alamat_direktori\n\n\nContoh : cd /var/www\n\n\n4. pwd\n\n\nDigunakan untuk memperlihatkan di direktori mana posisi kita berada sekarang.\n\n\nSintaks : pwd\n\n\n5. ls\n\n\nDigunakan untuk melihat isi sebuah direktori.\n\n\nSintaks : ls\n\n\n6. cp\n\n\nDigunakan untuk melakukan copy file.\n\n\nSintaks : cp /direktori/file_yang_ingin_dicopy /direktori tujuan\n\n\nContoh : cp /etc/file1.txt /var/www\n\n\n7. mv\n\n\nDigunakan untuk melakukan memindahkan, cut atau rename file.\n\n\nSintaks :\n\n\nmv /direktori/file_yang_ingin_dicut /direktori tujuan (cut)\n\n\nmv /direktori/file_yang_ingin_direname /nama_baru_file (rename)\n\n\nContoh:\n\n\nmv /etc/file1.txt /var/www\n\n\nmv /etc/file1.txt file2.txt\n\n\n8. mkdir\n\n\nDigunakan untuk membuat folder baru.\n\n\nSintaks : mkdir nama_folder\n\n\nContoh : mkdir folder1\n\n\n9. rmdir\n\n\nDigunakan untuk menghapus folder.\n\n\nSintaks : rmdir nama_folder\n\n\nContoh : rmdir folder1\n\n\n10. touch\n\n\nDigunakan untuk membuat file baru.\n\n\nSintaks : touch nama_file\n\n\nContoh : touch file1.txt\n\n\n11. rm\n\n\nDigunakan untuk menghapus file.\n\n\nSintaks : rm nama_file\n\n\nContoh : rm file1.txt\n\n\n12. more\n\n\nDigunakan untuk menampilkan isi sebuah file\n\n\nSintaks : more nama_fie\n\n\nContoh : more file1.txt\n\n\n13. echo\n\n\nDigunakan untuk menuliskan sesuatu kata atau kalimat ke sebuah file.\n\n\nSintaks : echo \u201cisi pesan\u201d nama_file\n\n\nContoh : echo \u201cHai ini adalah contoh pesan\u201d \n file1.txt\n\n\n14. adduser\n\n\nDigunakan untuk menambah user baru.\n\n\nSintaks : adduser nama_user\n\n\nContoh : adduser adamkurniawan\n\n\n15. addgroup\n\n\nDigunakan untuk menambah group baru\n\n\nSintaks : addgroup nama_group\n\n\nContoh : addgroup grup1\n\n\n16. lsusb\n\n\nDigunakan untuk melihat perangkat usb yang sedang terkoneksi ke komputer\n\n\nSintaks : lsusb\n\n\n17. lspci\n\n\nDigunakan untuk melihat perangkat pci yang sedang terkoneksi ke komputer\n\n\nSintaks : lspci\n\n\n18. lshw\n\n\nDigunakan untuk melihat hardware komputer.\n\n\nSintaks : lshw\n\n\n19. dmesg\n\n\nDigunakan untuk melihat hardware yang sedang beraktifitas\n\n\nSintaks : dmseg\n\n\n20. top\n\n\nDigunakan untuk melihat proses yang sedang berjalan, seperti Task Manager pada Windows.\n\n\nSintaks : top\n\n\n21. cpuinfo\n\n\nDigunakan untuk melihat spesifikasi komputer.\n\n\nSintaks : more /proc/cpuinfo\n\n\n22. meminfo\n\n\nDigunakan untuk melihat status RAM\n\n\nSintaks : more /proc/meminfo\n\n\n23. clear\n\n\nDigunakan untuk membersihkan layar\n\n\nSintaks : clear\n\n\n24. halt\n\n\nDigunakan untuk mematikan komputer, namun harus sebagai root.\n\n\nSintaks : halt\n\n\n25. reboot\n\n\nDigunakan untuk merestart komputer, namun harus sebagai root.\n\n\nSintaks : reboot\n\n\n26. exit\n\n\nDigunakan untuk keluar dari terminal.\n\n\nSintaks : exit\n\n\n27. wget\n\n\nDigunakan untuk mendownload via terminal\n\n\nSintaks : wget link_download\n\n\nContoh : wget www.insightcalendar.com/Insight_Calendar_1-1_Setup.exe\n\n\n28. ifconfig\n\n\nDigunakan untuk melihat konfigurasi ethernet/kartu jaringan.\n\n\nSintaks : ifconfig\n\n\n29. apt-get\n\n\nDigunakan untuk memperoleh paket/software dari repository ubuntu secara online.\n\n\nSintax : apt-get nama_paket\n\n\nContoh :\n\n\napt-get update (untuk melakukan update repository)\n\n\napt-get update wine (untuk mendapatkan paket wine)\n\n\n30. tar\n\n\nDigunakan untuk melakukan extract file.\n\n\nSintaks : tar [parameter] nama_file\n\n\nContoh : tar -xzvf komodo-edit-5.2.4-4343-linux-libcpp6-x86.tar.gz\n\n\n31. nautilus\n\n\nDigunakan untuk membuka tampilan GUI secara langsung.\n\n\nSintaks : nautilus\n\n\nContoh : sudo nautilus (menggunakan mode GUI dengan status root)\n\n\n32. df -h\n\n\nmelihat sisa kapasitas harddisk.\n\n\nsintaks : df -h\n\n\n33. who\n     \n\n\ndigunakan untuk melihat nama login kita.\n\n\nsintaks : who    \n\n\n34. cat \n         \n\n\ndigunakan untuk membuka file.\n\n\nsintaks : cat        \n\n\ncontoh: cat test.txt\n\n\n35. date\n \n\n\nmelihat tanggal\n\n\nsintaks : date\n\n\n36. cal\n\n\nmelihat kalender\n\n\nsintaks : melihat tanggal\n\n\n37. hostname\n \n\n\nMenampilkan nama komputer.\n\n\nsintaks: hostname \n\n\n38. free\n     \n\n\nMelihat Free memory.\n\n\nsintaks: free     \n\n\n39. History\n\n\nmelihat perintah apa saja yang pernah diketik\n\n\nsintaks : History\n\n\n40. deluser\n\n\nMenghapus user dari sistem\n\n\nsintaks : deluser [nama user]\n\n\n\n\n\n\nuname -r = Melihat kernel yang digunakan pada OS\n\n\nuname -a = Informasi system kernel anda\n\n\ncat /proc/cpuinfo = Melihat file pada /proc directori yang bukan merupakan file nyata (not real files).\n\n\ncat /proc/interrupts = Melihat alamat interrupt yang dipakai.\n\n\ncat /proc/version = Versi dari Linux dan informasi lainnya.\n\n\ncat /proc/filesystems = Melihat filesystem yang digunakan.\n\n\ncat /etc/printcap = Melihat printer yang telah disetup\n\n\nfinger username = Melihat informasi user, coba jalankan; fingerroot\n\n\nlast = Melihat user sebelumnya yang telah login di komputer.\n\n\nuptime = Melihat jumlah waktu pemakaian komputer oleh seseorang, terhitung proses reboot terakhir.\n\n\nps (=print status)= Melihat proses-proses yang dijalankan oleh user\n\n\nps axu = Melihat seluruh proses yang dijalankan, walaupun tanpa terminal control, juga ditampilkan nama dari user untuk setiap proses.\n\n\ntop = Melihat proses yang berjalan, dengan urutan penggunaan cpu.\n\n\napropos =  Untuk mencari perintah pada sistem operasi yang mempunyai fungsi yang sama. \n\n\nchmod = Mengubah perizinan suatu direktori/file. \n\n\nwc = Menghitung jumlah kata, jumlah baris dan jumlah karakter dalam suatu file . \n\n\nman = Singkatan dari manual yaitu untuk menampilkan halaman manual untuk semua perintah UNIX.\n\n\ngrep = Mencari isi suatu file di sembarang directori. \n\n\npwd = Menampilkan nama direktori dimana Anda saat itu sedang berada.\n\n\nps = Digunakan untuk memonitor informasi tentang proses yang aktif dalam sistem UNIX. \n\n\nkill =  Digunakan untuk menghentikan proses yang sedang berjalan. \n\n\nbc = Perintah bc dapat digunakan sebagai calculator. \n\n\nwall = Pengiriman pesan oleh super user. \n\n\n:w di gunakan u/ menyimpan file or sama dengan (save).\n\n\n:q digunakan u/ keluar dari editor tandan mentimpan file.\n\n\n:wq digunakan u/ keluar dari editor sekaligus menyimpan file. \n\n\ntail = Menampilkan 10 baris terakhir dari suatu file.\n\n\nls \u2013l = Melihat semua file lengkap\n\n\nls -a = Menampilkan semua file atau direktori yang tersembunyi\n\n\nls -f = Menampilkan semua file atau direktori tanpa proses shorting\n\n\ngrep root /etc/passwd =  Mencari kata atau kalimat dalam file\n\n\n\n\n\n\nReferensi Ubuntu\n\n \n\n\n\n\n\n\nUnix/Linux Command Reference\n\n \n\n\n\n\n\n\nItu beberapa command yang saya ingat saat ini yang bisa digunakan dibanyak distro Linux, walaupun ada beberapa yang hanya khusus di Ubuntu saja. Jika ada yang saya ingat lagi, akan saya tambah.", 
            "title": "CommandLine"
        }, 
        {
            "location": "/menu/linux_ubuntu/commandLine/#commandline", 
            "text": "", 
            "title": "CommandLine"
        }, 
        {
            "location": "/menu/linux_ubuntu/commandLine/#a-penjelasan", 
            "text": "Ubuntu sangat terkenal dengan CLI-nya (Command Line Interface). CLI sendiri adalah antar muka yang tidak menyediakan grafik, baik berupa gambar-gambar, jendela-jendela ataupun animasi-animasi yang bisa memanjakan pengguna, melainkan hanya berupa teks yang harus diketikkan oleh pengguna. Jadi, apabila user ingin melakukan operasi dalam sistem operasi tersebut, misalnya melakukan copy,  rename,  cut, delete, dan sebagainya,  maka pengguna harus megetikkan perintah berupa teks dengan cara manual dan bukan dengan klik-klik seperti pada interface GUI (Graphic User Interface).  Pada Ubuntu versi Desktop sudah menggunakan interface grafik, namun juga disediakan sebuah aplikasi yang diperuntukkan bagi pengguna yang ingin menggunakan tampilan/interface CLI, baik hanya untuk belajar atau memang keahliannya menggunakan CLI, karena memang cukup banyak hal yang bisa dilakukan dengan interface CLI ini yang tidak bisa dilakukan pada interface GUI, terlebih pada Ubuntu versi Server yang semuanya harus dilakukan dengan mode teks, walaupun sebenarnya bisa diinstalkan mode grafiknya. Aplikasi pada Ubuntu Desktop yang bisa digunakan untuk menggunakan mode teks adalah Terminal, yang bisa diakses dengan mengklik Aplication \u2013  Accessories \u2013  Terminal.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/linux_ubuntu/commandLine/#b-tutorial-penggunaan", 
            "text": "", 
            "title": "B. Tutorial Penggunaan"
        }, 
        {
            "location": "/menu/linux_ubuntu/commandLine/#perintah-dasar-command-line", 
            "text": "Perintah dasar Command Line di Linux Ubuntu 16.04 desktop dengan virtual box  Perintah-perintah Dasar di Linux Ubuntu.Ubuntu sangat terkenal dengan CLI-nya (Command Line Interface). CLI sendiri adalah antar muka yang tidak menyediakan grafik, baik berupa gambar-gambar, jendela-jendela ataupun animasi-animasi yang bisa memanjakan pengguna, melainkan hanya berupa teks yang harus diketikkan oleh pengguna. Jadi, apabila user ingin melakukan operasi dalam sistem operasi tersebut, misalnya melakukan copy,  rename,  cut, delete, dan sebagainya,  maka pengguna harus megetikkan perintah berupa teks dengan cara manual dan bukan dengan klik-klik seperti pada interface GUI (Graphic User Interface).    Berikut ini adalah beberapa perintah yang bisa digunakan di sistem operasi Ubuntu pada mode CLI, baik Desktop maupun Server, yang juga banyak untuk bisa digunakan pada distro yang lain. Pada contoh ini saya menggunakan Ubuntu Desktop 10.10.  1. sudo su  Digunakan untuk login sebagai root/pengguna tertinggi  Sintaks : sudo su  2. login  Digunakan untuk login sebagai user lain, namun harus menjadi root dulu untuk bisa menjalankan peirntah ini.  Sintaks : login namauser  Contoh : login adam  3. cd  Digunakan untuk berpindah direktori  Sintaks : cd alamat_direktori  Contoh : cd /var/www  4. pwd  Digunakan untuk memperlihatkan di direktori mana posisi kita berada sekarang.  Sintaks : pwd  5. ls  Digunakan untuk melihat isi sebuah direktori.  Sintaks : ls  6. cp  Digunakan untuk melakukan copy file.  Sintaks : cp /direktori/file_yang_ingin_dicopy /direktori tujuan  Contoh : cp /etc/file1.txt /var/www  7. mv  Digunakan untuk melakukan memindahkan, cut atau rename file.  Sintaks :  mv /direktori/file_yang_ingin_dicut /direktori tujuan (cut)  mv /direktori/file_yang_ingin_direname /nama_baru_file (rename)  Contoh:  mv /etc/file1.txt /var/www  mv /etc/file1.txt file2.txt  8. mkdir  Digunakan untuk membuat folder baru.  Sintaks : mkdir nama_folder  Contoh : mkdir folder1  9. rmdir  Digunakan untuk menghapus folder.  Sintaks : rmdir nama_folder  Contoh : rmdir folder1  10. touch  Digunakan untuk membuat file baru.  Sintaks : touch nama_file  Contoh : touch file1.txt  11. rm  Digunakan untuk menghapus file.  Sintaks : rm nama_file  Contoh : rm file1.txt  12. more  Digunakan untuk menampilkan isi sebuah file  Sintaks : more nama_fie  Contoh : more file1.txt  13. echo  Digunakan untuk menuliskan sesuatu kata atau kalimat ke sebuah file.  Sintaks : echo \u201cisi pesan\u201d nama_file  Contoh : echo \u201cHai ini adalah contoh pesan\u201d   file1.txt  14. adduser  Digunakan untuk menambah user baru.  Sintaks : adduser nama_user  Contoh : adduser adamkurniawan  15. addgroup  Digunakan untuk menambah group baru  Sintaks : addgroup nama_group  Contoh : addgroup grup1  16. lsusb  Digunakan untuk melihat perangkat usb yang sedang terkoneksi ke komputer  Sintaks : lsusb  17. lspci  Digunakan untuk melihat perangkat pci yang sedang terkoneksi ke komputer  Sintaks : lspci  18. lshw  Digunakan untuk melihat hardware komputer.  Sintaks : lshw  19. dmesg  Digunakan untuk melihat hardware yang sedang beraktifitas  Sintaks : dmseg  20. top  Digunakan untuk melihat proses yang sedang berjalan, seperti Task Manager pada Windows.  Sintaks : top  21. cpuinfo  Digunakan untuk melihat spesifikasi komputer.  Sintaks : more /proc/cpuinfo  22. meminfo  Digunakan untuk melihat status RAM  Sintaks : more /proc/meminfo  23. clear  Digunakan untuk membersihkan layar  Sintaks : clear  24. halt  Digunakan untuk mematikan komputer, namun harus sebagai root.  Sintaks : halt  25. reboot  Digunakan untuk merestart komputer, namun harus sebagai root.  Sintaks : reboot  26. exit  Digunakan untuk keluar dari terminal.  Sintaks : exit  27. wget  Digunakan untuk mendownload via terminal  Sintaks : wget link_download  Contoh : wget www.insightcalendar.com/Insight_Calendar_1-1_Setup.exe  28. ifconfig  Digunakan untuk melihat konfigurasi ethernet/kartu jaringan.  Sintaks : ifconfig  29. apt-get  Digunakan untuk memperoleh paket/software dari repository ubuntu secara online.  Sintax : apt-get nama_paket  Contoh :  apt-get update (untuk melakukan update repository)  apt-get update wine (untuk mendapatkan paket wine)  30. tar  Digunakan untuk melakukan extract file.  Sintaks : tar [parameter] nama_file  Contoh : tar -xzvf komodo-edit-5.2.4-4343-linux-libcpp6-x86.tar.gz  31. nautilus  Digunakan untuk membuka tampilan GUI secara langsung.  Sintaks : nautilus  Contoh : sudo nautilus (menggunakan mode GUI dengan status root)  32. df -h  melihat sisa kapasitas harddisk.  sintaks : df -h  33. who        digunakan untuk melihat nama login kita.  sintaks : who      34. cat             digunakan untuk membuka file.  sintaks : cat          contoh: cat test.txt  35. date    melihat tanggal  sintaks : date  36. cal  melihat kalender  sintaks : melihat tanggal  37. hostname    Menampilkan nama komputer.  sintaks: hostname   38. free        Melihat Free memory.  sintaks: free       39. History  melihat perintah apa saja yang pernah diketik  sintaks : History  40. deluser  Menghapus user dari sistem  sintaks : deluser [nama user]    uname -r = Melihat kernel yang digunakan pada OS  uname -a = Informasi system kernel anda  cat /proc/cpuinfo = Melihat file pada /proc directori yang bukan merupakan file nyata (not real files).  cat /proc/interrupts = Melihat alamat interrupt yang dipakai.  cat /proc/version = Versi dari Linux dan informasi lainnya.  cat /proc/filesystems = Melihat filesystem yang digunakan.  cat /etc/printcap = Melihat printer yang telah disetup  finger username = Melihat informasi user, coba jalankan; fingerroot  last = Melihat user sebelumnya yang telah login di komputer.  uptime = Melihat jumlah waktu pemakaian komputer oleh seseorang, terhitung proses reboot terakhir.  ps (=print status)= Melihat proses-proses yang dijalankan oleh user  ps axu = Melihat seluruh proses yang dijalankan, walaupun tanpa terminal control, juga ditampilkan nama dari user untuk setiap proses.  top = Melihat proses yang berjalan, dengan urutan penggunaan cpu.  apropos =  Untuk mencari perintah pada sistem operasi yang mempunyai fungsi yang sama.   chmod = Mengubah perizinan suatu direktori/file.   wc = Menghitung jumlah kata, jumlah baris dan jumlah karakter dalam suatu file .   man = Singkatan dari manual yaitu untuk menampilkan halaman manual untuk semua perintah UNIX.  grep = Mencari isi suatu file di sembarang directori.   pwd = Menampilkan nama direktori dimana Anda saat itu sedang berada.  ps = Digunakan untuk memonitor informasi tentang proses yang aktif dalam sistem UNIX.   kill =  Digunakan untuk menghentikan proses yang sedang berjalan.   bc = Perintah bc dapat digunakan sebagai calculator.   wall = Pengiriman pesan oleh super user.   :w di gunakan u/ menyimpan file or sama dengan (save).  :q digunakan u/ keluar dari editor tandan mentimpan file.  :wq digunakan u/ keluar dari editor sekaligus menyimpan file.   tail = Menampilkan 10 baris terakhir dari suatu file.  ls \u2013l = Melihat semua file lengkap  ls -a = Menampilkan semua file atau direktori yang tersembunyi  ls -f = Menampilkan semua file atau direktori tanpa proses shorting  grep root /etc/passwd =  Mencari kata atau kalimat dalam file    Referensi Ubuntu      Unix/Linux Command Reference      Itu beberapa command yang saya ingat saat ini yang bisa digunakan dibanyak distro Linux, walaupun ada beberapa yang hanya khusus di Ubuntu saja. Jika ada yang saya ingat lagi, akan saya tambah.", 
            "title": "Perintah dasar Command Line"
        }, 
        {
            "location": "/menu/github/github/", 
            "text": "GITHUB\n\n\n\n\nA. Penjelasan\n\n\nGit adalah tools yang berfungsi sebagai Version Control System (VCS) dan kalau diartikan ke bahasa kita artinya sebuah sistem pelacak perubahan pada file. Git itu bukanlah sebuah bahasa seperti halnya HTML,CSS atau Js bukan pula sebuah konsep atau aturan baku dalam pemrograman, melainkan sebuah software yang berfungsi untuk mengatur source code dari aplikasi yang sedang anda buat.\nFungsi utamanya adalah untuk mengatur versi dari source code anda, menambahkan tanda/checkpoint ketika terjadi perubahan pada kode Anda dan tentunya akan mempermudah Anda untuk tetap mengetahui apa saja yang berubah dari source code Anda. Pada awalnya Git digunakan untuk membantu pengembangan Kernel Linux sebelum akhirnya dipakai lebih luas di berbagai pengembangan software lainnya dan dibuat multi-platform sehingga tersedia di hampir semua OS.\n\n\n\n\nB. Tutorial Installan\n\n\nInstall Github di linux\n\n\n\n\nMenginstall Git untuk Linux\n\n\n\n\nMenginstall Git untuk Ubuntu, kamu hanya perlu mengetik perintah ini di terminal:\n\n\n$ sudo apt-get install git\n\n\n\n\n\n\n\nKonfigurasi Github\n\n\n\n\nKetika proses instalasinya udah berhasil, langkah selanjutnya adalah set up konfigurasi detail untuk user GitHub, dengan mengetikkan kode dibawah ini. Kamu ganti \"user_name\" sama username GitHub kamu dan \"email_id\" kamu ganti sama email-id yang kamu pakai sewaktu membuat akun GitHub kamu. Nah, di bawah ini perintahnya:\n\n\n$ git config --global user.name \nuser_name\n\n$ git config --global user.email \nemail@domain.com\n\n\n\n\n\n\n\n\nC. Tutorial Penggunaan\n\n\nBuat Akun\n\n\n\n\n\n\nMembuka website https://github.com/\n\n\n \n\n\n\n\n\n\nKemudian mengisi Username, Email, dan password , setelah itu akan muncul halaman berikut \n\n\n \n\n\n\n\n\n\nKemudian klik Pilih Sesuai kebutuhan dan Kemudian Continue sampai selesai kemudian akan muncul halaman\n\n\n \n\n\n\n\n\n\nPada Halaman ini kita masih belum bisa menggunakan github karena kita harus memverifikasi akun yang dikirimkan ke email. Buka email kemudian klik verify email address dan akun sudah bisa dipakai.\n\n\n\n\n\n\nUpload File\n\n\nUntuk meupload file di github pertama-tama kita buat folder baru untuk projek kita dan kita beri nama latihan-git dengan menuliskan kode \n\n\n$ mkdir latihan-git\n\n\n\n\n\nSetelah membuat folder latihan-git navigasikan terminal kedalam folder latihan-git dengan perintah\n\n\n$ \ncd\n latihan-git\n\n\n\n\n\nAgar projek kita dapat diatur oleh git, maka kita perlu melakukan inisiasi git terlebih dahulu, caranya dengan mengetikkan perintah :\n\n\n$ git init\n\n\n\n\n\nPerintah tersebut akan membuat folder .git dan didalamnya berisi file-file yang akan digunakan oleh Git untuk mengatur dan mengontrol project kita. \n    Setelah itu buatlah file dalam folder latihan-git yaitu klik kanan kemudian new document contoh beri nama domi. Kemudian ketikkan perintah \n\n\n$ git add domi\n\n\n\n\n\nUntuk mengetahui file sudah berhasil diupload atau tidak ketikka perintah\n\n\n$ git status\n\n\n\n\n\n \n\n\nLalu akan muncul status file\nSetelah file telah terupload kemudian commit file tersebut dengan perintah \n\n\n $ git commit -m \u201cketerangan\u201d\n\n\n\n\n\n \n\n\nCommit berguna untuk menandai file ketika membuat dan diubah kita bisa memberi keterangan misal tanggal.Dan perintah -m untuk menambahkan keterangan misal tanggal.\n\n\nHapus File\n\n\n\n\n\n\nBuka dulu folder project git\n\n\n\n\n\n\nKemudian ketikkan perintah\n\n\n$ git rm \n(\nnama_file\n)\n\n\n$ git commit -m \n(keterangan)\n\n\n\n\n\n\n\n\n\n\nSetelah itu di push lagi\n\n\n$ git push\n\n\n\n\n\n\n\n\n\nBuat Branch\n\n\nMisalkan anda ingin menambahkan suatu fitur, namun anda tidak mau kode yang ada sekarang rusak karena fitur yang akan anda tambahkan masih belum stabil, Dalam Git anda dapat membuat branch terlebih dahulu. Branch ini bisa diartikan sebagai cabang dari branch master. segala perubahan yang anda lakukan pada branch yang anda buat tidak akan berpengaruh pada branch lainnya.\nSebagai contoh kita buat branch dengan nama budak dengan perintah\n\n\n$ git branch budak\n\n\n\n\n\nJika perintah dijalankan dengan benar maka ketika anda mengetikkan perintah git branch akan muncul branch-branch yang telah dibuat.\n\n\n budak\n\n\n\n\n\n\n\nmaster\n\n\n\n\ntanda Bintang menandakan bahwa anda sedang bekerja pada branch master, untuk berpindah ke branch yang baru saja dibuat (fix-css) ketikkan perintah berikut:\n\n\n$ git checkout budak\n\n\n\n\n\nJika peritah di atas benar, maka akan ada pemberitahuan seperti berikut:\n\n\n\n\nSwitched to branch \nbudak\n\n\n\n\n\n\nHapus Branch\n\n\nCara menghapus branch iyalah mengetikkan perintah\n\n\n$ git branch -d branch-name\n\n\n\n\n\nKolaborasi\n\n\n\n\n\n\nBuka Repository Kemudian Pilih Setting\n\n\n\n\n\n\nKemudian Klik Collaboration dan masukkan id atau email yang mau di add pada textbox \n\n\n\n\n\n\nklik \"add collaboration\"\n\n\n\n\n\n\n\n\nFork\n\n\nMengambil File dengan Menu Fork :\n\n\n\n\n\n\nBuka File yang akan di fork di profile orang yang mempunyai file yg ingin di fork \n\n\n\n\n\n\n\n\nsetelah muncul seperti halaman di bawah kemudian klik menu fork di pojok kanan atas \n\n\n\n\n\n\n\n\nsetelah klik fork maka file yg di fork sudah ada di profile \n\n\n\n\n\n\n\n\nKasus\n\n\n\n\n\n\nUntuk mengetahui apa saja yang telah dirubah menurut branch\n\n\n$ git log --decorate\n\n\n\n\n\n\n\n\n\nUntuk mengetahui apa saja yang telah dirubah\n\n\n$ git diff \n(\nmengambil kode action pada branch\n)\n\n\n\n\n\n\n\n\n\n\nUntuk memunculkan apa saja yang file atau folder yang ada di branch yang telah dirubah menurut kode action setiap brach\n\n\n$ git show \n(\nmengambil kode action pada branch\n)\n\n\n\n\n\n\n\n\n\n\nUntuk memunculkan versi agar seimbang\n\n\n$ git log --oneline --decorate\n\n\n\n\n\n\n\n\n\nRebase\n\n\n$ git fetch origin\n\n$ git rebase\n\n\n\n\n\n\n\n\n\nSquash\n\n\n\n\n\n\nSebelum melakukan squash kita lihat status atau interface commit dengan mengetikkan perintah\n\n\n    $ git rebase -i\n\n\n\n\n\nSetelah mengetikkan perintah tersebut akan tampil status commit terakhir dari project kita. Kemudian untuk\nmen squash commit project kita ketikkan perintah\n\n\n    $ git commit -i HEAD~(angka banyaknya commit kita yg ingin disquash)\n\n\n\n\n\nKemudian akan muncul kode dan isi commit. Setelah itu ubah kata \"pick\" menjadi \"squash\" pada commit yang ingin dirubah. Setelah itu tekan CTRL+O kemudian enter kemudian CTRL+X", 
            "title": "Home"
        }, 
        {
            "location": "/menu/github/github/#github", 
            "text": "", 
            "title": "GITHUB"
        }, 
        {
            "location": "/menu/github/github/#a-penjelasan", 
            "text": "Git adalah tools yang berfungsi sebagai Version Control System (VCS) dan kalau diartikan ke bahasa kita artinya sebuah sistem pelacak perubahan pada file. Git itu bukanlah sebuah bahasa seperti halnya HTML,CSS atau Js bukan pula sebuah konsep atau aturan baku dalam pemrograman, melainkan sebuah software yang berfungsi untuk mengatur source code dari aplikasi yang sedang anda buat.\nFungsi utamanya adalah untuk mengatur versi dari source code anda, menambahkan tanda/checkpoint ketika terjadi perubahan pada kode Anda dan tentunya akan mempermudah Anda untuk tetap mengetahui apa saja yang berubah dari source code Anda. Pada awalnya Git digunakan untuk membantu pengembangan Kernel Linux sebelum akhirnya dipakai lebih luas di berbagai pengembangan software lainnya dan dibuat multi-platform sehingga tersedia di hampir semua OS.", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/github/github/#b-tutorial-installan", 
            "text": "", 
            "title": "B. Tutorial Installan"
        }, 
        {
            "location": "/menu/github/github/#install-github-di-linux", 
            "text": "Menginstall Git untuk Linux   Menginstall Git untuk Ubuntu, kamu hanya perlu mengetik perintah ini di terminal:  $ sudo apt-get install git   Konfigurasi Github   Ketika proses instalasinya udah berhasil, langkah selanjutnya adalah set up konfigurasi detail untuk user GitHub, dengan mengetikkan kode dibawah ini. Kamu ganti \"user_name\" sama username GitHub kamu dan \"email_id\" kamu ganti sama email-id yang kamu pakai sewaktu membuat akun GitHub kamu. Nah, di bawah ini perintahnya:  $ git config --global user.name  user_name \n$ git config --global user.email  email@domain.com", 
            "title": "Install Github di linux"
        }, 
        {
            "location": "/menu/github/github/#c-tutorial-penggunaan", 
            "text": "", 
            "title": "C. Tutorial Penggunaan"
        }, 
        {
            "location": "/menu/github/github/#buat-akun", 
            "text": "Membuka website https://github.com/       Kemudian mengisi Username, Email, dan password , setelah itu akan muncul halaman berikut        Kemudian klik Pilih Sesuai kebutuhan dan Kemudian Continue sampai selesai kemudian akan muncul halaman       Pada Halaman ini kita masih belum bisa menggunakan github karena kita harus memverifikasi akun yang dikirimkan ke email. Buka email kemudian klik verify email address dan akun sudah bisa dipakai.", 
            "title": "Buat Akun"
        }, 
        {
            "location": "/menu/github/github/#upload-file", 
            "text": "Untuk meupload file di github pertama-tama kita buat folder baru untuk projek kita dan kita beri nama latihan-git dengan menuliskan kode   $ mkdir latihan-git  Setelah membuat folder latihan-git navigasikan terminal kedalam folder latihan-git dengan perintah  $  cd  latihan-git  Agar projek kita dapat diatur oleh git, maka kita perlu melakukan inisiasi git terlebih dahulu, caranya dengan mengetikkan perintah :  $ git init  Perintah tersebut akan membuat folder .git dan didalamnya berisi file-file yang akan digunakan oleh Git untuk mengatur dan mengontrol project kita. \n    Setelah itu buatlah file dalam folder latihan-git yaitu klik kanan kemudian new document contoh beri nama domi. Kemudian ketikkan perintah   $ git add domi  Untuk mengetahui file sudah berhasil diupload atau tidak ketikka perintah  $ git status     Lalu akan muncul status file\nSetelah file telah terupload kemudian commit file tersebut dengan perintah    $ git commit -m \u201cketerangan\u201d     Commit berguna untuk menandai file ketika membuat dan diubah kita bisa memberi keterangan misal tanggal.Dan perintah -m untuk menambahkan keterangan misal tanggal.", 
            "title": "Upload File"
        }, 
        {
            "location": "/menu/github/github/#hapus-file", 
            "text": "Buka dulu folder project git    Kemudian ketikkan perintah  $ git rm  ( nama_file ) \n\n$ git commit -m  (keterangan)     Setelah itu di push lagi  $ git push", 
            "title": "Hapus File"
        }, 
        {
            "location": "/menu/github/github/#buat-branch", 
            "text": "Misalkan anda ingin menambahkan suatu fitur, namun anda tidak mau kode yang ada sekarang rusak karena fitur yang akan anda tambahkan masih belum stabil, Dalam Git anda dapat membuat branch terlebih dahulu. Branch ini bisa diartikan sebagai cabang dari branch master. segala perubahan yang anda lakukan pada branch yang anda buat tidak akan berpengaruh pada branch lainnya.\nSebagai contoh kita buat branch dengan nama budak dengan perintah  $ git branch budak  Jika perintah dijalankan dengan benar maka ketika anda mengetikkan perintah git branch akan muncul branch-branch yang telah dibuat.   budak   master   tanda Bintang menandakan bahwa anda sedang bekerja pada branch master, untuk berpindah ke branch yang baru saja dibuat (fix-css) ketikkan perintah berikut:  $ git checkout budak  Jika peritah di atas benar, maka akan ada pemberitahuan seperti berikut:   Switched to branch  budak", 
            "title": "Buat Branch"
        }, 
        {
            "location": "/menu/github/github/#hapus-branch", 
            "text": "Cara menghapus branch iyalah mengetikkan perintah  $ git branch -d branch-name", 
            "title": "Hapus Branch"
        }, 
        {
            "location": "/menu/github/github/#kolaborasi", 
            "text": "Buka Repository Kemudian Pilih Setting    Kemudian Klik Collaboration dan masukkan id atau email yang mau di add pada textbox     klik \"add collaboration\"", 
            "title": "Kolaborasi"
        }, 
        {
            "location": "/menu/github/github/#fork", 
            "text": "Mengambil File dengan Menu Fork :    Buka File yang akan di fork di profile orang yang mempunyai file yg ingin di fork      setelah muncul seperti halaman di bawah kemudian klik menu fork di pojok kanan atas      setelah klik fork maka file yg di fork sudah ada di profile", 
            "title": "Fork"
        }, 
        {
            "location": "/menu/github/github/#kasus", 
            "text": "Untuk mengetahui apa saja yang telah dirubah menurut branch  $ git log --decorate    Untuk mengetahui apa saja yang telah dirubah  $ git diff  ( mengambil kode action pada branch )     Untuk memunculkan apa saja yang file atau folder yang ada di branch yang telah dirubah menurut kode action setiap brach  $ git show  ( mengambil kode action pada branch )     Untuk memunculkan versi agar seimbang  $ git log --oneline --decorate    Rebase  $ git fetch origin\n\n$ git rebase    Squash    Sebelum melakukan squash kita lihat status atau interface commit dengan mengetikkan perintah      $ git rebase -i  Setelah mengetikkan perintah tersebut akan tampil status commit terakhir dari project kita. Kemudian untuk\nmen squash commit project kita ketikkan perintah      $ git commit -i HEAD~(angka banyaknya commit kita yg ingin disquash)  Kemudian akan muncul kode dan isi commit. Setelah itu ubah kata \"pick\" menjadi \"squash\" pada commit yang ingin dirubah. Setelah itu tekan CTRL+O kemudian enter kemudian CTRL+X", 
            "title": "Kasus"
        }, 
        {
            "location": "/menu/laravel/laravel/", 
            "text": "Laravel\n\n\n\n\nA. Penjelasan\n\n\nKerangka kerja Laravel memiliki beberapa persyaratan sistem. Tentu saja, semua persyaratan ini dipenuhi oleh mesin virtual Laravel Homestead, jadi sangat disarankan agar Anda menggunakan Homestead sebagai lingkungan pengembangan Laravel setempat.\n\n\nNamun, jika Anda tidak menggunakan Homestead, Anda harus memastikan server Anda memenuhi persyaratan berikut:\n\n\n PHP\n = 5.6.4\n Ekstensi PHP OpenSSL\n PDO PHP Extension\n Ekstensi PHP Mbstring\n Tokenizer PHP Extension\n Ekstensi PHP XML\n\n\n\n\n\n\n\nB. Tutorial Install\n\n\nInstall laravel\n\n\nTutorial install PHP di Linux Ubuntu 16.04 desktop :\n\n\na. Install Laravel\n\n\n\n\n\n\nBuka Web Resmi laravel.com \n\n\n\n\n\n\nUpdate seluruh aplikasi\n\n\nsudo apt-get update\n\n\n\n\n\n\n\n\n\nCek versi php\n\n\nphp --version atau php -v //mengetahui versi php\n\n\n\n\n\n\n\n\n\nJika Anda tidak menggunakan Homestead, Anda harus memastikan server Anda memenuhi persyaratan berikut:\n\n\n PHP\n = 5.6.4\n Ekstensi PHP OpenSSL\n PDO PHP Extension\n Ekstensi PHP Mbstring\n Tokenizer PHP Extension\n Ekstensi PHP XML\n\n\n\n\n\nLalu cek apakah sudah memenuhi syarat\n\n\n\n\n\n\ncek openssl, pdo (sudah ada), cek mbstring (belum ada)\n\n\nphp -m\n\nsudo apt-get install php-mbstring\n\n\n\n\n\n\n\n\n\ncek tokenizer (sudah ada), cek php-XML (belum ada)\n\n\nphp -m\n\nsudo apt-get install php-xml\n\n\n\n\n\n\n\n\n\n\n\n\n\nb. Install Composer\n\n\n\n\n\n\nBuka link composer\n\n\n\n\n\n\nKlik download\n\n\nphp\n \n-r\n \ncopy(\nhttps://getcomposer.org/installer\n, \ncomposer-setup.php\n);\n\n\n\nls\n \n-al\n\n\n\nphp\n \n-r\n \nif (hash_file(\nSHA384\n, \ncomposer-setup.php\n) === \n669656bab3166a7aff8a7506b8cb2d1c292f042046c5a994c43155c0be6190fa0355160742ab2e1c88d40d5be660b410\n) { echo \nInstaller verified\n; } else { echo \nInstaller corrupt\n; unlink(\ncomposer-setup.php\n); } echo PHP_EOL;\n  \n//\ninstaller\n \nverivikasi\n\n\n\nphp\n \ncomposer-setup\n.\nphp\n \n//\ncomposer\n \nphar\n\n\n\nphp\n \n-r\n \nunlink(\ncomposer-setup.php\n);\n\n\n\nphp\n \ncomposer\n.\nphar\n\n\n\nphp\n \ncomposer\n.\nphar\n \ncomposer\n \nglobal\n \nrequire\n \nlaravel/installer\n\n\n\n\n\n\n\n\n\n\nBuka link composer\n\n\n\n\n\n\nKlik Getting started\n\n\n\n\n\n\nKlik global\n\n\nsudo mv composer.phar /usr/local/bin/composer\n\ncomposer\n\ncomposer create-project --prefer-dist laravel/laravel newProject\n\n\n\n\n\n\n\n\n\nc. Mengedit Project\n\n\n\n\n\n\nKlik kanan folder yg telah dibuat\n\n\n\n\n\n\nOpen with \n\n\n\n\n\n\nOther application\n\n\n\n\n\n\nView all aplication\n\n\n\n\n\n\nPilih Teks editor kamu\n\n\n\n\n\n\nFile-open folder\n\n\n\n\n\n\n\n\nC. Tutorial Penggunaan\n\n\nKonsep Framework\n\n\n\n\n\n\nRoutes -\n web.md\n\n\n \n\n\n\n\nweb.md\n?php\n\n\n\n/*\n\n\n|--------------------------------------------------------------------------\n\n\n| Web Routes\n\n\n|--------------------------------------------------------------------------\n\n\n|\n\n\n| Here is where you can register web routes for your application. These\n\n\n| routes are loaded by the RouteServiceProvider within a group which\n\n\n| contains the \nweb\n middleware group. Now create something great!\n\n\n|\n\n\n*/\n\n\n\nRoute\n::\nget\n(\n/\n,\n \nfunction\n \n()\n \n{\n\n    \nreturn\n \nview\n(\nwelcome\n);\n\n\n});\n\n\n\nRoute\n::\nget\n(\n/admin\n,\n \nfunction\n \n()\n \n{\n\n    \nreturn\n \nview\n(\nadmin\n);\n\n\n});\n\n\n\nRoute\n::\nget\n(\n/artikel\n,\n \nfunction\n \n()\n \n{\n\n    \nreturn\n \nview\n(\nartikel\n);\n\n\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nResorces -\n views \n\n\n \n\n\n \n\n\n\n\n\n\nwelcome.blade.php\n\n\n!\ndoctype\n \nhtml\n\n\nhtml\n \nlang\n=\n{{ config(\napp.locale\n) }}\n\n    \nhead\n\n        \nmeta\n \ncharset\n=\nutf-8\n\n        \nmeta\n \nhttp\n-\nequiv\n=\nX-UA-Compatible\n \ncontent\n=\nIE=edge\n\n        \nmeta\n \nname\n=\nviewport\n \ncontent\n=\nwidth=device-width, initial-scale=1\n\n\n        \ntitle\nLaravel\n/\ntitle\n\n\n        \n!--\n \nFonts\n \n--\n\n        \nlink\n \nhref\n=\nhttps://fonts.googleapis.com/css?family=Raleway:100,600\n \nrel\n=\nstylesheet\n \ntype\n=\ntext/css\n\n\n        \n!--\n \nStyles\n \n--\n\n        \nstyle\n\n            \nhtml\n,\n \nbody\n \n{\n\n                \nbackground\n-\ncolor\n:\n \n#\nfff\n;\n\n                \ncolor\n:\n \n#\n636\nb6f\n;\n\n                \nfont\n-\nfamily\n:\n \nRaleway\n,\n \nsans\n-\nserif\n;\n\n                \nfont\n-\nweight\n:\n \n100\n;\n\n                \nheight\n:\n \n100\nvh\n;\n\n                \nmargin\n:\n \n0\n;\n\n            \n}\n\n\n            \n.\nfull\n-\nheight\n \n{\n\n                \nheight\n:\n \n100\nvh\n;\n\n            \n}\n\n\n            \n.\nflex\n-\ncenter\n \n{\n\n                \nalign\n-\nitems\n:\n \ncenter\n;\n\n                \ndisplay\n:\n \nflex\n;\n\n                \njustify\n-\ncontent\n:\n \ncenter\n;\n\n            \n}\n\n\n            \n.\nposition\n-\nref\n \n{\n\n                \nposition\n:\n \nrelative\n;\n\n            \n}\n\n\n            \n.\ntop\n-\nright\n \n{\n\n                \nposition\n:\n \nabsolute\n;\n\n                \nright\n:\n \n10\npx\n;\n\n                \ntop\n:\n \n18\npx\n;\n\n            \n}\n\n\n            \n.\ncontent\n \n{\n\n                \ntext\n-\nalign\n:\n \ncenter\n;\n\n            \n}\n\n\n            \n.\ntitle\n \n{\n\n                \nfont\n-\nsize\n:\n \n84\npx\n;\n\n            \n}\n\n\n            \n.\nlinks\n \n \na\n \n{\n\n                \ncolor\n:\n \n#\n636\nb6f\n;\n\n                \npadding\n:\n \n0\n \n25\npx\n;\n\n                \nfont\n-\nsize\n:\n \n12\npx\n;\n\n                \nfont\n-\nweight\n:\n \n600\n;\n\n                \nletter\n-\nspacing\n:\n \n.1\nrem\n;\n\n                \ntext\n-\ndecoration\n:\n \nnone\n;\n\n                \ntext\n-\ntransform\n:\n \nuppercase\n;\n\n            \n}\n\n\n            \n.\nm\n-\nb\n-\nmd\n \n{\n\n                \nmargin\n-\nbottom\n:\n \n30\npx\n;\n\n            \n}\n\n        \n/\nstyle\n\n    \n/\nhead\n\n    \nbody\n\n        \ndiv\n \nclass\n=\nflex-center position-ref full-height\n\n            \n@\nif\n \n(\nRoute\n::\nhas\n(\nlogin\n))\n\n                \ndiv\n \nclass\n=\ntop-right links\n\n                    \n@\nif\n \n(\nAuth\n::\ncheck\n())\n\n                        \na\n \nhref\n=\n{{ url(\n/home\n) }}\nHome\n/\na\n\n                    \n@\nelse\n\n                        \na\n \nhref\n=\n{{ url(\n/login\n) }}\nLogin\n/\na\n\n                        \na\n \nhref\n=\n{{ url(\n/register\n) }}\nRegister\n/\na\n\n                    \n@\nendif\n\n                \n/\ndiv\n\n            \n@\nendif\n\n\n            \ndiv\n \nclass\n=\nmenu\n\n                \na\n \nhref\n=\nartikel\nartikel\n/\na\n\n                \na\n \nhref\n=\nadmin\nhalaman\n \nadmin\n/\na\n\n            \n/\ndiv\n\n\n            \ndiv\n \nclass\n=\ncontent\n\n                \nSelamat\n \ndatang\n \ndihalaman\n \nutama\n\n            \n/\ndiv\n\n        \n/\ndiv\n\n    \n/\nbody\n\n\n/\nhtml\n\n\n\n\n\n\n\n\n\n\nadmin.blade.php\n\n\n!\ndoctype\n \nhtml\n\n\nhtml\n \nlang\n=\n{{ config(\napp.locale\n) }}\n\n    \nhead\n\n        \nmeta\n \ncharset\n=\nutf-8\n\n        \nmeta\n \nhttp\n-\nequiv\n=\nX-UA-Compatible\n \ncontent\n=\nIE=edge\n\n        \nmeta\n \nname\n=\nviewport\n \ncontent\n=\nwidth=device-width, initial-scale=1\n\n\n        \ntitle\nLaravel\n/\ntitle\n\n\n        \n!--\n \nFonts\n \n--\n\n        \nlink\n \nhref\n=\nhttps://fonts.googleapis.com/css?family=Raleway:100,600\n \nrel\n=\nstylesheet\n \ntype\n=\ntext/css\n\n\n        \n!--\n \nStyles\n \n--\n\n        \nstyle\n\n            \nhtml\n,\n \nbody\n \n{\n\n                \nbackground\n-\ncolor\n:\n \n#\nfff\n;\n\n                \ncolor\n:\n \n#\n636\nb6f\n;\n\n                \nfont\n-\nfamily\n:\n \nRaleway\n,\n \nsans\n-\nserif\n;\n\n                \nfont\n-\nweight\n:\n \n100\n;\n\n                \nheight\n:\n \n100\nvh\n;\n\n                \nmargin\n:\n \n0\n;\n\n            \n}\n\n\n            \n.\nfull\n-\nheight\n \n{\n\n                \nheight\n:\n \n100\nvh\n;\n\n            \n}\n\n\n            \n.\nflex\n-\ncenter\n \n{\n\n                \nalign\n-\nitems\n:\n \ncenter\n;\n\n                \ndisplay\n:\n \nflex\n;\n\n                \njustify\n-\ncontent\n:\n \ncenter\n;\n\n            \n}\n\n\n            \n.\nposition\n-\nref\n \n{\n\n                \nposition\n:\n \nrelative\n;\n\n            \n}\n\n\n            \n.\ntop\n-\nright\n \n{\n\n                \nposition\n:\n \nabsolute\n;\n\n                \nright\n:\n \n10\npx\n;\n\n                \ntop\n:\n \n18\npx\n;\n\n            \n}\n\n\n            \n.\ncontent\n \n{\n\n                \ntext\n-\nalign\n:\n \ncenter\n;\n\n            \n}\n\n\n            \n.\ntitle\n \n{\n\n                \nfont\n-\nsize\n:\n \n84\npx\n;\n\n            \n}\n\n\n            \n.\nlinks\n \n \na\n \n{\n\n                \ncolor\n:\n \n#\n636\nb6f\n;\n\n                \npadding\n:\n \n0\n \n25\npx\n;\n\n                \nfont\n-\nsize\n:\n \n12\npx\n;\n\n                \nfont\n-\nweight\n:\n \n600\n;\n\n                \nletter\n-\nspacing\n:\n \n.1\nrem\n;\n\n                \ntext\n-\ndecoration\n:\n \nnone\n;\n\n                \ntext\n-\ntransform\n:\n \nuppercase\n;\n\n            \n}\n\n\n            \n.\nm\n-\nb\n-\nmd\n \n{\n\n                \nmargin\n-\nbottom\n:\n \n30\npx\n;\n\n            \n}\n\n        \n/\nstyle\n\n    \n/\nhead\n\n    \nbody\n\n        \ndiv\n \nclass\n=\nflex-center position-ref full-height\n\n            \n@\nif\n \n(\nRoute\n::\nhas\n(\nlogin\n))\n\n                \ndiv\n \nclass\n=\ntop-right links\n\n                    \n@\nif\n \n(\nAuth\n::\ncheck\n())\n\n                        \na\n \nhref\n=\n{{ url(\n/home\n) }}\nHome\n/\na\n\n                    \n@\nelse\n\n                        \na\n \nhref\n=\n{{ url(\n/login\n) }}\nLogin\n/\na\n\n                        \na\n \nhref\n=\n{{ url(\n/register\n) }}\nRegister\n/\na\n\n                    \n@\nendif\n\n                \n/\ndiv\n\n            \n@\nendif\n\n\n            \ndiv\n \nclass\n=\nmenu\n\n                \na\n \nhref\n=\nartikel\nartikel\n/\na\n\n                \na\n \nhref\n=\nadmin\nhalaman\n \nadmin\n/\na\n\n            \n/\ndiv\n\n\n            \ndiv\n \nclass\n=\ncontent\n\n                \nSelamat\n \ndatang\n \ndihalaman\n \nadmin\n\n            \n/\ndiv\n\n        \n/\ndiv\n\n    \n/\nbody\n\n\n/\nhtml\n\n\n\n\n\n\n\n\n\n\nartikel.blade.php\n\n\n!\ndoctype\n \nhtml\n\n\nhtml\n \nlang\n=\n{{ config(\napp.locale\n) }}\n\n    \nhead\n\n        \nmeta\n \ncharset\n=\nutf-8\n\n        \nmeta\n \nhttp\n-\nequiv\n=\nX-UA-Compatible\n \ncontent\n=\nIE=edge\n\n        \nmeta\n \nname\n=\nviewport\n \ncontent\n=\nwidth=device-width, initial-scale=1\n\n\n        \ntitle\nLaravel\n/\ntitle\n\n\n        \n!--\n \nFonts\n \n--\n\n        \nlink\n \nhref\n=\nhttps://fonts.googleapis.com/css?family=Raleway:100,600\n \nrel\n=\nstylesheet\n \ntype\n=\ntext/css\n\n\n        \n!--\n \nStyles\n \n--\n\n        \nstyle\n\n            \nhtml\n,\n \nbody\n \n{\n\n                \nbackground\n-\ncolor\n:\n \n#\nfff\n;\n\n                \ncolor\n:\n \n#\n636\nb6f\n;\n\n                \nfont\n-\nfamily\n:\n \nRaleway\n,\n \nsans\n-\nserif\n;\n\n                \nfont\n-\nweight\n:\n \n100\n;\n\n                \nheight\n:\n \n100\nvh\n;\n\n                \nmargin\n:\n \n0\n;\n\n            \n}\n\n\n            \n.\nfull\n-\nheight\n \n{\n\n                \nheight\n:\n \n100\nvh\n;\n\n            \n}\n\n\n            \n.\nflex\n-\ncenter\n \n{\n\n                \nalign\n-\nitems\n:\n \ncenter\n;\n\n                \ndisplay\n:\n \nflex\n;\n\n                \njustify\n-\ncontent\n:\n \ncenter\n;\n\n            \n}\n\n\n            \n.\nposition\n-\nref\n \n{\n\n                \nposition\n:\n \nrelative\n;\n\n            \n}\n\n\n            \n.\ntop\n-\nright\n \n{\n\n                \nposition\n:\n \nabsolute\n;\n\n                \nright\n:\n \n10\npx\n;\n\n                \ntop\n:\n \n18\npx\n;\n\n            \n}\n\n\n            \n.\ncontent\n \n{\n\n                \ntext\n-\nalign\n:\n \ncenter\n;\n\n            \n}\n\n\n            \n.\ntitle\n \n{\n\n                \nfont\n-\nsize\n:\n \n84\npx\n;\n\n            \n}\n\n\n            \n.\nlinks\n \n \na\n \n{\n\n                \ncolor\n:\n \n#\n636\nb6f\n;\n\n                \npadding\n:\n \n0\n \n25\npx\n;\n\n                \nfont\n-\nsize\n:\n \n12\npx\n;\n\n                \nfont\n-\nweight\n:\n \n600\n;\n\n                \nletter\n-\nspacing\n:\n \n.1\nrem\n;\n\n                \ntext\n-\ndecoration\n:\n \nnone\n;\n\n                \ntext\n-\ntransform\n:\n \nuppercase\n;\n\n            \n}\n\n\n            \n.\nm\n-\nb\n-\nmd\n \n{\n\n                \nmargin\n-\nbottom\n:\n \n30\npx\n;\n\n            \n}\n\n        \n/\nstyle\n\n    \n/\nhead\n\n    \nbody\n\n        \ndiv\n \nclass\n=\nflex-center position-ref full-height\n\n            \n@\nif\n \n(\nRoute\n::\nhas\n(\nlogin\n))\n\n                \ndiv\n \nclass\n=\ntop-right links\n\n                    \n@\nif\n \n(\nAuth\n::\ncheck\n())\n\n                        \na\n \nhref\n=\n{{ url(\n/home\n) }}\nHome\n/\na\n\n                    \n@\nelse\n\n                        \na\n \nhref\n=\n{{ url(\n/login\n) }}\nLogin\n/\na\n\n                        \na\n \nhref\n=\n{{ url(\n/register\n) }}\nRegister\n/\na\n\n                    \n@\nendif\n\n                \n/\ndiv\n\n            \n@\nendif\n\n\n            \ndiv\n \nclass\n=\nmenu\n\n                \na\n \nhref\n=\nartikel\nartikel\n/\na\n\n                \na\n \nhref\n=\nadmin\nhalaman\n \nadmin\n/\na\n\n            \n/\ndiv\n\n\n            \ndiv\n \nclass\n=\ncontent\n\n                \nSelamat\n \ndatang\n \ndihalaman\n \nartikel\n\n            \n/\ndiv\n\n        \n/\ndiv\n\n    \n/\nbody\n\n\n/\nhtml\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutput\n\n\n \n\n\n\n\n\n\nTemplating\n\n\n\n\n\n\nDownload bootstrap\n\n\n \n\n\n\n\n\n\nPublic \n\n\n \n\n\n\n\n\n\nResorces -\n views", 
            "title": "Home"
        }, 
        {
            "location": "/menu/laravel/laravel/#laravel", 
            "text": "", 
            "title": "Laravel"
        }, 
        {
            "location": "/menu/laravel/laravel/#a-penjelasan", 
            "text": "Kerangka kerja Laravel memiliki beberapa persyaratan sistem. Tentu saja, semua persyaratan ini dipenuhi oleh mesin virtual Laravel Homestead, jadi sangat disarankan agar Anda menggunakan Homestead sebagai lingkungan pengembangan Laravel setempat.  Namun, jika Anda tidak menggunakan Homestead, Anda harus memastikan server Anda memenuhi persyaratan berikut:   PHP  = 5.6.4\n Ekstensi PHP OpenSSL\n PDO PHP Extension\n Ekstensi PHP Mbstring\n Tokenizer PHP Extension\n Ekstensi PHP XML", 
            "title": "A. Penjelasan"
        }, 
        {
            "location": "/menu/laravel/laravel/#b-tutorial-install", 
            "text": "", 
            "title": "B. Tutorial Install"
        }, 
        {
            "location": "/menu/laravel/laravel/#install-laravel", 
            "text": "Tutorial install PHP di Linux Ubuntu 16.04 desktop :  a. Install Laravel    Buka Web Resmi laravel.com     Update seluruh aplikasi  sudo apt-get update    Cek versi php  php --version atau php -v //mengetahui versi php    Jika Anda tidak menggunakan Homestead, Anda harus memastikan server Anda memenuhi persyaratan berikut:   PHP  = 5.6.4\n Ekstensi PHP OpenSSL\n PDO PHP Extension\n Ekstensi PHP Mbstring\n Tokenizer PHP Extension\n Ekstensi PHP XML  Lalu cek apakah sudah memenuhi syarat    cek openssl, pdo (sudah ada), cek mbstring (belum ada)  php -m\n\nsudo apt-get install php-mbstring    cek tokenizer (sudah ada), cek php-XML (belum ada)  php -m\n\nsudo apt-get install php-xml      b. Install Composer    Buka link composer    Klik download  php   -r   copy( https://getcomposer.org/installer ,  composer-setup.php );  ls   -al  php   -r   if (hash_file( SHA384 ,  composer-setup.php ) ===  669656bab3166a7aff8a7506b8cb2d1c292f042046c5a994c43155c0be6190fa0355160742ab2e1c88d40d5be660b410 ) { echo  Installer verified ; } else { echo  Installer corrupt ; unlink( composer-setup.php ); } echo PHP_EOL;    // installer   verivikasi  php   composer-setup . php   // composer   phar  php   -r   unlink( composer-setup.php );  php   composer . phar  php   composer . phar   composer   global   require   laravel/installer     Buka link composer    Klik Getting started    Klik global  sudo mv composer.phar /usr/local/bin/composer\n\ncomposer\n\ncomposer create-project --prefer-dist laravel/laravel newProject    c. Mengedit Project    Klik kanan folder yg telah dibuat    Open with     Other application    View all aplication    Pilih Teks editor kamu    File-open folder", 
            "title": "Install laravel"
        }, 
        {
            "location": "/menu/laravel/laravel/#c-tutorial-penggunaan", 
            "text": "", 
            "title": "C. Tutorial Penggunaan"
        }, 
        {
            "location": "/menu/laravel/laravel/#konsep-framework", 
            "text": "Routes -  web.md      web.md ?php  /*  |--------------------------------------------------------------------------  | Web Routes  |--------------------------------------------------------------------------  |  | Here is where you can register web routes for your application. These  | routes are loaded by the RouteServiceProvider within a group which  | contains the  web  middleware group. Now create something great!  |  */  Route :: get ( / ,   function   ()   { \n     return   view ( welcome );  });  Route :: get ( /admin ,   function   ()   { \n     return   view ( admin );  });  Route :: get ( /artikel ,   function   ()   { \n     return   view ( artikel );  });       Resorces -  views           welcome.blade.php  ! doctype   html  html   lang = {{ config( app.locale ) }} \n     head \n         meta   charset = utf-8 \n         meta   http - equiv = X-UA-Compatible   content = IE=edge \n         meta   name = viewport   content = width=device-width, initial-scale=1 \n\n         title Laravel / title \n\n         !--   Fonts   -- \n         link   href = https://fonts.googleapis.com/css?family=Raleway:100,600   rel = stylesheet   type = text/css \n\n         !--   Styles   -- \n         style \n             html ,   body   { \n                 background - color :   # fff ; \n                 color :   # 636 b6f ; \n                 font - family :   Raleway ,   sans - serif ; \n                 font - weight :   100 ; \n                 height :   100 vh ; \n                 margin :   0 ; \n             } \n\n             . full - height   { \n                 height :   100 vh ; \n             } \n\n             . flex - center   { \n                 align - items :   center ; \n                 display :   flex ; \n                 justify - content :   center ; \n             } \n\n             . position - ref   { \n                 position :   relative ; \n             } \n\n             . top - right   { \n                 position :   absolute ; \n                 right :   10 px ; \n                 top :   18 px ; \n             } \n\n             . content   { \n                 text - align :   center ; \n             } \n\n             . title   { \n                 font - size :   84 px ; \n             } \n\n             . links     a   { \n                 color :   # 636 b6f ; \n                 padding :   0   25 px ; \n                 font - size :   12 px ; \n                 font - weight :   600 ; \n                 letter - spacing :   .1 rem ; \n                 text - decoration :   none ; \n                 text - transform :   uppercase ; \n             } \n\n             . m - b - md   { \n                 margin - bottom :   30 px ; \n             } \n         / style \n     / head \n     body \n         div   class = flex-center position-ref full-height \n             @ if   ( Route :: has ( login )) \n                 div   class = top-right links \n                     @ if   ( Auth :: check ()) \n                         a   href = {{ url( /home ) }} Home / a \n                     @ else \n                         a   href = {{ url( /login ) }} Login / a \n                         a   href = {{ url( /register ) }} Register / a \n                     @ endif \n                 / div \n             @ endif \n\n             div   class = menu \n                 a   href = artikel artikel / a \n                 a   href = admin halaman   admin / a \n             / div \n\n             div   class = content \n                 Selamat   datang   dihalaman   utama \n             / div \n         / div \n     / body  / html     admin.blade.php  ! doctype   html  html   lang = {{ config( app.locale ) }} \n     head \n         meta   charset = utf-8 \n         meta   http - equiv = X-UA-Compatible   content = IE=edge \n         meta   name = viewport   content = width=device-width, initial-scale=1 \n\n         title Laravel / title \n\n         !--   Fonts   -- \n         link   href = https://fonts.googleapis.com/css?family=Raleway:100,600   rel = stylesheet   type = text/css \n\n         !--   Styles   -- \n         style \n             html ,   body   { \n                 background - color :   # fff ; \n                 color :   # 636 b6f ; \n                 font - family :   Raleway ,   sans - serif ; \n                 font - weight :   100 ; \n                 height :   100 vh ; \n                 margin :   0 ; \n             } \n\n             . full - height   { \n                 height :   100 vh ; \n             } \n\n             . flex - center   { \n                 align - items :   center ; \n                 display :   flex ; \n                 justify - content :   center ; \n             } \n\n             . position - ref   { \n                 position :   relative ; \n             } \n\n             . top - right   { \n                 position :   absolute ; \n                 right :   10 px ; \n                 top :   18 px ; \n             } \n\n             . content   { \n                 text - align :   center ; \n             } \n\n             . title   { \n                 font - size :   84 px ; \n             } \n\n             . links     a   { \n                 color :   # 636 b6f ; \n                 padding :   0   25 px ; \n                 font - size :   12 px ; \n                 font - weight :   600 ; \n                 letter - spacing :   .1 rem ; \n                 text - decoration :   none ; \n                 text - transform :   uppercase ; \n             } \n\n             . m - b - md   { \n                 margin - bottom :   30 px ; \n             } \n         / style \n     / head \n     body \n         div   class = flex-center position-ref full-height \n             @ if   ( Route :: has ( login )) \n                 div   class = top-right links \n                     @ if   ( Auth :: check ()) \n                         a   href = {{ url( /home ) }} Home / a \n                     @ else \n                         a   href = {{ url( /login ) }} Login / a \n                         a   href = {{ url( /register ) }} Register / a \n                     @ endif \n                 / div \n             @ endif \n\n             div   class = menu \n                 a   href = artikel artikel / a \n                 a   href = admin halaman   admin / a \n             / div \n\n             div   class = content \n                 Selamat   datang   dihalaman   admin \n             / div \n         / div \n     / body  / html     artikel.blade.php  ! doctype   html  html   lang = {{ config( app.locale ) }} \n     head \n         meta   charset = utf-8 \n         meta   http - equiv = X-UA-Compatible   content = IE=edge \n         meta   name = viewport   content = width=device-width, initial-scale=1 \n\n         title Laravel / title \n\n         !--   Fonts   -- \n         link   href = https://fonts.googleapis.com/css?family=Raleway:100,600   rel = stylesheet   type = text/css \n\n         !--   Styles   -- \n         style \n             html ,   body   { \n                 background - color :   # fff ; \n                 color :   # 636 b6f ; \n                 font - family :   Raleway ,   sans - serif ; \n                 font - weight :   100 ; \n                 height :   100 vh ; \n                 margin :   0 ; \n             } \n\n             . full - height   { \n                 height :   100 vh ; \n             } \n\n             . flex - center   { \n                 align - items :   center ; \n                 display :   flex ; \n                 justify - content :   center ; \n             } \n\n             . position - ref   { \n                 position :   relative ; \n             } \n\n             . top - right   { \n                 position :   absolute ; \n                 right :   10 px ; \n                 top :   18 px ; \n             } \n\n             . content   { \n                 text - align :   center ; \n             } \n\n             . title   { \n                 font - size :   84 px ; \n             } \n\n             . links     a   { \n                 color :   # 636 b6f ; \n                 padding :   0   25 px ; \n                 font - size :   12 px ; \n                 font - weight :   600 ; \n                 letter - spacing :   .1 rem ; \n                 text - decoration :   none ; \n                 text - transform :   uppercase ; \n             } \n\n             . m - b - md   { \n                 margin - bottom :   30 px ; \n             } \n         / style \n     / head \n     body \n         div   class = flex-center position-ref full-height \n             @ if   ( Route :: has ( login )) \n                 div   class = top-right links \n                     @ if   ( Auth :: check ()) \n                         a   href = {{ url( /home ) }} Home / a \n                     @ else \n                         a   href = {{ url( /login ) }} Login / a \n                         a   href = {{ url( /register ) }} Register / a \n                     @ endif \n                 / div \n             @ endif \n\n             div   class = menu \n                 a   href = artikel artikel / a \n                 a   href = admin halaman   admin / a \n             / div \n\n             div   class = content \n                 Selamat   datang   dihalaman   artikel \n             / div \n         / div \n     / body  / html       Output", 
            "title": "Konsep Framework"
        }, 
        {
            "location": "/menu/laravel/laravel/#templating", 
            "text": "Download bootstrap       Public        Resorces -  views", 
            "title": "Templating"
        }
    ]
}